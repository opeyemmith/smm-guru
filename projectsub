Hi, myself Mohammed Fazan and in today&#39;s
video we are going to code a business.
You heard it right. In this project, in
this two to three part project video, we
are going to code a business that is a
social media marketing tool. By the way,
if you ever heard about social media
marketing tool, so it&#39;s a really a
popular thing on Google and also in
companies. If someone launch their
startup they need they need Instagram
follower they need their Instagram view
uh real res views like and everything
they need. So here we are going to build
uh that kind of business I can say we
will code in our favorite frameworks in
next years. So we will build that kind
of video or you can find them you can
find your potential customers to uh uh
for buying the followers from you maybe
likes maybe comments anything and and
one more thing I want to tell you this
project is not limited to only Instagram
you can sell I mean you can sell uh
services for any social media even uh
YouTube even Instagram even telegram
even LinkedIn even anything anything I
don&#39;t know the social media all social
media&#39;s name. I am not a user of
Instagram. I have account but I hate to
use Instagram. I have I have no
Instagram. I have no Facebook in social
media. I have only WhatsApp and YouTube
not more than that WhatsApp for my
personal chatting and for and YouTube
for my learning purpose. By the way, I
am I can&#39;t tell you everything because
YouTube policy is so strict. If I tell
you everything, so it will going to
problematic thing for me. uh if you are
the a follower of mine uh from starting
so you know in December I have launched
uh project okay which is the downloading
after 24 hour YouTube deleted that
project so I don&#39;t want to repeat that
kind of mistake so that&#39;s I am not
openly talk here but but if you want to
know about the full potential of this
project so you can just watch the
project and one more thing I want to
tell you if you want to launch this kind
of business so you can connect me
because this project is built on YouTube
standards. Uh by the way, if you are
thinking I have only used YouTube in
instructor
that mean it&#39;s a basic project. No, it&#39;s
a standard like the full stack mastery.
It&#39;s me ignore it. JavaScript mastery
and code bit nu and and and I I haven&#39;t
just jostrite coding that kind of
standard. If you want to launch the
business around this so you can connect
me because uh for launching the business
you need enterprise code we can say you
need enterprise server with QQ system
refill cancellation everything you want.
So I will build that for you. So if you
are interested then you can connect me
on LinkedIn, you can connect me on
email. So just you can mail me or
connect me on Instagram. So we will
collaborate and I will build that
business for you. So you have just
launch and run your business. And one b
thing I want to tell you uh I have
created a discord server. So if you are
interested in my community so you can
join. Okay. Currently this my discord
server have no users no members. So
maybe you are the first one. So I will
uh put name somewhere and also I will
put the link of the my discord server in
description. So you can join from there.
And and and one more thing that for me
somewhere I will displayed my buy me a
coffee link if you are interested to
support me. Yeah, you can support me and
and and and one thing many people ask me
in comment this project I mean this full
project is entirely free. I am not going
to charge you for anything not for code
not for process some other parts nothing
everything will going to free. And now
let&#39;s begin with the intro.
Okay, so this is our project and now you
can see the landing page. By the way,
this is the new order section page and
look at this. How beautiful this is the
swiper. You can say if I hover here,
this will stop here. Okay, now you can
say uh some cards and also the why
choose your section for more to more
detail and also there is a policy pages
sections. Okay. and the copyright
section. And now this is end. And now
also uh every SMM panel has the service
section. Okay, for unauthenticated user.
So I have also implemented that service
section that is for unauthenticated user
because uh by the way if you feel this
slow the reason is this because I am
using the local development server
that&#39;s why it feels slow uh but not a
problem. Okay. So now you can see uh we
I have added all Instagram services. If
you want you can add more services here.
And by the way, these services are
linked from the wholesaler API. So I
will tell you about that later. So for
but just for now uh just look at the
demo. So now let me go on the dashboard.
Uh first now let me uh Okay. By the way,
worry not uh I will log out after the
demo. Okay. Okay. So now it&#39;s our new
order page. And now it&#39;s time to
demonstrate you the order section. Okay.
So I have created a new Instagram
account. It&#39;s just a test account uh to
demonstrate you. Uh I have just created
you can see just just I have created
almost 5 minute ago this account. So I
have purchased 10 followers. Okay. So I
am going to purchase again at 10
followers. So don&#39;t follow this account.
Uh uh I don&#39;t I will I will maybe delete
this account or I&#39;ll just leave it as it
did. That is it. So uh don&#39;t follow this
account. Okay. So come here and now let
me select the service Instagram. And now
select the service followers. And now
let me put the uh my URL of the my
profile. And now let me just place the
order. Okay. So now you can see the
order is successfully created. And also
the wallet detected. By the way uh I
have uh make us make a second order made
a second order after some 10 because the
previous time my UI was locked due to I
have made the order previously and
within 10 hour I have also created a
second order with the same account.
That&#39;s why uh the service provider
blocked sometime by the way is not
service provider is not blocking just
saving the money uh to creating a
multiple orders for a same account I can
say duplicate orders so that&#39;s why they
are preventing towards so just I have
bait for 10 hour I mean 10 minute after
the 10 minute I was again able to uh
order okay so now I have ordered
successfully so it&#39;s 10 let me refresh
it
okay so now you can see it&#39;s 20 So our
uh followers is successfully created and
by the way the the wholesaler I am using
which is the sales media uh I know
multiple source uh wholesalers. So worry
note I will tell you all the about all
about the so wholesalers in the video
but for now just uh think about this uh
this is the wholesaler which I am using
for this project and here let me see you
have placed five order thank you for
continue trusted okay not a problem by
the way if you made almost 5200 order so
they will give you a custom prices uh
below than others so you can get a
custom prices so you can sell uh at the
prices of they are selling okay so these
are the internal thing you can talk with
them. Here there is a chat option maybe
WhatsApp and Telegram. Okay. So now I
have demonstrated you this and now you
can see these are the order section the
order is also there there and order is
also uh in service provider. Okay now
you can see okay now it&#39;s loading the
order st because I am in development
server that&#39;s why it&#39;s taking too much
time. Okay. So now you can see the order
we have places. It&#39;s it uh this is the
price of this order and this URL. By the
way, refill is not uh if you&#39;re thinking
why it&#39;s pending. The reason is because
I haven&#39;t implemented chron job. But
worry not in this video, not in this
video. Uh the other parts of this video
we will implement chron job node. By the
way, here is also currency converter
which is only supported uh INR and USD.
By the way, this is the real time
currency converter by the I haven&#39;t set
any fixed value for USD to INR. This is
the dynamically fast and all all and uh
and up to date data. I am using a
currency converter API. So I will share
you about that and uh this will and the
currency data will save for 24 in our
radius database. Okay. So we are using
the radius database because uh we are
using the free plan of the currency
converter and they have limitation. So
we need to protect API calls that why
that&#39;s why we are cashing it for 25
hours. Okay. So now you can see our
currency is converted the wallet is now
in rupees and everything is now in
rupees and there is also a services
section and now you can see these are
the services page which I have added
from the service provider and the
category filter and also search bar. So
if you&#39;re thinking this is not working,
worry not this is working. Okay. So you
can see this is working and also the all
services here can uh filter the services
uh according to the filter.
I have implemented everything and
everything is working so worry not and
also here the sort name feature you can
sort by the name and also there is a API
section which is every social media
panels have okay so this is our created
API panel. I mean not API panel it&#39;s API
section. Okay. So now this is our API
key management section. Here is our
endpoint. And now here anyone can create
multiple API endpoints. Okay. I mean API
key. If you have come here uh for to the
wholeseller if you go to the dashboard
and API docs. So you can see here the
developer option they have only option
to create only one API key. part I have
implemented the multiple API key
architecture. So here you can use
multiple API key just generate and name
the API key anything you want. Uh let me
name it and if you hit the create this
will create a API key for us. Okay and
this will also save the API key in
encrypted form. Now you can see our new
API key is added in development
environment. Okay. Uh there is also the
environment section. So you can set up
the environment according to you. And
also there is a a copy key and delete
option. Okay. So and also there is a
edit option. Okay. So you can edit this.
So there is multiple thing you can do
with this. And also this is the endpoint
to make a API call. Okay. And now it&#39;s
time to explore this section. This is my
add payment structure. By the way this
is PTM semi automatic payment gateway.
Okay. And now you can see here anyone
can scan. I have already scanned and
this coupon code I mean this QR of this
is the QR of PTM. I am using the PTM
merchant. Okay. So now you can see uh I
have made a payment. Let me demonstrate
you uh my transaction ID. So now this is
my transaction ID and I have said I have
sent only one rupees. Okay. But I&#39;m
trying to add two rupees. If I hit this
then we will get the error and this will
also tell us uh which uh which amount we
have sended and which amount we are
trying to add. Okay. And now just wait
for the request completion. Yeah, you
can see uh the transaction amount
mismatch. Amount mismatch. Uh you can
see this show we you are trying to add
two rupees but you have only sent one
rupees. But if you are thinking how we
are doing this by the way for this
purpose I haven&#39;t take the approval from
the PTM. I am doing this this is in a
magical way you can see I will tell you
this in the video by the way this is the
secret thing no one going to tell you
okay but I will tell you if you go to
the free f of fiber and if you ask from
them they will charge you for that okay
I am damn sure they will charge you for
that for this thing for only this thing
I have learned the PHP and I have
researched on PHP scripts for the PTM
modules and I have found aha GitHub repo
which is open source who tells you how
you can make a semi-automatic payment
gateway just put the transaction ID does
and put a amount and you do not need any
API key to approve that okay so you can
approve with a transaction ID and amount
now if I enter the one rupees now if I
try to add this will add successfully
now you can say fund added successfully
okay so this is the secret of that by
the way I haven&#39;t tell you again
secreted but in video I will tell you
and by the way if you are not an Indian
this payment gateway only work in India
if you are not Indian if you are from
foreign in any any other country so uh I
want to tell you one thing you always
need to use manual payment gateway for
this kind of website uh for this kind of
website you will never get any approval
from paypal any other payment they will
not approve you but if you want
automatic payment way then you must need
to use crypto payments okay crypto
payment gateway there are multiple
companies who provide you crypto
payments to add your website. Okay. Now
if uh now let me show you one thing. I
have already added a transaction with
this amount. Okay. Now if I again try to
do this this will not going to add.
Okay. This will throw error or tells us
the already happened. Okay. The
transaction is already happened. So you
are trying to duplicate it. Now you can
see transaction already processed with
this transaction ID. So I have
implemented all these things. So okay.
So now we have done from the client part
and one thing we have also a admin
panel. Okay. So now let me demonstrate
you the admin panel. Okay. So here we
have user management section. These are
two user which is maybe come from the uh
in you my source video. I don&#39;t know
where they come from but they are also
unverified. Now here you can block them.
Okay. Ban and remove. And if you try to
ban the user so there is ban optional uh
I mean ban reason. If you want to put
any region you can put and if you want
to block for sham so you can also block
for sham I&#39;m not going to block anyone
and now if we come to the provider so
here we can set up the provider I build
this project in such a way you can
implement many provider if you want to
implement 10 providers maybe 10
wholesaler so you can implement okay
this support unlimited APIs so here you
can see I have added a sales media API
key this is the endpoint of sales media
uh which we I have already shown you in
my panel. I we have also created a
endpoint for the making the order from
the API and there is a API key section.
If we by the way this is in encrypted
form we will storing the API key in
database in encrypted form. We are using
256 SCS encryption and uh uh if you
click this this will request to the data
on server and this will decrypt the key
and this will this will show the
decrypted key on panel here dashboard
but I&#39;m not going to opening this
because the key is um the essential part
okay and I don&#39;t want to open it and now
here is a category section
I have already okay so it&#39;s a by the way
you&#39;re thinking about this loader so
Forget it. It&#39;s admin panel. Everything
is okay here. Okay. So now here you can
see we have two categories already here.
So if you click click on the add
category. So we have option to the add
category here. Just name and put it.
Okay. Now here you can see we have
already a category which is
uncatategorize. They have no edit and no
delete feature because if you add any
category here this will uh make this is
the default category of any service. And
if any service added to the default
category, then that category is private.
That will not going to display on our
client part. If you want to edit the
category, yeah, you can edit. If you
want to delete any category, you can
delete. So now it&#39;s time to show the
services which we are facing from the
our uh our wholesaler. So this is our
wholesaler. Now let me show their
services. So you can see so these are
the services from wholesaler. Okay, they
have almost 400 services. So let me
fetch that service here. And now you can
see these services I have added. And in
the services you have the rate for,000.
And if you want uh and also you have
option to add your profit margin. Okay.
So now let me add a service here. First
I have clicked on the add services this
will open a new page which is forward/
add here.
Now you can see we have this and now
here a drop-down. So in the drop-down we
have option to select the services
provider. So uh currently I have only
one service provider which is sales
media. If you click that that will this
will load the whole the service. Okay.
Okay. So now you can see we have all the
services from our provider. Now let me
open in thousand mode. Okay.
Okay. So now it&#39;s in thousand mode. You
can see there are all the thousands of
services. You can say website traffic
and keyword and many more. Or if you
want to explore, you can explore. There
is multiple thing. Okay. And now you can
see if you want to add any services,
just you have to click
uh just you have to click on the add
button and this will add that service in
our admin in our panel. Okay. Uh so it&#39;s
adding it&#39;s requesting to the server.
This will take some time. Just wait for
now. Okay. By the way, this is slow. I
know this is slow due to I am using in
the development environment that that&#39;s
because this is slow. Okay, now services
is added. Now let&#39;s try to see the
services in our services section. Okay,
so now I haven&#39;t idea which services I
was added. Maybe I think that was maybe
a English thing like something I haven&#39;t
remembered which service I was added.
Okay, so now you can see this service I
was added and now you can see default
category is uncatategorized. If you
leave this, this will not going to
display on the our client side in
services space. So if you come here
click on this edit button. So you have
option to edit. There is a profit
margin. Uh the profit margin is
calculated calculated in dollar. So if
you want you can add $2. I know it&#39;s too
much but I have just for demonstrator
and now the category is Instagram and
just hit save and this will save and
this will also add your profit margin on
top of the your service provided price.
Okay. So I think that&#39;s enough and
that&#39;s is full uh demo for the app and
now let&#39;s try to code. Okay. So this
time I&#39;m not going to start with a
creating a folder on desktop. This time
I&#39;m going to start with opening a
terminal on desktop. Okay. Okay. I have
provided a GitHub repo link in a
description which is the starter kit.
Just go and clone this rep. Okay. I have
built this u starter kit almost 2 month
ago. Okay. Uh why I have built this?
because I want to make my tutorials so
perfect. Okay, that&#39;s why I have built
this. Okay, so now just copy the link
from here uh SS not https link and come
on to terminal just hit get clone.
Okay. Okay. Okay. What I have done? I
need to put my link here. Okay. So now
this will clone the repo in our system.
Okay. So now it&#39;s done. And now here our
starter kit. Okay. Let me close this.
Okay. So now let me rename it first to
worry not I will explain everything.
Okay I will explain everything because I
have added the authentication system and
all these things. So I will explain
don&#39;t worry okay
and I have created multiple tutorial
with a better o okay and and everything.
Okay so this is our the starter kit and
now let me delete this o schema. we will
generate this and how uh we will run how
to generate all this schema and all
these things. Okay, so it&#39;s deleting.
Yeah, it&#39;s deleted. And now also delete
this bunlo file because this time we
will use pnpm. Okay, so pnpm is very
perfect for package manager but not
better than bun but I am not using bun
here because uh bun has bug in windows.
Okay, so I am in windows system that&#39;s
why I will use pnpm. Okay, because we
need to convert this package in more.
Okay, so now this is done and now let&#39;s
install now let&#39;s install PNPM. Okay, so
go here and search PNPM. Okay,
and go here and and and get started
and installation uh and install
according to your system. If you are
Windows user, just copy this for Mac and
anything you can copy from here and
getting started. Okay. Copy that and
paste that link that command on
terminal. Okay. Yeah. Here.
Okay. So, this will install PNPM in your
system. But in some cases maybe uh this
your system not recognize PNPM. Then you
need to restart your system. After the
restarting uh everything will going to
work perfectly. Okay. So, so so, so ah
this one this one is my project. And now
let&#39;s run PNPM. Okay. Let me first run
cls. So pnpmi.
Okay, this will install all reaper.
Okay. So now uh everything is installed
in our system and let&#39;s we need to
create our env file. I have provided the
uh env uh example. So you need to create
just env file which required nle
configuration. Uh I am using nle for a
database. Okay. If you want you can use
superase and anything name SMM guru and
these two three four thing. And let&#39;s uh
create av file. Okay. And copy all the
content from envample to env.
Okay. So here we need to put our all uh
the nle credentials. Okay. So for that
just come on here go to the browser
search the nle. Okay. By the way this
video is not a sponsored by the nle. I
am just using and I will not recommend
you to use the nle because it&#39;s not
good. Okay. I don&#39;t like this nle. I
like super waste.
Okay. So I will recommend you. Okay. So
now let me change my plan. Uh I will use
superase. Okay. So let&#39;s just cancel
this. Okay. Let&#39;s use superase. Okay.
Because superbase is best. Okay. So
super wish and and yeah super wish it&#39;s
loaded. And now just let me create a
database here. Okay. So database maybe
from where
we back tell okay I am on delipi back
end let me go to here okay now there and
fajan yes fans protest organization name
SMM guru okaym
guru database password generate a
password okay let me copy the password
if you want to see I will show you not a
problem because I will delete database
after uh work is done. Okay, I am from
India. So I will select my nearest
server. So this one is my nearest
server. Let me create new.
Okay. So now we have done with our
database. Okay. So now let&#39;s connect.
Okay. So here we need OMS and in the OM
we need drizzle because we are using the
drizzle. Okay. So this is the URL of our
drizzle thing. So just copy this and now
go to the env file. Maybe this one. Oh,
sorry. This is my another project. Okay.
So here uh database URL.
Okay.
This one. Let me paste here. Paste here.
Cut here. Cut here. Paste here. Okay. So
here here you can see here we need to
put our passwords. So let me see my
password. Yeah, this one is my password.
Don&#39;t worry. I will delete I will delete
password or I will change this password
okay after the session. So it&#39;s not a
big deal and not a problem for me. Let
me remove this. Okay. And here uh if you
are if you are familiar with driel then
you know we need to create a drizzel
config file. Here you can see this is
the driel config file. So this is the
tel config file and if you also uh come
there with dil then we need to create uh
uh database connection file which is
maybe I have added here it&#39;s a database
file okay worry not I will explain
everything I will explain every route
everything what&#39;s going on what&#39;s inside
this project and what&#39;s inside this
starter kit so just uh believe on me I
will explain everything it&#39;s my job to
explain you everything and also tell me
in comment uh is I improve my English.
Okay, I think I have improved my English
uh in some some English not completely
but I think I have improved. Okay, so
here we need to create a connection for
our database. Okay, so this connection
is suitable for uh the nle but for
superbase we need to use the postquest
not PC. Okay, we need to use Postgress
driver and we need to change our
configuration. So to to see that just
come here and here you can see there
there posgress provide everything I mean
superase provide the documentation. So
you need to install the postgress yeah
all the schema and drizzle postgress.
Okay. So we need to yeah our connection
is string we need to create a client
with this configuration and we need to
part this client in drizzle and then we
are able to use our DV. Okay. So
connection DV. So let&#39;s first install
install this post crush. Okay. Okay. And
if I open my package JSON
here you can see here
uh we have a dependency called pg but we
do not need this pg now. So let me
remove the p.
So pnpm
remove pz.
Okay. So now p is removed. Now let me
add Postgress. Okay. So add Postgress
and come on to this file and now
override everything. Okay. Uh I have
like to create a env.ts file. Okay. So
just come on here and here remove this
NE things. Okay. Because now we do not
need the Nle. Okay.
Database. Okay. So here uh let me copy
the name from the env. It&#39;s my env. And
now export
const
equals to process.
Yeah, this one. Okay, by the way, you
are thinking of uh why I&#39;m getting the
suggestion. So the suggestion I am
getting I because I am using Kodium.
Okay, now to copilot because copilot my
free plan is expired in copilot. So I am
using the kodium. Now formally known as
kodium but now the name is change of
kodium. I don&#39;t know I haven&#39;t remember.
Uh let me show you. Yeah. Yeah. Winds.
Yeah. Windsurf plug-in. Now formally
Kodium. Okay. So this plug-in I am using
for the auto suggestions and also I
using the copilot. If you click here
yeah you can see co-pilot for code
fixing explanation and for auto
suggestion I am using winds. Okay. So if
you want you can use yeah it&#39;s it&#39;s good
it&#39;s good to leverage AI to increase
your productivity. So I will recommend
you always recommend you to use AI.
Okay. because I&#39;m also using the AI for
my most of the things. Okay. And now now
what now we need to do? We need to come
on superbase. And now let&#39;s create these
things. Okay. So Okay. So we do not need
that upper part. We need just this.
Okay. So done. Yeah. This one. And now
remove the delay. N.
And res node post crisp. I think we do
not need that one. And now uh you can
see here. Let me uh uh remain this.
Okay. So just hit here this one. Okay.
Now let&#39;s start this. Okay. I am not
getting the suggestion here. And let&#39;s
remove that part. And and and and let me
import.
Okay. So post imported connection. uh we
haven&#39;t the connection string we have
have database URL okay so database URL
we have this one and now here if you can
see we have a client but we do not need
to pass in such a way so we will pass
this one okay so client client okay and
here we will pass casing snack case and
schema okay so now it&#39;s done okay uh
just remove that part and let&#39;s export
this
Okay. So now give some spacing. Okay. So
yeah, I don&#39;t need this comment here.
Okay. So now we have done here. Uh but
if you are thinking why I am exporting
the schema, importing the schema here,
let me explain. Okay. Drizzel core.
Okay. Why it&#39;s happening? Can&#39;t find the
drizzel coins corresponding type
declaration. I don&#39;t know why it&#39;s
happening.
Maybe I need to uh reload my window.
Okay. So I will reload this. After
reload this will may be solved. Okay. So
here you can see uh in drizzle we have
two option to filter. Okay. Um I mean to
find if you go to the browser and here
and if you go to the drizzle.
And if you go to the Mhm. Not there.
Yeah. If you go to the query,
you can see in the query, we have this
option to query from the database. I
like this one because this follows
MongoDB structure because you know I am
MongoDB user. Previously, I have shifted
uh MongoDB to uh Postgress database.
Okay. So that&#39;s why I like this kind of
syntax. Okay. To use this kind of
syntax, we need the suggestion here.
Okay. And this suggestion is from our
database schema. So to to get this
suggestion, we need to pass our schema.
Okay, our whole schema. You can see our
whole schema here. And then after that
we will able to use uh suggest and also
this one. Okay. So this is best for typ
script script. Okay. So but if you are
not using a typescript maybe this will
not going to work for you. Uh I will
recommend you to use type script. And
this one is select. Okay. This one is
another method. Okay, it&#39;s it&#39;s
different. Yeah, you can see this one is
select. If you want, you can use this.
If you are if you want to use this
method to find, then you do not need to
pass a schema. But if you want to use
this method, query all method, then you
need to pass a schema. I like the query
method. But if you want, you can go with
this one. I don&#39;t like this one because
I am MongoDB user. So I need MongoDB
things. So now here, come again here.
And now let me first try to remove this.
Okay, let me remove here. Okay, I have
removed this uh schema. Okay, so now let
me try to do some things. Okay, so here
I have a query but after the query I
will try to access I haven&#39;t anything I
am not able to get I&#39;m not able to get
my suggestions of a schema. So to get
the sgest uh I need to pass the schema.
Okay. So here if I pass the schema now
you can see I have passed this pass the
schema then db dot query
okay query dot okay I haven&#39;t
suggestions uh I don&#39;t know why the
reason really I don&#39;t know
maybe maybe I let me try again okay it&#39;s
not working not working I don&#39;t know why
let me hover okay it&#39;s type of schema
yeah it&#39;s inferring time correctly but
it&#39;s not working it&#39;s not working I
don&#39;t know why uh to get rid of this
maybe I need to okay so now after the
reloading window yeah you can see I am
able to get all the suggestion but uh I
think why I have only four schemas let
me see
okay yeah I remembered uh because this
is the starter kit that&#39;s why I have
only four schema okay account user and
session so now it&#39;s work okay and now if
you are thinking why I&#39;m using snack
case uh because in database when we are
trying to query okay uh we are trying to
make query and this will convert our
schema query to snack case maybe if you
are thinking here yeah it&#39;s a email uh
this will get converted into email test
verified okay so I like this kind of
syntax in uh saving a database so I am
using this but if you don&#39;t want there
is multiple option you can use anything
snack case and camel case but I will
recommend you to go with is active.
Okay. So now our database configuration
part is done and now also we need to
configure our database here. Okay. So in
the schema because here we are also
using the nle. So I need to remove the
nle dependency because nle is uh it&#39;s
alu you can say it&#39;s not good. Okay. I
don&#39;t like n here. So you we need to
pass the URL and inside the URL. So you
can part you can pass this part. I have
created this one. So I will use this
one. And now let me import. So control
alt. Yeah, it&#39;s formatted. And now it&#39;s
done. And now again if you&#39;re trying to
uh run this, this will not going to run.
Okay, this will throw a error. And I
will explain why we will get the error.
So for now just run npm tab. Okay. So
okay. So now I have multiple browser
instance. So let me open on this
instance. Okay. So local host 3000.
Now you you can see here we are getting
this error and this error is due to
middleware because if you remember
nextjs uh uh in few days ago I mean in
almost 20 to 25 days ago uh uh next uh
noticed a vulnerability on in their
middleware that&#39;s why they updated their
uh middleware and after that update okay
after that update our authentication
which is we are using the better o okay
and this will not working perfectly with
that next middleware. Okay. So this is
the problem and then we need to solve
this problem and and then to that you
can go to the integration in the
integration find the next JS and go to
the here you can see uh below uh uh
below the 15.1.7
you need to use this way that we are
already using in our previous project
but if you are in latest version this
one I have update one then we need to
use this version and we need to
configure this as a NodeJS okay to
NodeJS but If you want to use NodeJS and
environment in middleware
then you need to use NexJS scanner
version. Ah this is the problem and yeah
somewhere you will find uh environment
maybe runtime. Yeah here the runtime.
Okay in the runtime
you can see the NodeJS this one we need
to enable this in our next configuration
file. But to enable this we need to
install our and install nextjs canary
version. But for now let me configure
all these things. Okay. So now come here
it&#39;s at 15.3.2 but you can see uh I am
the using uh uh
next 15.1.6. But if you are thinking uh
because we are using the lower version
okay so lower version than this then why
it&#39;s not working in middleware? I don&#39;t
know. Yeah, the answer is I don&#39;t know
because when I have built this project
that was working but for now this is
stopped working. Okay. So for that we
need to configure that as a node
environment. So to configure this just
come on here in the next documentation.
Okay. Uh in the next runtime. Okay. So
go to runtime. Come on here. We need to
extend experimental node middleware bit.
Okay. So just copy this part.
Go to next ts config and here now do our
work. Okay. So it&#39;s not starting. Okay.
It&#39;s uh literally only specify the
property middleware cannot experiment
not exist in type x. Okay. So let me see
some types maybe some type issue here.
Okay. I got the problem because I am in
not in canary version. Okay. In canary
version experimental features are not
supported. So we need to install NextJS
Canori version. Okay. So now uh let me
close the server. Okay. And let&#39;s see
how to install NextJS Canori version. So
just come on here and search how to
install. Yeah, I have already searched
nextJS Canary version. But if you are
thinking why I am showing these things
how to install and everything at all. Uh
because I like I like to show
everything. Okay. I want I want you to
know everything. Okay, everything how I
have done, how I am thinking, how I am
doing, everything I want to show you.
That&#39;s why I am showing everything to
you and this will make this video long.
But I am happy with that one. And if you
are thinking why have I have created the
starter kit, the reason is this because
I want to show more thing as possible.
Okay. But if I but if I but if I put my
time in creating the authentication
creating the UI then it will not going
to then it will uh then this will not
suitable for me and this will also not
suitable for you because that time if I
do that kind of thing then I am not able
to explain you everything. But if you
want to know about the better if you
want to learn about the better oath I
have already created a videos on better
oath you can go to the my YouTube
channel.
Okay. Okay. Okay.
Maybe. Yeah. Here uh you can go to the
my channel. It&#39;s a full stack mastery.
Okay. Here you will find the advanced
authentication tutorial. This is the
full tutorial of better oath. Okay. And
if you want to build the pro full
project in better oath here you can
build these two things. Uh okay. I am
using uh I have created everything from
scratch in these two project. I&#39;m not
using the any any I mean any template.
Okay. So but after these two video I
realize I am spending I can I am wasting
my most of the time. That&#39;s why I have
created the template. But worry not this
template is in starting phase. I am not
getting the proper time to uh improve
this template. But but but soon I will
improve the template. I will make it the
monorreo and I will implement multiple
things. Okay. I have thought about all
thing and this will always remains free.
Okay. Uh I&#39;m not promising for that but
uh I am planning to make this free in
always. But you don&#39;t believe on me. I
Okay. Please don&#39;t believe on me because
in maybe in some cases uh when I have
put my all the features maybe then I
will make it a paid version and a free
version. I&#39;m not sure about that but for
now it&#39;s a free and maybe it&#39;s free for
a long time. Okay. So now uh
uh no okay not I I have understood what
I need to do uh we need to install the
next year scanner version. Okay so to
install the next year scannery version
let me pnpm
add.
Okay, next year is Canary.
Okay. So, uh when it&#39;s installing, let
me come on to the docs and search for
Canary. I&#39;m not sure about share about
Canary because I have never used Canary.
I am using Canary first time with you.
Okay. So, here yeah, it&#39;s npmi Canary.
Yeah, we have we are doing the same
thing. Okay, in Canary you will get many
canod feature these kind of features for
when JS authorization are authorized and
and I think it&#39;s stalled. Okay.
Okay. I don&#39;t know why it&#39;s stuck. I
have tried multiple time but this is
struck. Okay. So region I don&#39;t know.
Okay. So check the region. Let me come
on to the here and maybe here I am not
able to find next year. I am able to
find next years. So just copy this one.
Let&#39;s clm
remove nex next. But I want to warn you
something. Uh if you are using uh if if
you want to use this project in
production then you need to avoid the
next scanner version. Okay. Uh it&#39;s
important and it&#39;s really you need to
thought about that. Okay. So uh I am
using this because I don&#39;t want to put
this in production. I don&#39;t want to
launch this kind of uh business. But if
you want to launch this kind of
business, you can connect me. Okay, you
can connect me. I have built a full
project for you. Okay. So now nextJS is
removed. Now let&#39;s clear. So PNPM add
NextJS Canary version. Okay. It&#39;s only
next year. Now next year Canary. Okay.
So now let&#39;s wait again. Maybe this will
install.
Okay. So now this time this time this
has been done. Okay. This has it went
done. And now if you try to look at
here, so it&#39;s a next year scanner. Okay.
And now after installing the next year
can scan, our error is solved. And now
we are able to use this middleware.
Okay. So now it&#39;s done cls. Okay. So now
it&#39;s done. And now it&#39;s time to
configure our middleware uh for a node
environment. So come on to the
middleware. You can see in the
middleware I am using importing the XJOS
for making the request on our server to
check the session and a session uh it&#39;s
coming from the O type. Okay, from here
you can see uh maybe yeah here you can
see here O types this one.
Okay, let me close. Okay, so let me
close other things. Uh it&#39;s these are
the non important thing. So let&#39;s close
uh close close
and close. Okay. So now done. I am
inferring the type from o session. This
help us to infer the type according to
our o schema. I am not author schema
according to our o configuration. Okay.
This is really helpful when we are
dealing with a types. Okay. So I always
preer create a types here. Okay. So now
I think it&#39;s done. I have explained more
than enough. So now it&#39;s time to uh
configure this middleware. But let me
first explain that what I am doing here.
So you can see here
it&#39;s a get middleware session. I have
created this function to get sessions in
middleware. What this function is doing
this function taking the request is type
of next request and xjios.get and this
is the API. Okay, this API endpoint is
provided by the better ro. I am not
doing anything here. It&#39;s not my job
because if you go here and maybe here
yeah here you can see this is the
provided by the better o and you can
find this in better documentation. Okay.
So now here here I am passing the base
URL from the request but if you want to
pass your base URL from your env you can
also do that. Okay. And we need to pass
the headers here. I have passed the
header uh cookies I mean cookies. Okay.
So I am just returning the data which we
have get here. Okay. But and now why uh
and now uh why I&#39;m using the session
here? Because if you hover here then you
can see session and user all already
have done here. Okay. But if we remove
this then we are not able to get the
type of this. Okay. Uh to get the type
we need to infer the type. Okay. And we
have created this type. I I mean we have
infer the type from here. This thing is
provided by the better ro. If you want
to know about this, you can come here
and search for typcript here. Okay, you
can just search start typcript and this
you will land to a typ script talks.
Okay, so you can do it from there.
And now now now it&#39;s done. It&#39;s done.
And now it&#39;s actual middleware. Okay, in
the middleware we are getting the
request and we are passing the request
in our this function. This function
return the session. We are checking the
path. inside the path we are also
getting the URL and we are checking the
path is forward sl then we do not need
to do anything just uh uh them access
them okay because this forward slash is
the landing page which is the public
page so we do not need to pro get give
any uh we do not to give any
okay we do not need to take any
restrictions here so okay it&#39;s admin
okay admin we need to check the role if
role equal to admin then we will access
them but if not then we will redirect
them to dashboard new orders. Okay. And
then here we need to pass our URL
because this next response redirect
redirect need and not redirect uh URL
this URL class need the path and also
the whole URL just for example okay and
now here I&#39;m checking the web hook if
someone try to access web hook because
it will help us to because it will help
us to add payments gateway and this kind
of thing that&#39;s why I have using webbook
is a private public thing okay so I&#39;m
not adding
okay so here is a API when anyone try to
access the API v1 then we will check the
session if session is available okay if
session available then okay then we will
give permission to access the session
okay dot next but if not then we will
pass this error okay the title
unauthorized access at time detected
action this one this one this one this
one okay and admin okay it&#39;s path start
with admin mean session is there then we
will need to give access and if not then
we will not give them access and
dashboard if someone try to access
dashboard then we need to check again
and we need to uh if not if if not sign
in then we will uh redirect them to sign
in and we will check the authentication
page if user try to access sign in and
sign up page then if there is no session
then we will uh give them access but if
they have session then we will redirect
them to the dashboard and now we are
just written if not that case uh this
case just uh just give them access.
Okay. And now you can see runtime I have
configured the runtime NodeJS and now I
have added here I have added this uh
uh okay I have added the matcher here
and I haven&#39;t created this matcher this
matcher I have get from the clock okay
if you go to the clock documentation I
don&#39;t like clerk okay but uh in some
cases I like clerk uh the why I not like
clerk the reason is their pricing model
okay I don&#39;t like their pricing
Okay. If you go to the middleware,
search here the middleware.
Okay. So, middleware next.
If you go here, you can see the matcher.
I am using the same matcher here. Okay.
So, not the other matcher. Okay. So, now
I think we have configured our app and
our middleware for node environment. But
one thing we need to check. Uh let me
verify this on the better o because I
haven&#39;t I never added configured uh for
node with better o okay so what&#39;s they
are doing okay same thing okay they are
using the o API get session okay if you
want to use this version you can use
this version but I like to use this
version so I will stick with this
version but if in some cases this may
not work if this not work then we will
revert back to nextj provided version
okay so uh here there and not session
and everything. Yeah. Runtime NodeJS.
Now let me try to access again. Okay.
Okay. So now let&#39;s uh try to run our
server again. So dev. Okay.
Okay. So I am getting the problem here.
You can see there is a problem and there
is a problem in XJS. Okay. XJS error 500
code. Okay. So this is the problem. So
how we solve this problem? To solve this
problem just use the better or
recommended snippet. Okay. So we will
use this one. Okay. So just copy this
part. Okay. And come on here and go to
the middleares. Okay. Here in the
middleware
and remove these code. Okay. So remove
all these code. Okay. And paste the uh
better oath recommended version. So here
this one and header we need to pass the
header from the next header. Okay. So
this one and now return session.
Okay. So return session I&#39;m using AI for
code suggestions. Okay. And now let me
format the code now. Now remove this
one. Okay. Because this is now unused.
Okay. So remove and remove and I&#39;m
getting the one error reason. I don&#39;t
know.
Okay. In the session session may be
null. Okay. Okay. So session is if
session is null then what we need to do
we need to check. Okay. So if
not session
uh if not session then we will redirect
them to the signin page. So this
suggestion is awesome. So I will use
this suggestion. Okay. So I will
recommend you to use the code. I mean I
will recommend you to use the plug-in uh
kodium. Okay. And now this part and this
part is done. And no our error will
solve now. And now what now we need to
do first we need to uh make the on top.
Okay. Here
the reason is this because
Okay. Okay. I think we do not need to
add here because this will create uh
apps bug in our app. Okay. So to solve
that error we just need to uh pass this
here. Okay. Okay. So this will solve all
the problem because uh now these are not
a
okay so again it&#39;s a undefined okay it&#39;s
undefined maybe null so for that let me
add a circle braces here
okay now it&#39;s solved the error okay it&#39;s
happened it&#39;s good and now this time we
do not need to pass the request here
because I we are not using the request
so now just remove that part okay so now
I think our code is happy And now let me
try to reload our server control cc. And
now uh pnpm dev and
okay so here I am getting the error due
to the recent okay so to solve this
error we need to pass the recent API
key. Okay to pass the recent API key we
need to do something but here we are
getting the some error here. I try to
install u project directory prettier but
I don&#39;t like to use the pro prettier
here. Okay. So I I am happy with ESLint.
So I&#39;m not going to install Prutier and
I&#39;m getting the error here due to the
recent API key. So why why we are
getting the error? Because if you go to
the code and go to the utils
maybe maybe somewhere yeah here recent.
Yeah recent. And by the way if you don&#39;t
know about the recent recent is a
platform for the sending email. Okay. Uh
developer friendly platform. I like this
recent platform because I like their
service and easiness. Okay. So I that&#39;s
why I am using recent. I&#39;m not sponsored
by recent. No one will sponsor and my no
no one going to sponsor my channel
because I haven&#39;t enough subscriber.
Okay. To impress them. That&#39;s why I
haven&#39;t any sponsor. So not a problem
for me. Maybe in future I will get the
sponsor. But for now I am happy with
that one because now I have job. Okay.
So not a problem for me for now. and and
and and and yeah you can see this a
platform for sending email you can read
the doc share express nodejs next
everything astro okay it&#39;s so true okay
one I think you have okay so just come
here and getting started
okay let me try to log in maybe this one
okay I don&#39;t know let me try to with
github
Okay. So, let me check my domain here.
Okay. Yeah, I have added my domain. So,
I will use this domain. So, no no no no
no now here somewhere somewhere uh in
the API keys. Okay. So, CRM let me
delete all the API key because now we do
not need these keys. Okay.
edit and delete
and delete and delete.
Okay. So, let me create my new API key
which is the SMM guru.
Okay. Full access add domain. Yeah.
Done.
Okay. So, not my key. Worry not if you
uh stole my key. I will change delete
the key. So env yeah it&#39;s here and now
there and now this will restart our
server. Okay so now let me come here and
let me see.
Okay so now we have successfully loaded
our starter kit. Okay so I think our
starter kit setup is done and now it
started working and now what we need to
do we need to pass some more keys here
uh to get work perfectly. Okay so why?
because yeah it&#39;s using the oath okay to
for oath we need to provide the key and
everything looks fine and maybe I need
two more things okay if you go to the
better oath and go to here in the
getting started
installation better o recommend us to uh
use these two variables okay uh but if
you don&#39;t use these two this will not
going to make any problem but it&#39;s
recommended to use okay so add this one
Okay. So here
better o. Okay. So paste that one and
also paste that one. Okay.
Okay. So now it&#39;s our app is happy.
Okay. So it&#39;s done. And now we need to
pass the key. After the key pasting the
key I will explain full code. Okay. So
go to the GitHub maybe here GitHub. Go
to the settings
here. Settings.
Okay. Okay. Okay. Maybe
I have somewhere. I haven&#39;t remembered
anything. Okay. Maybe in account
not there. Yeah, in the developer
settings.
In the developer setting. Yeah. Oath
apps. I have created a apps. Uh let me
create a new web smur
okay SMM guru homepage URL this one our
local host and application description I
don&#39;t want to pass anything and here
it&#39;s a call back and uh how I get this
call back URL uh let me show you 3,000
okay so API for/ callback GitHub if you
want to know the call back then come on
here go to authentication it&#39;s a docs of
better auth Okay. So go to the GitHub.
In the GitHub you will find the API or
call back GitHub. Okay. So that one I am
using that one. So you can see API or
call back GitHub. Now register our app
here.
Okay. After the registering the app then
then then here here maybe somewhere.
Yeah it&#39;s a client ID. Copy the client
ID.
Okay. After copying the client ID, paste
our client ID here. And now come here in
the client secret.
Generate the client secret.
Uh let me enter my password.
Yeah, it&#39;s a password. No, copy.
Yeah, paste that one here. And now after
the new reload, our app is ready to use.
Okay. Oh, now it&#39;s time to explain me
everything. But first, let me show you
the all feature of this.
Okay.
Okay. If you want to getting started
with email password, you can uh but I
want to uh uh tell you something. If you
uh these this UI, okay, whole
authentication UI, it&#39;s uh designed by
AI. Okay. I&#39;m using the POEXT AI. You
can see I am not a sponsored by POPEX.
My senior provided me the popexity pro
subscription. So I&#39;m using this one.
Okay, this include everything you can if
you hover here sonar cloud gemini
everything I mean it contain every ro
every LLM. So if you want you can buy
their subscription it&#39;s very helpful in
some cases and some cases charg
in more enough cases charge GP is enough
but in some cases you need this one. So,
so, so now no, no, no.
Yeah, here. Okay. So, you have sign in
feature on all those things. These
things is working is guaranteed. This
working is okay. Uh, not a problem. Let
me uh getting started with my GitHub
account. Okay. Uh, GitHub initiated. We
are redirecting the GitHub. Okay.
[Music]
Okay. It takes some time. Let me wait.
It&#39;s it&#39;s any is there is any error?
Okay. So we are getting the error here.
The reason is the why we are getting the
error. The reason is because a
verification table is not exist in our
database. Ah yeah it&#39;s correct. If you
remember uh if you remember here uh here
you can see we haven&#39;t created any table
here. If you go to the table editor you
will not find anything. Okay. So uh
there if there is no table then how will
how can this will work. So this is the
problem now then we need to solve this
problem to we need to solve this
problem. We need to run driel migration.
Okay. Uh let me show you something. Uh
to run drizzel migration we need to
configure this configur config file.
This will we need to provide the
migration path here which is the
drizzel. Okay. Uh this will contain
every migration file and schema. We need
to pass the path of the schema. Yeah.
there this one this contain our all the
schema you can see we need to pass the
path okay and here it&#39;s a dilate
postgress SQL and our U order okay so
it&#39;s done and if you try to do because I
have generated this so you do not you
you no need to use this you need to
delete this first because if you try to
access I I mean if you try to create
again this will create a new uh
migration file and according to
migration file this will not work. So
that&#39;s why we need to delete this.
Okay.
And if you go to the package JSON here,
uh let me close others. Okay. Here
package JSON in the scripts you will
find the script drizzle push is it&#39;s
using the DEL kit push. Drizzle kit is
official SDK provided by the Drizzel. uh
you can see here it&#39;s uh I have I am
added this inep dependency yeah you can
see it&#39;s a tel kit I am adding that
dependency this will help us to interact
with database generating migrations a
studio uh studio uh yeah if you use this
push this will generate and migrate in
one command but I never use this I don&#39;t
like this I need to I always need to
generate I always doing the first thing
is generate my migration file and then I
mean yeah and then migrate that file
okay and if you want to learn more about
that just go to here in the result okay
maybe somewhere somewhere somewhere
somewhere yeah and you can see
migrations overview it&#39;s a generate
migrate pool everything everything is
here you can see here okay but I&#39;m not
going to see anything here so now come
here and now try to run migration so
open a new terminal
run pnpm
dv
gem. Okay, this will generate migration
file.
Now if you come here in the tril you
will find our all migrations. Okay, so
now it&#39;s time to run the migration. Now
this time migrate. Okay, I&#39;m hoping this
will work without error. Ah, it&#39;s
worked. Now we haven&#39;t get error. Okay.
So now if you come here and now just
wait wait wait. It&#39;s not working. Not
working. Let me reload it.
Now you can see we have the verification
user and all the tables available in our
database. Okay. So now it&#39;s perfectly
fine. And now if we try to access our
authentication page, this will not going
to throw error this time. Okay. So now
come again. Okay. It&#39;s a different
instance on my different desktop. So,
so, so, so, so, so, so there there. Let
me first reload it. Okay, because we
have changes the some things. And now,
let me try again. And now, let me see
the terminal. Okay, not did no need to
see. We got this done.
By the way, this page, if you are
thinking about this page, this page is
also generated by AI. I haven&#39;t
generated this page. Okay, so this page
is also generated by AI. Everything you
can see this one. This part is also
generated by AI. This part is also
generated by AI. Everything uh
everything except landing page. Okay.
Generated by AI. Okay. I haven&#39;t gen
right UI. Okay. So you can see it&#39;s a
sidebar using the side. It&#39;s a sad
scenarian
sidebar.
Go to on side getting started
and you can see here sidebar
sidebar so this is the side scene
sidebar now this one not loading not
loading yeah it&#39;s loaded I&#39;m using
sidebar this is this side scene sidebar
is customized by the perplexity AI and
here uh thing it&#39;s admin I don&#39;t know
why this showing the admin thing I need
to check okay so this thing you can see
here and now here the log out button and
everything and it&#39;s enough and now let
me try to access the admin and it&#39;s
giving me access to admin no it&#39;s
redirect me to here but I don&#39;t know why
it&#39;s showing the admin thing here we
need to check that part and we need to
correct this okay so I&#39;m not able to
access the admin why because I haven&#39;t
admin role permission so go to the user
and and and in the user user user yeah
here the role and we need to assign role
as admin Okay.
Admin. Okay. So this time now we are the
admin.
Now let&#39;s reload this page
and now try to access the admin. Okay.
Okay.
Okay. Now you can see we are on admin
page. There is nothing on admin. We need
to build everything. Okay. And if you
are thinking how we have done this, we
have done this part in middle where if
you haven&#39;t remember, you can come here
and you can check uh just hit Ctrl F.
Okay. Search for admin. Okay. You can
see I am checking the admin session and
this part. But there is one more admin
route. Yeah, you can see not this one.
Yeah, you can see I am checking the role
here. Okay. According to role, I am
giving the access. If not admin
permission then we do not need to keep
the access. Okay. So that&#39;s why this is
working here. And now it&#39;s time to
explain everything.
Okay. So come on to the code
and just close it. Close this emails.
Yeah this email there is a email using
the react email. Okay. React email help
us to write the email template in native
react. Okay. So this is the react email.
It&#39;s a forget password email. Yeah, I
have also implemented the forget
password thing here. So, it&#39;s included
with forget password. Okay. So, now if
we come here,
uh let me show you the react email.
Okay, this one.
By the way, if you want to use the uh
okay, it&#39;s a react email, you can go
explore their docs. Okay, uh they have
only the components you you need to
learn about component, how to use, how
to use them. And if you want to use the
Tailwind, you need to just wrap your app
in Tailwind component. And after that
you will be able to use Tailwind in your
whole app. Okay, now it&#39;s done. And one
thing if you want to send the email, you
need to set the domain here. So to add
the domain here, you can see I have
added a domain uh this one. But this
domain is associated with my another
account. I am using the another account
of recent then I that&#39;s why I need to
use this download
oy downloading dot okay why because if
you go to the here not there
there and go to the recent
yeah it&#39;s a recent and inside the domain
yeah it&#39;s done I am done with this one
if you go to the domains yeah you can
see I have added a domain you also need
to add the domain here Okay. Okay. It&#39;s
a paid uh free only one domain is free.
So you need to add the domain here.
After the domain add addition you need
to you are good to go. Okay. To purchase
the domain you can come here
uh to purchase the domain you can go to
the hostinger. Okay. From the hostinger
you can purchase the domain.
Okay. So I have explained your email. If
you go to the src in the src we have the
pages admin o routes contain a sign up
sign in recent components okay uh recent
pages these are the pages inside the o
we have the components inside the
dashboard we have the pages in the
dashboard we have the dashboard APIs uh
everything here and also components here
okay required inside this dashboard page
okay and if you go to the layout in the
layout uh there is a component for a
layout it&#39;s a landing page So all the
component related to the landing page
you will find in layout section. Okay.
So in the API route if you go to the API
route this is the API route in the in
the API route you can find here I have
uh added this base path. Okay. Why? Okay
one thing I have forgotten I am using
the huno here. Okay I am not using the
native nextjs route handler because I
don&#39;t like that one. Okay so that&#39;s why
I am using the hono for our API writing
our API. Worry not this will compile
into the this I think the hono okay not
a problem just ignore it and now here
you can see I am using the huno if you
if you are not sure about hono if you
don&#39;t know about huno not a problem come
here
search for huno
okay go get started with huno and
getting started also from here select
workshell
okay so there is a workshell You can see
here you need to install your hono in
your app. Okay, you just need to np run
pnpm i hono. You do not need to do this
one. Just I need to npm i hono. This
will install hono in your system. To
configure, you need to add the base path
API. Why API? Because nextj by default
uses the API. Okay, you can see uh if
you have uh if you have ever built with
API in nextJS then you need to make sure
you need to add the API here. Okay,
that&#39;s why I have added API here and
also B1 because this is my B1 route. So
I want to configure this as a B1. That&#39;s
why it&#39;s a version one. Okay, we will
also build the version two for selling
our uh services through API. Okay. And
also this is the error handler. It&#39;s a
global error handler. I have done this
multiple time in my previous project. So
I&#39;m not I only will explain it&#39;s error
handler. It&#39;s just contains some else if
and clause and according to class this
will uh uh return the values. Okay, this
is a global error handler. This will
help us to get rid of the try catch.
Okay, so we will not use try catch.
Okay, and but if you use next native
route handler then you will not able to
use these kind of features. So then you
need to write t try catch in every
block. It&#39;s important that and it&#39;s it&#39;s
important to note that&#39;s why I am
explaining you uh and the this is the
one reason of using huno and the error
validation class which is the uh ext
which is extend this class okay and this
there is some configuration details
message and you can see it&#39;s a class if
you don&#39;t understand just wrap this
okay wrap and right click go to copilot
explain copilot will explain everything
okay If you come here, here we are
exporting the route as a get post, put
and delete. Make sure make sure if you
want to use patch. Okay, you if you want
to use patch then you need to add add a
patch route here also. Okay, if you
don&#39;t use the patch here then you will
get the error like method not allowed.
Okay, to make sure you need to add every
method here to get started I mean to use
that. Okay. So it&#39;s important and I will
have done you I will I have explained
you. So here it&#39;s a test route just
written a hello and here is O and it&#39;s
the authentication route. It&#39;s
authentication route. It&#39;s demand by
better o okay it&#39;s I am not doing here
it&#39;s demanding better o. I have just
copied this from the better. If you go
to the better oet
and here the somewhere the better.
Mhm. Integration.
Next JS
here. The next JS. In the next JS you
will find maybe here.
Yeah this one you can see this one uh on
and path is this. Okay I am doing same
thing on same path. You can see here all
this one. And now I have pasted whole
code. Okay. So I have explained
everything in apps and now it&#39;s time to
open utility and if you go to the
components in the UI you will find the
components of nextjs okay and icons we
have only a github icon which I have
used on login page and global there is
the data table provided by the sat cian
it&#39;s a table you go you want to learn
error state it show the error message
and and and logo and these things okay
so now just remove I mean not remove
Just collapse. Collapse. Okay. Collapse.
Collapse this one. And and then hooks.
Here is the some hooks which is created
by next. Oh,
I mean I mean to say set and xios
authentication config. Here is the
config. Uh we have we are defining the
uh n instance here of xjios. This will
create the xios instance. Uh we are
providing the with credential true.
Okay. This will send our credential to
our servers. Okay. Cookie I mean to set
cookie and why I have added this because
if you go here xios
v1 instance get post you will able to
use the get post here. Okay I mean get
and this one and after that you need to
pass the path after that. Okay you do
not need to pass this part. You do not
need to pass your domain. You just need
to pass path after this. Maybe it&#39;s a
test. Okay like this one. Okay, that&#39;s
why I have created the instance for the
Xios. Okay, and now it&#39;s a better oath
configuration. In the better oath
configuration, you can see it&#39;s a uh
create client and in the client, we are
passing the admin plug-in. Okay, so let
me open the this one and go to here.
You can see we the method of creating
the client. This one a method of
creating a O somewhere you will find.
Yeah, you can see this one. It&#39;s it this
runs on server side and this runs on
client side. Okay. So it&#39;s a client API
and it&#39;s a server API you can say like
that one. Okay. It&#39;s a email and we will
explore that one. So not a problem and
it&#39;s a client side. We are using the
admin plugin. We can go here in the
plugins.
You will find the admin.
Yes. The admin plugin. You can read the
docs. Okay. It&#39;s admin and admin also
has uh roles. Okay, admin roles
everything you can and also you can
define your own roles. Okay, from here
you can read docs. Okay, so you can see
here the custom permissions and custom
rules you can define here because and
better admin plug-in is very flexible.
Okay, I like that one. Okay, so now here
uh this one is done. I am returning sign
in sign out here and o ts. If you can
see here this is the configuration for
shber right. Let me explore this one. I
am passing the drizzle configuration
here and I am passing the whole schema.
You can see uh whole schema schema
schema schema schema. Yeah, you can see
I am passing the whole schema because
this uses our better related schema like
us here like verification like two
factor authentication of uh okay that
one is used by here. Okay, it&#39;s a email
and password enable and yeah yeah yeah
it&#39;s a configuration things you need
if you want to learn you can refer my
next uh course on uh course on better o
okay and one thing I need to tell you
it&#39;s a session uh let me show you the
session this session is help us to get
the session in server side this is also
provided by the better oath okay if you
go to the integration
Maybe here, here, here. Yeah,
integration in the integration in the
next JS and getting session is server
action. Yeah, you can see not this one.
Uh maybe create client somewhere. Uh
somewhere not this one, not this one.
Yeah, not this one. Not this one. Not
this one.
Okay. In the docs, you will find that.
Okay. So if you uh expl if you play
around the docs you will find okay you
will find here uh this page okay this is
just a uh get by the I mean this I have
just taken it by the docs okay so now
here I have done here it&#39;s a type which
I have already explained and it&#39;s a just
constant some constant here uh okay it&#39;s
a constant for landing page it&#39;s a nav
link constants okay we will uh uh it&#39;s a
database which I have already done
schema you can see by the way these
schema is generated by better o okay um
why how better is generated because we
have configured better o for dil okay
you can see we have configured better o
with dusel the dusel adapter I will show
you how to generate this schema so worry
not just wait for now it&#39;s error handle
which I which I have already explained
so it&#39;s a recent configuration which I
have already explained there is some jaw
schema or jord schema.
This contain our password schema with
proper password validation. Okay. And
schema for shiner form and type and also
this one sign in form and the utils we
have some utils the CN functions and
middleware which we have already done.
But if you think how I have generated
types to generate the type you need to
explore the package JSON because I have
added the script in package JSON
close other
okay so now I have done you can see here
it&#39;s using bun but sometime bun not
works that&#39;s why I will use npx okay
okay if you are thinking why I&#39;m not
using the p and pm here I don&#39;t know why
but pnpm sometime gives me error That&#39;s
why I am using the npx because npm is
common thing which you may have but one
you may not have that&#39;s right uh and
just convert this to npx okay and now
it&#39;s og genen it&#39;s uses the o cli okay
better o cla you can if you go here in d
dependency you will also see the o cla
this is same same to same like drizzle
kit okay working is same it&#39;s a dil kit
and uh
and what uh now what I&#39;m doing here it&#39;s
a generate and in the config we are
passing the location of our ts okay so
location of this o ts file here okay so
to refer that file okay and if you want
to know about that if you go to any
plug-in let me go to the admin plug-in
admin plug-in not admin just okay addon
admin okay if you come here you can see
here uh migration and generate Okay,
we have option to generate and migrate.
For that, we need to install the CLI.
Okay, if you want to see the schema, you
can see the whole schema here. Okay,
it&#39;s shown you. Let me Now it&#39;s time to
generate the schema here. To generate
the schema, uh just come here. Okay,
another cell. And now cls not CLW and
run this oxygen script. Okay, so PN PM.
Okay. So now it&#39;s uh prompting as to uh
I am creating a O schema.ts file in your
root directory here. Okay. So uh yeah I
will allow you to create. Okay. If you
allow that you can see this will create
our O
schema. You can see this is our whole
schema here. You can see here our whole
schema. The same schema I have copied
from here and I have pasted here. Okay.
the same thing I haven&#39;t changed
anything except this one. Okay. So it&#39;s
I think you have understood and I have
explained whole thing from here. Okay.
So
now it&#39;s time to implement our dashboard
and dashboard. Okay. This uh by the way
this project structure is not enough for
us because we will use a dedicated
server uh for selling the uh for selling
services via API. So we need a monor
repo setup. By the way, monorreo setup
we do not required here. But I want to
just teach you. But if you go to the my
channel, maybe this one. Yeah, this this
browser instance. And if you go to the
my channel, uh I have closed that thing
because currently I am recording the
video as 11:27 p.m. It&#39;s night. Okay. So
uh let me open again. Okay. And if I
open this here, uh you can see yeah this
one the my latest video is monoro. Okay.
I have built a video on monor with PNPM.
So if you want you can refer this but
it&#39;s optional. I will cover cover
everything here. This is my project
which I have built previously. So you
can go and refer here but I am planning
to change some things. Okay. Uh I will
change some files. Uh I fail I am I mean
I will change some file here from here.
Uh you will fail difference. Worry not
but I will push my this code to this
GitHub repo. So just worry not. uh you
will get the latest word which I have
used on my YouTube. Why I am changing
the file to because the del
here is not a group. We will pass the
del in our database package. Okay, here
uh we will pass the our package inside
this database. Okay, let me first uh
walk through the our uh project
structure. So app inside the contain
front end and back end and here is a
drizzle. Okay, it&#39;s a drizzle migration.
So video needing migrations
and now here database and utils. Okay.
So now let&#39;s try to create our this file
structure. Okay. So let&#39;s first delete
next because this next and the node
module is really high in size. Okay. So
we first need to delete this. Okay.
Uh just wait. It&#39;s take time because I
am on Windows. Okay. So this problem in
Windows. I know I don&#39;t like this
problem but it&#39;s a problem then we so
just we need to
okay so delete this permanently because
we do not need uh these files okay this
will autogenerate it uh on PNPMI and dev
okay so just just uh okay just do this
okay so now our file is now our file is
deleted so let&#39;s create a folder named
apps okay okay it&#39;s a file
We need apps here. So create a folder
names apps. Okay. Uh inside the app,
create a back end. Okay. So not a back
end. Uh create a front end first. Then
so front end. Okay. So it&#39;s a front end.
And also create a folder called back
end. Okay. So we need to migrate these
files in the front end. Okay. So just
select okay. Uh shift down. Okay. Now
this will select everything. And now
migrate it this into the front end.
Okay. Okay. Okay. It&#39;s done. Done. Done.
We have done here. And now we need again
a folder called packages. Okay. So
create a folder called packages.
Okay. So packages. Inside the packages
we need two folders called
utils
and second one is database. Okay.
Okay. It&#39;s a database and now we have
done and now we need to we need here uh
PNPM configuration file for workspaces
and also the package JSON and also some
log files. Okay. So just come here and
uh let enter cls and create PNPM
PNPM in it. Okay.
Okay. Now this generate package JSON
file here. SMM guru it&#39;s fine. Version
index.js JS we do not need this. So just
remove from here. Description not
required. Script required but this this
script we do not need and keyword not
required. Okay.
Not required. Ah name. Yeah it&#39;s me Em
what I am writing here.
Okay. So license is everything it&#39;s fine
here. And now what now we need to do? We
need to set up a workspaces for PNPM
workspaces. So just search here PNPM
workspace.
PNPM workspace. Yeah, this one pnpm
io/workspaces.
So for workspaces, we need to create
this file. Okay, so YAML file. Uh it&#39;s a
YAML. Copy this one. Come on here. Come
on here. And just paste it here. Okay.
So YL file. And now there. And in the
workspaces. Yeah, you can see this is
the type setup. So, we need
Okay, I don&#39;t know where&#39;s the
workspace.
Okay, yeah, we need to click here. I was
forgotten about that. Okay, so copy
this. Okay, so copy this from here and
just paste it here. And now what we
need? We need this kind of thing. Okay,
because we have a folders inside the
packages. So, that&#39;s why we need that
one. Okay, so this one. And now
duplicate it or here just past apps.
Okay, this will tell PNPM to our
workspaces where are our workspaces
exist our work space inside this folder
and inside this folder. Okay, so there
are two things. Okay, and now here and
here and it&#39;s done. And now we need some
more configurations here. Okay, so we
need a TS config file. Okay, so here we
need a TS config file. inside the TS
config. We need to implement some
things. Okay. So, if you want to know
about this, yeah, you need to watch this
video. Uh but if you don&#39;t want to
watch, there&#39;s not a problem. Go to my
GitHub repo and here somewhere uh uh I
haven&#39;t remember you will find a a
GitHub repo called PNPM monorreo. Okay.
If you go to my repository, I will put
that link in description. So, you can
find from there. Yeah, it&#39;s a PNPM
monorreo. Okay, so there we need to copy
just our tsconfig configuration file.
Okay, if you come here, I have
documented everything. So you can read
the document. Okay, so just copy.
Okay, and also copy the name.
Okay, that&#39;s fine here. And now come on
here and come on here and come on here.
Just paste the name and paste our
configuration file. Yeah, this one.
Okay. So here we I think we need to
change some things. Let me see. I
haven&#39;t remembered. Okay. This one, this
one, this one. Correct. Okay. Uh we
haven&#39;t uh Okay, it&#39;s we haven&#39;t said we
have database. So data base.
Okay, it&#39;s fine. But why we are getting
the error here? Because uh there is uh
because this demanding the package JSON
file here. But currently we haven&#39;t
package JSON. So worry not, we will fix
this error in some time. And the back
end, front end, database, utils. Okay.
Uh we have four folder setup. So it&#39;s a
four-folder setup. If you want to add
more folders, you can add more. And you
can tell types our paths exist here.
Okay. So here also we need a one file of
TS config which is the base TS config
for our packages. This one.
Copy this whole.
I have also documented everything here.
Everything. Okay. So, just copy the base
config from here and come here. Come
here. Come here. And just create this
file and paste our configurations here.
So, yeah, this one is our configuration.
Okay. It&#39;s haven&#39;t pasted. Let me try
again. Yeah, it&#39;s done. Andun done.
Okay. Yeah, every conf Yeah, everything.
If you want, you can. If you want to
change anything here, you can change.
But I don&#39;t recommend you to change
anything. Okay. And now here we have
utils. Okay. So it&#39;s a util. It&#39;s fine.
In the utils we will create a src
folder. But we haven&#39;t created yet. But
we will create. Okay. As said we haven&#39;t
said we have database. So data base.
Okay. And here database.
Okay. It&#39;s a database here. And now we
have done with this part. Okay. So now
it&#39;s time to create our packages. Okay.
So inside the packages
so now what we need to do first first we
need to create a src folder here. So src
okay inside the src we need to create
index.ts ts. Okay. So file index.ts.
Okay. TS. Okay. So it&#39;s our index file.
Here we will add our some default
exports. But for now uh let me create a
package JSON file here. So PNPM. Okay.
Why why it&#39;s writing here? So let me
first clear the terminal. So PNPM init.
Oh, okay. We do not need to init PNPM
here. We need to first go into the
database. Okay. So cd dot forward/
packages. And after the packages we have
database tab. Yeah, we are on this one.
So PNPM in it. Okay. Okay. I think I
have I have right the wrong spelling. So
in ID and it PNPM and it now this
creates here. And now here what now we
need to do? We need to change the name.
If you come here you can see uh I what I
have given the name space. I mean you
can say name path alias. So our path
alias is this. So I will recommend you
to use this path alias. It&#39;s it&#39;s
recommended. It&#39;s not optional. It&#39;s
recommended. Okay. So, come on here.
Install the package JSON of not front
end. Not this one. Yeah. Uh not this one
where my package JSON. I think I have
closed somehow. So now come on here and
add database after that. Okay. I have
written I have written this. Okay. So
here test script. We do not need text
script. Just remove this for now. We do
not need this part. Just for now remove
we will add configurations here. So
worry not. Okay. So here uh package
manager we do not need this here. So
it&#39;s enough. Okay. Now let&#39;s try to uh
configure this file. Okay. But first I
think we need to configure our um TS
config here. Okay. So I think I need to
go here uh in the PNPM mono repo. Uh
it&#39;s better to come on here. I haven&#39;t
added a full configuration here because
at that time I wasn&#39;t know about the
everything of monoru but now I know
multiple things in about the monoro you
can go you can see here there are
multiple things okay so if you want you
can add but there is main thing uh here
you need to add this build oh I mean you
need to add this build indexes and also
the types for this okay because we are
using the typescript if you don&#39;t use
this then you will get the error like uh
the corresponding type have not defined
were not found this kind of error. So to
fix this we need to add this and also we
need to install typcript okay as a
dependency in every packages. Okay. So
we need to install typescript and we do
not need jaw here. Okay. So and uh we
need to specify a script called build.
This will build our jar typescript file
into the javascript file. Okay. So we
need to configure this. So just copy
these two. Okay. Remove the description.
Uh if you want you can add but I don&#39;t
want to waste my time. Okay. So it&#39;s
just a time waste. Okay. So here we need
to add typescript here. So so so so to
add typescript I will recommend you to
just come here and copy the dev dev
script and also this script. Okay.
Because we will run uh we will configure
everything for now and we then after
that we will run pnpmi and this will
install all necessary softwares I mean
tools. So we will not need to care about
that. Just here uh I don&#39;t want this and
I think author on root level is enough.
So I don&#39;t want this and also I this one
is root level is enough. So this part is
done
but it&#39;s not completed and we need to
write tsconfig file here because we if
you want to use the typescript we need
tsconfig file. So here just come on to
the utils uh what we are doing in the
tsconfig file you can see here I am just
extending our base tsconig file. This
one this one you can see I am just
importing like in a javascript we are
importing things. Okay, just like in typ
config JSON we are importing this base
config file into our packages. Okay. So
to to do that just come here and create
this TSC config JSON file for now. Uh
but before just copy this one. Okay. And
copy the name. Okay. And now come here.
Come here. And come here inside the
database. Just create a file. Uh just
put the name and TS configuration. And
here just put the copied content. Okay.
So this one is our copied content. And
now control alt f. Okay. So uh what we
are doing here? Let me explain. Here
I am extending this this base config as
we discussed compiling or compiler
option we are setting some things root
we are setting this this is the root
directory every file will exist here
nothing other there is no other file uh
if you provide any other file this will
not going to detect okay so if you want
anything you can write here okay and now
diir this means this will create a build
file okay inside the fold build folder
somewhere after that database. Okay. And
now no it&#39;s something okay it&#39;s a utils
it&#39;s just generate a build file in the
root level. Okay. So uh here we need to
add database. Okay. So database.
Okay. Uh here. Okay. And now include uh
this include specifies every files a
file in t in src inside the src. Okay.
So now I think this setup is done. The
setup is done for our database. Okay.
And same setup we need for util. So just
delete this util file. Okay. Because I
don&#39;t want to repeat myself. Okay. So
delete and just uh copy and paste. Okay.
So hit Ctrl + C. After here come here
Ctrl + V. And this will create a
database copy. So just rename it to
util.
Okay. So it&#39;s a util. Uh rename rename
rename
util. Okay. Yeah, it&#39;s this one utils.
And here just we need to change some
configuration. It&#39;s okay. But here we
now need to change this database to
utils. Okay.
Okay. This file is done. And this is the
same. And now also we need to uh remove
this database from here and write utils.
Okay. Okay. Index, index, index, index.
But it&#39;s not enough. We need to specify
some exports here. Okay. But for now,
just leave at it as it is. Okay. So here
uh now come here. Here we need to uh
create a database things here. Okay. So
here.
Okay. So now what now we need to do? We
just need to come here and just cut I
mean just cut this from here. uh this
trigger configs just cut this from here
and paste the trigger config file here.
Okay. So just paste it here. Okay. So
here we have the this file and now you
can see we are getting the error. So we
need to install these things. Okay. So
to first before uh let me install these
things. Okay. So PNPM we are inside the
database. So PNPM uh add-on
D what we need to add? We need to add
this one drizzle kit and also we need to
add env here. So dot okay so env okay
this will install these two tools here
because we need here why because we will
add set up our env file here inside the
packages level and we will use that
database URL here. If you&#39;re thinking
why I am using this because uh we need
to generate migrations we need to take
pools that&#39;s why we need our database
URL here. uh but if we build the if we
build this this will not going to
transfer in our packages. Okay. So this
is only dedicated here. This uh this CNV
is only available for our development
mode and not in production and also we
not do not need this CNV in production.
Okay. So I think uh okay so after
multiple retries I have put multiple
retries with PNPMI this not work. Uh
reason currently I I don&#39;t know but I
find some reasons here. uh valid region
maybe this is scans in all workspaces
but in our workspaces here you can see
okay it&#39;s available package JSON yeah
it&#39;s fine package JSON and dash okay
okay okay this is fine this is fine and
maybe this is due to the back end okay
because inside the back end there is
nothing okay so I think this problem
occurs due to the back end there is no
back end so let me open my browser again
okay uh it&#39;s okay it&#39;s open it&#39;s here
okay on this instance okay so now here
Just go to the hono. Okay, so hono
hono.dev.
Okay, I think I haven&#39;t write a wrong
thing. So go to hono. Hono.dev. By the
way, hono is awesome framework. Okay, so
Huno getting started and here getting
started and getting started basics
getting started and PNPM because now we
have shifted in PNPM. So just this one.
Okay, I copy this whole command and just
come on here and come on to the
terminal. This one there is a terminal
and remove this part. Okay, and now this
one. Okay. Okay, I think I have added
wrong control cc. Okay, we do not need
here. Okay, uh we need to go the cd dot
forward/ apps and forward/backend. Okay,
here we need to install things. Okay, so
just put our command here. Not this one,
this command. And this will create a
repo for here us here. Okay. So we need
to select NodeJS because uh we are the
NodeJS boys. Okay. But I don&#39;t like
NodeJS. I like the bun environment
runtime. But there is
Okay. So PNPM. Okay. Now this is cloning
template. Maybe after that uh we uh we
will able to install our whole projects
uh node modules. Okay. Okay. It&#39;s
installing some dependencies. Just wait
for a few times.
Okay. So after a long time. Okay. I
don&#39;t know why it&#39;s take that much time
but after a long time it installed
everything and it&#39;s uh only not
installing back end. It is also
installing packages and everywhere it&#39;s
installing node module. So now I think
we have done here just remove that.
Okay. So inside the database just create
a file called env. Okay. So there is a
env file. Worry not we will use a get
ignore file to ignore that thing. Okay.
So now here what now we need to do just
we need to pass our database URL here.
So just command here and copy the name
from here and just hit process env
because here we do not need to use the
env.ts file because there is only one
variable. So I don&#39;t like to add a extra
file here. So that&#39;s why okay here uh
just pass this here. And now copy the
email I mean not email uh copy the URL
from the front end env. So here it&#39;s a
front end env. Okay inside the front end
env we will get this post database URL.
So copy the postgress database URL from
the database and paste it here. Okay. So
now we have done here. Okay. And also
okay so we have done here and now I
think we have also done here is uh okay
the problem and result kit. Okay. So
check that is this module. Okay. Uh this
haven&#39;t installed result kit. Okay. Uh
not a problem. I know why it&#39;s not
installed. So uh it&#39;s not a big deal.
Just wait for now. And it&#39;s done. Uh we
have configured our this file env. Okay.
And now it&#39;s time to migrate our result.
Okay. This file. Okay. So just X control
X here and move that inside the database
and paste here. Okay. And rename it to
migration. Okay. Migration.
Okay. Migrations
I think.
Okay. I think this is the correct
spellings. Okay. So, migration just
rename and copy the name from here and
paste it that name here. Okay. So, okay.
So, microations. Okay. It&#39;s now okay.
It&#39;s looking good. Uh, and now no, no,
no, no. Okay. Let me see the Okay, there
isn&#39;t a schema file. So, we need to add
a schema file here. So just come on here
go to the front end src inside the src
inside the li uh here you will enter the
database you will find this. So control
x from here okay and create inside li
inside the src. So live
a folder live.
So live inside the li we need to create
a file called I mean a folder named
database.
Okay inside the database we need to put
schema.ts. Okay. So file is see okay not
we do not need to create we have already
created we just need to paste okay okay
so now okay what happened here I think I
have pasted some wrong things here okay
it&#39;s paste both things okay I think I
have copied which I haven&#39;t required
here okay so I have copied whole thing
but not a problem it&#39;s not a problem uh
we only need to make this here so move
it okay and
yeah here and B database. So we need to
remove that because we will create
another database instance. Okay. So for
now this is not a important thing. So
first but I think we need to first
migrate this from here uh to same place
uh where is previously exist. So here
okay okay what what okay
and just paste here. Okay. So uh this is
here and okay database is here and
library uh and inside the database we
have the schema okay here we also need a
second file called db.ts okay uh name is
same so db.ts but configuration will
going to hit different okay so db.ts ts
schema and inside there we need another
folder called drizzel
okay so drizzel uh we will export
drizzel APIs here so uh create a file
called root ts okay I know I know it&#39;s
confusing I know it&#39;s very very
confusing I am understanding your your
thoughts okay because I have also
suffered from that point okay I know
this is confusing and this is the
monorreo project structure a monor repo
project structure is really a hell.
Okay, it&#39;s a hell. But if you understand
this repo structure now, then this will
solve your all problem. I like this one,
this monorreo structure. And I always I
think I&#39;m planning to use this repo in
whole whole my upcoming project. Uh if I
will use multiple servers and multiple
apps, okay, then I will use monor repo.
It&#39;s guaranted. But for now, just uh
just ignore my words, okay? So just come
on to the package JSON here we haven&#39;t
drizzle kit we need drizzle kit and we
need envy
it and see we are on back end so cd dot
dot/packages
okay not there again do/packages
and inside the packages we have database
okay so database cls and pnpm and hyphen
d okay this one and also try to do
again. So previously uh previously this
what have this wasn&#39;t installed but I
think that time this will installed.
Okay so uh we now it&#39;s enviril added. So
we need to import the drienv here. So
import yeah okay what I have done here
this one and I don&#39;t know why I&#39;m
getting the multiple errors here. I am
not sure about that one that error but I
think if I hit control shiftp and reload
my dev server I mean VS code window then
this will error this error will gone
okay I am sure about this okay okay it&#39;s
happening it&#39;s happening
and here we need to create a folder
called schema okay so it&#39;s important to
create a folder called schema so
c h e m a schema okay schema folder and
move this schema.ts to the schema
folder. Okay. Okay. I&#39;m getting the
error here. Let me hover here. And there
are some errors. I don&#39;t know about the
error but for now uh it&#39;s not my
priority to solve the error. Uh how is
my priority is to uh fix this thing.
Okay. So schema add a schema here. So SC
schema.
Okay. This part is done and we have done
this one. And here we have a error. I
know about this error. So yeah, if I add
this, maybe this will going to solve the
error because in some cases this may be
uh undefined. So that&#39;s why it&#39;s
throwing the error now. Okay. Yeah, it&#39;s
solved. Okay. Uh the error is solved.
This is working as expected. And
schema.ts we have error because we
haven&#39;t entered drizzle core here. So
one thing first thing first just come
here the package JSON of here. Okay. So
this package JSON and now here we need
to remove drizzle from here. Okay. Uh
remove the postgress from here because
we do not need this one. Okay. And also
remove the drizzle from here. Okay. So
drizzle drizzle drizzle OM because I
don&#39;t want to increase my bundle size.
That&#39;s why I want to remove every unused
packages and also we do not need this
one here. Okay. I think we have done
here. So if now I will come here okay in
the database packages and here we need
to add our drizzle OM okay uh to install
the drizzle OM I forgoted the name uh I
think it&#39;s only a drizzle OM but for
shifer side just go to their website
okay the drizzle OM
uh OM
and getting started
and and and okay just choose the
superbase
and and and yeah it&#39;s a just a drizzle
ORM. So PNPM add
these things because we have okay we
also need this postgress in our uh pack
database package. Okay. Okay. So just
hit here. Okay. This will install these
required thing.
Okay. So now drizzle OM and Postgress is
added and now it&#39;s time to customize our
database. Okay. uh but the database is
almost same uh which we have done here.
But in this case uh we need to create a
class and that class will take database
URL. Okay. If you are thinking why we
are not using this env uh to get the
database URL. The reason behind this is
because this will uh not going to in
bundle. Okay. This will uh not uh
because this will not include in build
file. That&#39;s why we are not able to use
this. If you want to use this then we
just need to uh uh save as a class and
after the class we need to create an
instance here uh in the front end and
the back end and there we will provide
our database URL. So now just let&#39;s get
started. Okay. So here now we need to
create the classes. So export
export class C cls class. If you don&#39;t
know about the classes then I will
highly recommend you to uh go to the uh
YouTube and just learn about the classes
in JavaScript because I&#39;m not going to
explain these things. Okay. These are
just a basic thing. Okay. So here we
need to make this class generic. So I
will use a schema. Okay. Uh it&#39;s a name
of my generic class. I mean generic type
extend record any. Okay. This one. Okay.
This one and this one. Okay. And just
add this here. Okay. So record extend
and this one and now add curly braces
here. Okay. Because no class okay not
here there add curly braces and here
it&#39;s a t schema jet at extend this and
this and a constructor that take
database URL. Okay let me close my uh
this one. Okay for disable for now. Okay
smooth. I think we need to smoo. Okay.
Yeah, I think now it&#39;s fine because it&#39;s
really a problematic thing for me. So
now let private and pool. Okay, so we
need to create a pool here. Inside the
pool, we will pass the type. Okay, it&#39;s
a SQL type which coming from the our
post. Okay, so it&#39;s a SQL and yeah, it&#39;s
coming from the postgress and it&#39;s a
record of any any. Okay, because I am
not sure about this what we will get
here. These are the typescript thing.
Okay. Uh I am just providing a type. But
if you want to use JavaScript then you
do not need to provide these line. Okay.
So in Typescript it&#39;s any and maybe any
this one. Okay. And now again we need a
second variable here. And the second
variable type is DV. So it&#39;s a public
uh we will return this. That&#39;s why it&#39;s
a public uh public
and
the type we want here. So the type is
this. If you come here in the front end,
if you hover here, you will get this
type. Okay. So just copy
and here and just paste it here and
there is any. So you need to pass this
schema because it&#39;s a generic class
which we have passed any schema. This
will extend the type here and we need to
import this one. Okay. What&#39;s this?
Okay. So let me remove this from here
and yeah this one. Okay. It&#39;s showing
the two instance. I don&#39;t know why but
it&#39;s showing the two instance. Okay, the
post.
Okay, I have accidentally added this. I
need to add this. Okay, so now this one
is worked and PB has no initializer, not
property. Okay, this is fine. I think
this is fine. There is no problem.
And also I need to return the schema.
This is optional. If you want to return
a schema here, it&#39;s you can return. But
if you don&#39;t want you don&#39;t want to
return a schema here. So schema uh it&#39;s
a type of a schema. Okay. So s c h e m
uh if you are not able to understand
this then not a problem. Uh worry not
when I when we will add this in add use
this in app then you will know the what
I am doing here. So I have accidentally
added here. So just we need to add here.
Okay there. And let&#39;s just format it.
And now after that what now we need to
we need to create a constructor. Okay.
So constructor and inside the
constructor we will get two things one
is database URL as we discussed
and the type is a string
okay and a string and we our second
argument we need to get schema and
schema is t schema okay so it&#39;s a t
schema and and now we need to add
okay so we need to this and here after
that we pool and inside the pool we need
to set post crush. Okay. Uh because we
need to create a pool here as we created
here. You can see as we created here we
will do same thing. Okay. If you want
you can just copy paste here to avoid
the confusion. So copy from here and
just paste this here. Okay. But for this
time there is no database URL. There is
this database URL which is we will get
dynamically. So this one. Okay. And the
second one is uh DB. Okay. So this
DV okay this one is DB and here uh we
will do same thing this one okay you can
see we want to do the same thing so you
can copy from here and you can just
paste this here okay uh there is no
result so we need to import the result I
don&#39;t know why it&#39;s showing the two
instance but uh but if you clear the
case this may be solved okay so this is
not PV this TV
okay I have I write this accidentally So
uh DV so it&#39;s a DB
and so this DB okay so DB client and
here the client okay so in the client
okay so in the client okay okay what I
have done what I control J and J in the
client we need to pass the pool okay so
this p pool okay if you come here you
can see the client which is this uh and
here we I have I named that thing you
can see that thing as a pool. So just I
am passing the pool here. Okay. So here
is the error and the error really I
don&#39;t know. I will take care about this
error in sometime but for now just
ignore it. Okay. And here is schema.
Okay. So this dot schema equals to
schema which we will pass here. So
schema.
Okay.
Okay. So I think we have done here. And
now we have some error. So yeah this one
this one is error in our case. I don&#39;t
know why I&#39;m getting that this error.
And also why I have get intented here. I
am also not sure about this.
Okay. No this is not an indentation
problem. This is the problem. Something
different. And let me hover here. I am
not going to solve this problem. So how
to solve this problem?
Uh I think this one I have done
something in type. Okay. If I control
fix Okay, let me see what copilot will
do here. Okay, I Okay, I was I got
because for previously I have imported
the uh I have imported the wrong
database. Okay, I have imported the
wrong Postgress uh uh I mean post
drizzle. Okay, so that&#39;s why we will get
the error. But now it&#39;s uh but no no now
no now no now no now no now no now no
now no now no now no now no now no no no
no no no this solve the error our
copilot is solved the error then we do
not need to take care about this it&#39;s
solved it&#39;s okay and I think I have done
everything here okay so now it&#39;s done
and now what now we need to do uh we
need to come on to the index ts okay
here
we need to export so first we need to
import then we will export so report
and
uh
okay so from and from where here uh go
to the live inside the live you have a
database inside the database you have a
DB inside the DB you have a class called
database and now it&#39;s time to return in
index.ts TS so export I&#39;m not ready it&#39;s
just export uh export if you want to
export default you can but I don&#39;t
prefer the default thing so I am going
to export like this okay so we also have
a schema okay so we also need to export
all the schema so for that I always
prefer to create a file here and name
that file
export dot sca
cm schema ts okay so name this one and
now export star from
there and dot forward slash schema.
Okay, so export from here. Okay, so this
will fine and now it&#39;s a root. Inside
the root we need to export drizzle APIs
like equal to and this kind of to do
that just export
uh everything from drizzle o. So because
inside that drizzle o and this contain
the API like every equal to and not
equal to here. Okay. So now it&#39;s time to
configure our package.json here. Uh to
configure the package JSON just come
here and ex add export. Okay. So exports
there and there and also add there
inside the dot dot dot we need to add.
Okay. inside the dot uh we need to add
the allocation for this index.ts. So uh
but not there we will create a build
file. Okay for now let me comment out.
Let me remove this because I want to
understand you better. Okay. So for now
just come here
and we have a build command. So we need
to just run build command. Okay.
[Applause]
Okay. So pn vm v uil build. Okay.
Okay. So I have run build and I have get
this error. I don&#39;t know when I have
added this bot thing. Uh but this error
is in tsconfig file. Okay. So let me
open the tsconfig file. Okay. I don&#39;t
know when I have added this but uh we do
not need this because uh we are using uh
the src. Okay. We are just specifying
src and everything in src. So we do not
need to use this. Okay. Uh by the way if
you want to ex uh include I mean if you
want to add some exclude so you can uh
add some exclude like uh exclude maybe
node modules okay it&#39;s best option to
add node modules also it will generate
build. Okay so it&#39;s best to uh uh just
remove build okay so uh bld build
folder. Okay, if you remember here we
have set outd build. Okay, so uh if now
we try to run this. Okay, so this time
we will not get any error. Okay.
Okay. So now it&#39;s done and now I&#39;m not
getting any error. Now you can see here
there is a build file and if we open
this then you can see there is index.js
but there is a problem. Uh this uses
export. Okay, this is just common JS.
Okay, but we want module. Okay, so for
that what we need to do? we need to come
in the package JSON and in the package
JSON just expo uh specify module okay so
module and module we want okay why I&#39;m
not getting such an I am writing
something uh uh I think it&#39;s not module
let me check
okay so it&#39;s not module it&#39;s type I I
was forgot I have just checked okay so
it&#39;s we need to select the module if we
select the module uh if we try to uh run
build we will get error okay so we will
get error but I want to show you the
error and I also I want to show you the
fix. Okay, so for now just run the
build. Okay, it&#39;s running build.
Okay, I don&#39;t know why it&#39;s build but
according to me uh this will going to
throw some error but I don&#39;t know why
it&#39;s build is completed maybe because I
am using this kind of thing. Okay, I am
using only one export. Okay, so I think
that&#39;s the reason but we do not want
this only one export. we want more than
one export. Okay, because we have the
multiple things. We have the schema and
we have the drizzle APIs uh you can say
operators and uh we are only referring
the only one index.ts. So we need to uh
again customize the package.json but we
do not need this. Okay. So just remove
this and define exports. Okay. So we
will define export and we will set what
thing we want to export and what path we
want to use. Okay. for export. Okay. So
we will define everything here. So for
dot okay dot means it uses uh monorreo
pnpm database. Okay. It&#39;s not a monor
repo. Uh it&#39;s uh smm guru. SMM guru.
Okay. SMM guru/ database. Uh when we try
to access then we will get what path.
Okay. So it&#39;s a object. Okay. So it&#39;s
it&#39;s object. We need to pass types.
Okay. So you can see it&#39;s uh following
this types build index ts and also this
one. So we want this thing. Okay. Uh if
you don&#39;t know how I select these so
just come here inside the build inside
the build you will find the index js.
Okay. And also you will find index d.t
js. Okay. Yeah this one ds. So you will
find in build folder. And it&#39;s not
enough. We also need to define more.
Okay. So for now just here and maybe we
want
uh drizzle. Okay. So drizzel you can see
uh in the drizzle uh we have this build
and drizzle drizzel there. But I know
this path is not correct but AI is
suggesting me. So I will accept this.
But now if you come in the build go to
the lib and if you go to the drizzle
then you will find root and root d.ts.
Okay. So we need to uh give these thing.
Okay. So here inside the build we have a
folder named drizzle.
Okay. So drizzle forward slash and the
drizzle we have uh root dot js. Okay.
It&#39;s a type. So we want root dot uh
d.ts. Okay. I think it&#39;s good. Yeah.
Root. D. Yeah. TS. Okay. It&#39;s enough.
Okay. So now just copy this. Okay. So
just copy this. Okay. and just paste
this.
Okay. And here just remove this and also
make it JS because here we have compiled
file JS. Okay. So if you think this
enough, no it&#39;s not enough. We also need
to define a schema. Okay. So just add
comma here and schema. Okay. So ch/
dot forward slash
schema.
H M schema. Also we need to export the
schema in custom path. Okay, if you are
wondering how we will use this then
worry not. We will use I will tell you
how to use this but for now just use AI
suggestions. Okay, let&#39;s check let&#39;s
check. Okay, uh in the build okay we
have a schema. Okay, so in the schema
okay so we have export schema you can
see we have export schema. So
okay okay I have forgot. So just so for
safer side just rename and ctrl a and
ctrl c and the type. So let me first
come here and paste this here. Okay. So
it&#39;s a gs file and also paste this here.
Okay. And make it d dot ts.
Okay. So let&#39;s format it. Okay. I don&#39;t
know why I have run build then I have uh
I have given. Okay. I don&#39;t know why I
am again get a this module thing but we
need to fix this okay because uh when
you will use this uh package in your v
react app then you will uh get into
trouble because v react app doesn&#39;t
support this uh common gs export v react
app only support u modules okay so
that&#39;s why we need to figure out this
okay so here the there is a problem let
me try to run build again
okay so now again we try to run this
then we will get error. I am sure now we
will get error. Okay. So just wait.
Okay. So now we are getting the error.
Okay. So okay. So it&#39;s fine to get error
here. And I will recommend you to uh add
one more configuration here. Okay. So
here just just let me paste. So it&#39;s the
module detection force. Okay. So let me
explain you what this will do. Okay.
This will force uh TypeScript to treat
whole code as a module. Okay. Uh if you
don&#39;t force it, there is a default
option which is auto. If you set to
auto, then it will if you use export
import in any file, this that will
consider as a module. If you don&#39;t use
uh uh import export in some file, that
will console consider as a global
script. Okay. So global script is useful
in when you are using the script tag in
HTML. So that kind of thing for that
kind of thing global uh script is uh
helpful. But uh in our case we are
building a library. Okay. It&#39;s a just a
basic library. So for us uh it&#39;s good to
set force. Okay. And about legacy I
don&#39;t know about the legacy. Okay. So
legacy behavior. I don&#39;t know. I am not
sure what&#39;s the behavior. If you want to
know you can just search on YouTube.
Okay. So this is done. Okay. So if you
want to learn Yeah, you can see I have
written there. Okay. So uh we are
getting this error. So this error is due
to we haven&#39;t added the extension here.
Okay. If we add the extension this will
solve the problem. Okay. Uh to add the
extension just come here. Okay. Make
sure you always add JS not TS. Okay.
Because this will compile into JS. So we
need to add JS here. Okay. So it&#39;s
really a important thing and you may
need to consider this. Okay. So there is
nothing. Okay. So if you come here okay
so we want to use JS. Okay. So okay. JS
not comma JS. JS. If you come to the
root, okay, we do not need to do
anything here is we need to do no we do
not need to do anything. I think I have
done here. Uh let me try to run build
again. Okay, so
cls. Okay, so I always like to clear
terminal but if you don&#39;t want to like
write CLS, you can just uh hit Ctrl L.
Okay, now try to look at the build.
Okay, so if we now look at the build,
now you can see we have import and
export. Okay. So I like this one and
this is really helpful when you are
using the uh V react tab. Okay. Because
today I have working on my company
project and where I am working telepathy
technology. I have built that this
thing. Okay. I have built the database
and I have built the better os feature u
module subm module. You can not subm
module and say just library. Okay. uh
for for in the front for front end and
back end but in back end uh everything
was working perfectly but in front end
uh this will throw the error because the
front end is built on the V react okay
and the reason because uh uh if this
convert okay this compile into the
export okay common JS module I mean
common JS syntax but we uh uh we react
only accept import and export that&#39;s why
we am ing error. Okay, it takes my whole
day to fix that. Okay. Uh but now it&#39;s
fine. Okay.
So, uh it&#39;s fine. Okay. So, now it&#39;s
time to uh come on to the utils. Okay.
If you come on to the util, so we need
to configure the utils. Okay. So, here
just SMM guru.
Okay. So, SMM guru
uh utils. Okay. So, here what now we
need to do? We need to put okay a type
module. Typescript is recommending me.
So let me use the type modules. Okay. So
this fine fine fine. Okay. And now what
now we need to do if we come here. Okay.
Somewhere uh
huh in the tsconfig file here we also
need to add. Okay. It&#39;s good to add.
Okay. It&#39;s it&#39;s not good to add here.
It&#39;s good to add in there base. Okay.
Here. Okay. Okay. I have added in base.
I was forgetted then you do not need to
add in add uh in each tsconfig file
because this will imported here. Okay.
So now it&#39;s done. Okay. So we need to
write some utils here. But for now uh
just ignore this. Okay. For now I&#39;m not
going to write anything here because
currently we do not need. Okay. So it&#39;s
fine and it&#39;s fine. And now if you&#39;re
thinking how we will use this thing in
our app. Okay. To use this in our app,
just come on to your app. Okay, let&#39;s
collapse library and collapse here and
open your app package JSON. Okay.
Okay. So here we need to add these those
as a dependencies. So how we can do?
Just come on here. Uh maybe somewhere if
you want to go anywhere you can go just
add the SMM guru. Okay. So, SMM guru
guru dash now dashn net forward slash
you can see here it&#39;s uh giving the
version but uh I don&#39;t want to add
version just add workspace okay so
workspace okay store uh uh any version
I&#39;m not consider I&#39;m not going to
consider the any version here so that&#39;s
why just uh pick up any version okay so
here a database okay database
okay and also same thing but make sure
Always make sure you will uh use same
name as you use in your uh packages
package JSON file. Okay, you can see the
name name same same. We want same name.
Okay, if we use the wrong name then
there is a problem. Okay, so you need to
take care of this. Okay, so also just
come on again on front end front end
here. Okay, and now copy this. Okay. And
we also want the database and utilson
back end and honjs where we will sell
our API sell our API. So here we also
need to add. Okay. To add this just come
on the dependency maybe here just add.
Okay. And let me format it. Okay. It&#39;s
formatted. And now if we try to look at
this now I&#39;m not going to uh interrupt
anything here. It&#39;s okay. Uh if you want
to interrupt you can do because I have
explained much things about uh ts
config. Okay. Okay. Okay. But now
it&#39;s done. It&#39;s done. It&#39;s done. It&#39;s
done. And I think what now I need to do?
Now it&#39;s time to add multiple script.
Okay. Multiple script. But for now, uh I
want to do something. Uh I think I want
to do nothing. Yeah, I have I have
remembered what I want to do. Uh let me
open here. You can see uh there is a
scripts. Okay. I haven&#39;t added a script
except build. Okay, if you again come
here, there isn&#39;t script uh except
build. But in utils, we do not want any
script uh instead of utils. But in this
case, here we are using the migrations.
Here we are using the generating the
types uh multiple things we can do here.
So we need to add a script here. Okay,
for our drizzle kit, okay, maybe push
pull studio this kind of thing. So to do
that uh I if I think you have remembered
we have configured this already okay
here. So for now uh for now I have
removed uh drizzel uh drizzel uh
dependency from the front end and maybe
on back end. So what we need to do we
just need to cut this these scripts from
here. Okay. So cut this script and just
come on to the uh database
package. Okay. So here just come here
and just paste those scripts here. Okay.
So I think this will fine. Okay. Okay.
Okay. What I am doing here. Okay. So F
not F because here is a comma. Okay.
Okay. First let me try to format. Okay.
Yeah. It&#39;s push gen.
But there is a problem. uh when we want
to generate when we want to generate
types and not types
uh SQL commands and we then we want to
migrate our database then we need to
just hit cd/package/
database we need to do that kind of
thing but I don&#39;t want to do that kind
of thing then what&#39;s the solution so
there is a solution okay package JSON
not package JSON PNPM provide a solution
for that but for Now just ignore it. I
will solve the solution. I will show you
the solution in just a few time. Okay.
So just remember this. We have added
this script here. Okay. So now let&#39;s
collapse this.
And if you come on the front end uh let
me show the script. Okay. You can see
it&#39;s a lint and next lint. Uh but if you
want you can use eslint but I am not
going to configure eslint here. But in
my upcoming videos, I will configure the
ESL because uh I will I will make my
template that kind I will make my
template that FCN uh to handle the ESL.
Okay, is it it is also able to handle
ESL but I don&#39;t want to configure
ESLint. Okay, because front end is
already configured with ESLint back end
maybe not but in future videos I will
configure ESLint. Okay, so it&#39;s not a
problem. It&#39;s not necessary thing for
now. Okay. So, but I want to show you
just something. Here is a dep command
and here is a build command. Here is a
start command and also here is a ogen.
Okay. In some cases uh we want
authentication as a separate route. But
for now I am using here. Okay. So I&#39;m
not going to make it uh make for a
package for authentication packages. So
if you want you can make you can make
this just as a for back end database.
Okay. Uh okay. So you have see shown
this uh see these scripts. Okay. Now in
the back end we have this script and the
build and the start. Okay. So we have
some dependencies and the back end.
Okay. So I always like to add at the
rate
SMM guru
for/back end and also for the front end
because I had forgotten that thing. So
it&#39;s uh better to add here. Okay. Uh
it&#39;s a starter kit. So it&#39;s not a
starter kit or not now. So it&#39;s now SMM
guru&#39;s front end. Okay. So SMM guru
front end. Okay. So now it&#39;s good good.
And now it&#39;s time to come to play with
our root package JSON. So collapse
others um I mean close others not
collapse. Hit control J to close the
terminal. And now it&#39;s time to add a
scripts here. Okay. So in PNPM there is
a multiple uh uh multi uh we can perform
multiple operation uh and from the root
level we will access some other uh other
command script from the some other
packages. So we will do from here. So
now let me do
okay so here just add a dev script. So
dev okay uh dev script for that we will
use pnpm. Okay. Uh for now I&#39;m not going
to use filter. I will use run in
recursive. Okay.
Parallel. Okay.
Parallel tab. But I want one more thing.
Uh aggregate output.
Okay. Okay. Aggregate output. But if you
want to know about these things, you can
refer uh the talks of the PNPM. Okay. I
think I have written the wrong spelling
of aggregate. Let me check. Okay. I
think it&#39;s wrong. Okay.
Okay. Yeah, it&#39;s good. And it&#39;s good.
And now we also want to add dev build
descript. So v u build. Okay. So when we
run the build, we will gener we want to
generate build for whole files. Okay. So
for build I&#39;m not going to run build in
parallel because uh because if we run
the build in parallel then uh when we
are trying to run build front end uh
maybe uh there is uh maybe when we try
to build front end maybe there is very
very high chances the packages database
is not built yet then we will get the
build error. So to prevent this we will
not going to use a parallel build we
will use sequence by sequence build.
Okay. So, PNPM
run
- r and just what now we need to do just
we need to run the build command from
each okay and here and now here
something I want to know I want to do uh
here a start command uh if you want to
do add a start command you can add I&#39;m
going to add this okay it&#39;s not
necessary but maybe some cases you want
okay so I always like to add one more
script here which is the dev front end
front end okay and it&#39;s a dev front end
okay you can see uh www it&#39;s perfect but
there is a one problem I will use filter
here okay
lt er okay okay filter - filter we need
a dual hyphen here okay so this will
what we will do and also I want a
recursive here so hyphen r okay so what
this will do uh this will filter the SMM
group front end and from the front end
this will run de script. Okay. So I
think this is good and also I&#39;m going to
do this for back end. So uh dev back end
and you can see recursive guru. Yeah
it&#39;s enough uh for me and I also make
sure uh something uh for deployment I
also add add some scripts for this
deployment. So for deployments we need
this script. So build
front end
build front end when we try to build
front end we need to build more things.
Okay. Here the recership. First what we
want to build? First we want to build
database. Database.
Database. Okay. Okay. After the database
- filter. Okay. After the database, I
want to build
SMM guru.
Okay. It&#39;s not a front end, but let me
accept this suggestion. Not front end.
And utils. I want to build UTIs utils.
And after this I want to build hyphen
front end. Okay. Uh when we will deploy
then we will set a custom script and uh
uh instead of running only build we will
run build colon front end and this will
run necessary builds and and also for
front end and all the packages. But it&#39;s
not enough. We also need to uh add a
build command for
back end. You can see here the build are
SMM guru database, SMM guru utils and
SMM guru back end uh back end and it&#39;s
it&#39;s a fine okay it start
uh it&#39;s good uh when we want to start uh
production server so from root terminal
we can leverage this okay uh let me
check because this is AI generated AI is
not going to generate 100% correct code
that that&#39;s why it&#39;s need human
interaction uh to make it correct. Okay.
So, front end front end front end. Okay.
It&#39;s fine fine fine. But I want some
more scripts. Okay. So, here uh let me
add some more build scripts. Okay. So, I
prefer to build a script here. Okay.
Okay. So, what I want to build u build
database.
Okay. This will build a database. Okay.
So, database and you can see run filter
database builder. It&#39;s good. It&#39;s good.
I want this. Okay. So, build.
And for now, I&#39;m going to build utils.
Util util. So, it&#39;s fine. Fine. Fine.
Okay. And I think I have I want one more
thing. Uh in some cases, I want to run
uh the apps in this back end and in
front end and same thing. Okay, we have
only the front end and back end server.
That&#39;s why this is enough. But in your
case maybe you have multiple servers and
multiple back end and maybe you have the
email server okay of react email then
you will add the colon app and then you
will filter out what you want to run
okay
so it&#39;s a dev script build script start
script dev front dev build and after
adding these things okay if you again
hit Ctrl J and now we don&#39;t want to go
in the packages and database Not needed.
We will just hit this. And now we are on
the root. Okay. If we ls here. So you
can see I am on root. I have built flat
in Ghana. Okay. You can say blah blah
blah.
Okay. So now let me uh show you the some
demo. If we try to build so PNPM uh B u
build colon database.
Okay. For now that time I not want to I
don&#39;t want to go inside the database.
Okay. So from here I am able to build
the database. Okay. Yeah. You can see
it&#39;s good. And if I want to start my uh
dev servers then I want okay I mean I
want to start my next JS server then I
will run here PNPM dev front end.
Okay. This will start my next JS server.
If you remember this is the next JS
script and this is starting nextJS
server. But now there is one problem.
Okay. Uh there is one problem. Uh first
we want to build okay we want to build
the database and we want to build the
utils. Okay. So you know we have already
built the utils I mean database but we
haven&#39;t built utils. Okay. So first
thing before uh adding a build here I
really want to add something here. So
just let me add export
con
msg. Okay. For now I will just
temporarily I&#39;m adding this. So okay I
will uh I will add some uh useful
information in few time. So hello from
utils. Yeah it&#39;s good. Okay. So sometime
yeah sgestions is really helpful. Okay.
And uh there there okay so now it&#39;s time
to build the utils. Okay. So pnpm bi
and utils.
Okay. So utils
yeah it&#39;s done it&#39;s done it&#39;s done and
let me check first because I want to
check the modules okay which type of
modules this is using yeah it&#39;s fine uh
it&#39;s that I want and yeah cls okay now
now if you remembered uh I we have added
this okay uh this magic packages okay
these two magic packages which uh we
have created okay And also you want to
make sure I was forgotten. Uh it&#39;s not
important but uh just make it private.
Okay. So private.
Okay. Private. And make it true. Okay.
True. Okay. Uh it&#39;s good to make this
private. And now here. And now now.
Okay. Done. Done. Done.
These are the looking good. Okay. I
think it&#39;s good. And now if you&#39;re
thinking how we will install these two
packages. Okay, to install these two
packages, we just want to run P and PMI.
Okay, this will scan our whole workspace
and install all necessary file. After
this install, we will able to see our
these uh libraries here. Okay, I know
it&#39;s like a magic but it&#39;s it&#39;s real.
We are building our own libraries.
Yeah, if you want you can just publish
this library. Yeah, you can say this
package is on npm. Okay, so I am getting
the error. Okay, so workspace isn&#39;t
supported or uh uh not available by
here. So, okay, I have accidentally
added workspaces but we want only
workspace. Okay, so there are workspaces
also I want to go in the back end. Uh
sometime AI suggestions create mess.
Okay. Okay. Okay. Cls.
Okay. PNPMI again. And now let me drink
my milkshake. Okay.
By the it&#39;s 11:30 p.m. At 11:30 p.m. I
am drinking my l milkshake.
Okay. So now it&#39;s installed. Yeah, it&#39;s
installed. And if you hover here and
open this and now you are able to see
SMM Guru. Okay. In the HTM group, we
have the database. We have the build.
Okay. Inside the build, we have build.
And yeah, migration. Okay. Okay. Grabs
this. And here we have a util. Yeah, you
can see we have whole utils. Okay. So,
now it&#39;s fine. And now it&#39;s time to add
kit ignore file. Okay. Uh adding the kit
ignore. It&#39;s really important. There is
a kit ignore. But if you want you Okay.
Uh this is helpful. You can just remain
this here. Okay. And here uh there is
also a g ignore. It&#39;s also good to add
get ignore here. And if you want to add
get ignore file in the utils level and
in the database level you can add but
I&#39;m not going to do that. I will do
here. Okay. I will add git ignore file
here. Okay. For now I&#39;m not going to
type G ignore file line by line. You can
just go my repo and copy the git ignore
file. I will update the latest git
ignore. Okay. Okay. Let me copy the name
because I am I am very weak in
spellings. Okay. So, Fn F2.
Okay. So, this is my G ignore. Uh if
you&#39;re thinking I have written this. No,
I haven&#39;t written this. I I am I have
used u uh package called tree. Okay.
This one tree, it&#39;s a package. Okay.
Tree which I have installed with Choco.
Okay. So, this generates Okay, let me
close this. uh this this generated uh
whole folder structure in txt file and I
have just taken a txt file and I have
just provided a chat GPT and chat GPT is
generated this for me okay according to
my project structure let me explain what
it&#39;s doing it&#39;s uh it&#39;s ignoring the
root level node module this one and this
ignoring the uh two level under the
two-level node module which is in our
data packages and inside the packages we
have database and util ignoring two
folder. You can see this ignored and
also we have ignoring the build, env
everything everything here you can just
go to my GitHub and copy. Okay, you can
see here by the way star means a folder.
Okay,
here you can see see yeah this one I
have done everything everything here but
I don&#39;t know why it&#39;s showing it&#39;s
deleted. Uh I really don&#39;t know. I
really really don&#39;t know why it&#39;s
showing me deleted. I haven&#39;t deleted.
Let me close all. Okay. Let me try to
reload my window. Uh maybe it&#39;s a
tracking issue.
Okay. So now uh okay these are the best
practice for creating a fold I mean
project structure of monoru. But I want
to use one more best practice which my
okay that my senior taught me taught me.
Uh you always commit if you change
anything if you change a button only you
can just commit your code. Okay. If you
maintain the commit okay a large commit
then you have chance to uh roll back
into your previous code okay it&#39;s really
a good thing if you have created
something mess if you have created some
error and if you don&#39;t know how to
resolve that error so you have a chance
to go back to your previous code where
you can see in your previous commit so
that&#39;s why it&#39;s a best practice to
always commit your code okay uh but uh
okay if you&#39;re thinking so why I haven&#39;t
create committed anything at because
that time I wasn&#39;t added added a g
ignore file okay if that time I will
commit that that things okay then I need
to c clear the c of g then I again need
to commit okay so for to ignore that I
have just waited for adding the g ignore
of file here and now it&#39;s uh it&#39;s now
it&#39;s best time to create uh I mean
adding a g ignore so get first get init
Okay. Get in it. Okay. Okay. Reason.
Okay. So, done. So, P and PM not PMDM.
So, get uh commit again. Add dot. Okay.
Let me first check the get status. Okay.
So, get stay t. Okay. And there is a one
more problem which we have to do. Uh
first go to here.
Okay. Not there. Not there. Not there.
because our front end is cloned by the
and the repo that&#39;s why uh this uh
that&#39;s that&#39;s why uh p g will going to
consider that as a subm module okay to
ignore that we need to just come here go
to the front end and delete
oh by the way there is uh nothing
okay there is no any git file folder so
I think this will not going to
considered as a subm module so I I think
I can ignore that step. Okay. Uh in
future but in future if this will
consider as a submodule then we need to
uh clear the cach and then we need to
commit again. Okay. So for now I think
it&#39;s not going to uh track as a
submodule. So I am happy for from this.
So just get add.
Okay. I want to add a dot here. Add
everything. Okay. So everything. Let me
again check the status. S8 US status.
Okay, so now everything is tracked. Now
let&#39;s check something. Uh this isn&#39;t a
uh tracking node module or build. Okay,
so it&#39;s not tracking node module. Okay,
I am able to see there is no node
module. Hence also I&#39;m able to see here
it&#39;s a faded out but sometime it&#39;s good
to check. Okay. So cls and now get
commit-
m
project setup is done. Okay. So project
setup
is done.
Okay. So now this is completed. Now it&#39;s
time to just run cls. And now it&#39;s time
to code. Okay. I don&#39;t know what I want
to build first but
uh but I know starting with a admin
panel it&#39;s a good idea because we are
building the SMM panel. Okay. So in the
SMM panel we want provider and we want
uh services. Okay. So for services I
will use sales media. Okay. So uh for
the Okay. So now it&#39;s time to create
some UI. Okay. I I changed my plan. I
have changed my plan. I will first
create a landing page. Okay. So again I
am telling you I will not going to focus
on the UI building. Okay. This course is
not about the UI building. Okay. Uh
there are multiple course on YouTube
that you will that will teach you the
how to build UI a beautiful UI. Okay.
But for now we are using the AI
everything everything I have uh
generated I mean every single element in
UI I have generated
using AI. I haven&#39;t code for that. Okay.
But for landing page I have used uh
opensource repo uh open source repo for
landing page. I haven&#39;t know the name of
the repo. Uh my senior just provide me
to build the SMM guru. Okay. Uh so I
have just used that uh that&#39;s pack uh I
can you can say that&#39;s landing page
design. Okay. So now let&#39;s try to
customize our first layout.tsx. Okay. So
if we come here in the front end let me
collapse this one because I don&#39;t want
to make it confusing. So packages and
also collapse this and now open the app.
Okay. So inside the app we have layout.
Okay. I think I have already done with
layout. I was forgotten. I am using the
starter kit. Okay. Uh it&#39;s okay. Let me
explain. It&#39;s a layout.tsx. I am using
the font uh outfit. Okay. Outfit. It&#39;s a
Google font. I&#39;m using the Google font.
If you want you can check here. It&#39;s a
next Google font. Okay. And a metadata.
This one is metadata. A global metadata
I have added. And font configuration
theme provider dark light mode coming
from the side. I&#39;m provider children. If
you want to know the about the provider.
Okay. Yeah. Here the provider you can
go. Yeah. Here you can see it&#39;s a
provider query provider. Uh because
react query is already installed here.
So I am using the react query here.
Okay. Oh, wait a minute. It&#39;s I think
it&#39;s not a React query thing. Okay.
Okay. Okay. It&#39;s a React query thing.
Ah, yeah. It&#39;s a React query. By the
way, if you don&#39;t know about the React
query, there is a react query. I&#39;m also
planning a video on React query. Uh
React query. I am not building at uh I
am not building yet a tutorial required
react query. The reason is simple. uh
because I I am not um I am not able to
make a optimized I mean I am not able to
write optimized code for react query
because I haven&#39;t I don&#39;t know how to c
how to cache the uh data in XJS okay
that&#39;s why I&#39;m using the server side
thing but I I tried multiple thing but
it&#39;s not work if you know the solution
then tell me because uh because for Now
let me just ignore it. Okay, it&#39;s
already configured the layout and there
if you thinking what&#39;s the loading it&#39;s
a skeleton. Okay, when some data is
fetching on server side server
component. Okay, then we are using the
sync aait. Okay, that is sequencing.
Okay, then the data will load in
sequence. Okay, uh to hide this and we
want to to hide the blank screen we want
to show something to user. So this is
the landing I&#39;m not landing with the
loader page that will uh shown okay that
will shown there if something is loading
on serverside component and a global
error handler if you want to learn more
about this I will recommend you to go to
the next yes okay uh by the way global
error handler is not recommended uh I
mean it&#39;s not recommended but it&#39;s also
not usable it&#39;s really a good if you
want only one uh global error handler
you can search for error boundary Here
it&#39;s like error boundary in uh react.
Okay. Okay. So it&#39;s a global handler. If
there is any error comes in UI level in
your app, this will capture. Okay. And
this will capture and this will show you
the error. Okay. Why the error is caused
and everything everything also this will
give a uh reset button. It this will
just reload the page. Okay. And not more
than that.
Okay. So we already have the admin
panel. If you go to admin also contain a
layout. Okay, it&#39;s also contain a layout
something something something in admin
panel. Okay. So here we have the users.
Okay. In the user uh I have created a
user dashboard. You can see it&#39;s a user
dashboard. If you come in here okay so
here it&#39;s inside the user route we have
a dash component. This uh uh I have dash
because this next will ignore this.
Okay. Next JS will not going to con uh
uh read this as a route. Okay. So it&#39;s
just a UI. Okay. And I am using the ne
uh better oath better admin plug-in. You
can see it&#39;s a better oath admin. Okay.
If you know it&#39;s a better oath list
user. If you come here come here go to
the better oath. Okay. Go to the
plugins. Inside the plug-in go to the
admin. Okay. You can go the list user.
Okay. It&#39;s a list user you can see. So I
am using the same thing here. You can
see admin client admin list user query
20 and data this one. If loading then so
the loader screen if loaded then it&#39;s a
data table. This data table is coming
from the SAT CN. Okay. Uh if you don&#39;t
know let me just show you. So sad CN
and the components here just let me
write data table. Okay, it&#39;s not a
normal table. It&#39;s a data table because
Satian have two table. One is normal,
one is data table and data table is
based on text table. Tank tank tag
table. Okay, this one I am using this
one. If you want to explore more, you
can just controlclick and you you want
if you want you can read this. Okay,
it&#39;s a data table which has been uh
somehow generated by the AI and also I
have copied this from the origin AI.
Okay. So I have I I have copied the
table from the origin UI. You can see
it&#39;s originui.com
and from here. Okay. It&#39;s something new
here. Let me see layout. Oh visualizer.
Wow. It&#39;s awesome.
Really good. Uh maybe I will explore in
my free time. Okay. Uh
okay. Just search for data table also
something new here. Let me see file
upload. Oh.
Oh, file upload. It&#39;s really awesome.
Aar button. Let me see. Upload this.
Oh, it&#39;s also showing the button. Ah.
Okay. Oh,
I have remembered the first time uh
first time uh when I was working on the
project called evocator. That&#39;s my
personal project. I have built the same
thing. Okay, you can see here I have
built the same thing. This takes a week,
okay, to build. Okay, I have implemented
a loading loading loader as you have s
seen already seen in my the cloud globe
tutorial. I have implemented a zero to
100 loading status bar delete local file
local if you upload from the local this
will also shown here okay and multiple
thing I have added and now it&#39;s now it&#39;s
just for a single click okay or now it&#39;s
just you need to copy okay uh maybe I am
talking about 7 month ago uh 7 month ago
I have built that okay you can see here
it&#39;s awesome okay I will explore this my
time let me just show you some other
thing okay which I have talking about so
data table it&#39;s only table here so yeah
it&#39;s a table here
you can see
I think I wasn&#39;t remember but I think I
have used
not this table maybe somewhere I don&#39;t
remember which table I had used it use
yeah this table I am using okay okay so
you can just uh copy the code from here.
Yeah, you can see I have used this table
here. Okay. And I have you customized
this table according to my use case.
Okay. So you can just come on and read
the table. Okay. So to note this table.
Okay. This table is based on the tankst
table. So you also need to uh know about
the tankst table. It&#39;s a tank tech query
and tank tech tank tech is really a good
technology. you can say really a good
organization that create a libraries for
uh react. Okay, it&#39;s also now coming.
It&#39;s now it&#39;s will now also come with a
uh where is the react tank stack? Okay,
just ber alpha store ranger config uh
yeah table I&#39;m just talking about table
you can see if you want you can read
it&#39;s really a complex yeah I have expend
2 days to understand this but I haven&#39;t
understand because it&#39;s really a complex
okay because it&#39;s a module based
architecture okay that&#39;s really a
complex thing if you want to read you
can read here okay but I I&#39;m warning
telling you uh it&#39;s complex. It&#39;s really
really complex. Okay.
And now now now here uh you can see uh
these are the configuration which I have
added using the AI. Okay. So I have used
AI because really a complex and I am
passing the buttons dynamically. Okay.
This will add user button. Okay. If you
click here then what this will going to
do? Again this is the button add user.
When we click this will set open
dialogue to true. I status I mean I
state not a status it&#39;s state and this
will open a sen dialogue and the sen
dialogue we have add new user and it&#39;s a
admin user form. Okay. Okay. Here it&#39;s
admin user form. This is using the use
query client client client and toggle.
You can see I I have as a j schema here
and j schema. Okay. I have defined the
schema here. No this schema is imported
from the jot. Okay. So just come on here
there and there and mutation. Okay. It&#39;s
a mutation. If you have ever watched my
previous videos then you know what&#39;s a
mutation. Then I do not need to explore
explain this. Okay. And this this this
on success and on failure what we they
want to do anything you can do here.
It&#39;s good good as it&#39;s just a form that
taking the name and then and this will
create a user. And if you think how I
have doing this for that I am using the
uh admin plug-in of the O I mean better
o you can see admin uh o client admin
create user and just pass user
credentials. Okay. Let me also show this
on docs. Okay. Uh because I have
promised uh someone uh name I forgoted
uh maybe love samosa
n that kind of love samosa. I haven&#39;t
remembered full name but uh the name uh
name is ends with love samosa. I I know
you are watching this video because I
know you have watched my all video.
Okay.
Uh uh uh I think Paris I think Paris
loves samosa maybe I don&#39;t remember and
I am not able to see right now because I
am recording voice in my mobile. Okay,
that&#39;s why currently I&#39;m not able to see
the correct name but maybe the name is
like parcel of samosusha and yeah you
can see in the admin create user you can
see this is the create user API to
create user I I am using the same thing
here you can see the same thing a form
and and now it&#39;s time to visit on the uh
admin uh user admin path so let me here
okay it&#39;s not needed write cls but I
want to write so dev
front end.
Okay, it&#39;s at a front end. And now it&#39;s
spinning. It&#39;s spinning. It&#39;s spinning.
And port 30,000. Let&#39;s just display port
30,000.
I am waiting. Yeah, it&#39;s port 30,000.
Okay. So, okay. Fatal.
Okay. It&#39;s unexpected.
It&#39;s unexpected. And I am seeing this
error first time. I don&#39;t know about the
error and the experiment used the
caution node middleware okay turbo uh
panic has
okay to
okay error internal error nextjs
nextjs package not found okay I think I
got the problem if I open this maybe
there is no next package
yeah is There is next package.
Okay, it&#39;s fine.
Maybe maybe there is some other issue.
Uh let me first see this route. What&#39;s
what the logs here.
Okay. So node package not found. De
execution
entry point base isue operation
operation. Okay. Okay. Okay.
Okay. I have understand maybe somehow
this is not finding the uh this uh
package next package yes package maybe
this is the canary version if you
remember we have installed the canary
version maybe the reason is this but I
think I have run this yeah I have I have
already run this okay so maybe this is
this is due to the monor repo structure
currently I don&#39;t know uh there is
something a report error here let me see
where this will redirect me to maybe
something kind okay I I know it&#39;s uh
okay it&#39;s good to just report here so uh
just start discussion okay
okay so now if someone reply me I will
see that
okay
cls maybe let me try it again
I think I haven&#39;t enter
okay just let me wait okay it&#39;s again
there error Okay. Okay. Okay. Okay.
Okay. So, let me ask this error with the
perplexity AI because uh chat GP is not
able to do this. Okay. Uh because
perplexity uh scrap the website. So,
PEXT is best for us. Okay. It&#39;s my DNS
problem. Always I&#39;m facing a perplexity
and I I don&#39;t like ATL DNS. It&#39;s really
a disappointing thing for me. I am using
the ATEL and ATEL atel
why are you why you are doing this with
me. Okay.
Okay. So okay. So I have just changed my
DNS to avoid this error. I mean to
bypass the error. Okay. Yeah this
worked. I am using the DNS of next DNS.
This is the setup. If you if you are
using the ATEL uh uh Wi-Fi. Okay. So
maybe you will also face this kind of
error uh DNS not resolved maybe this
kind of so you can you will just use uh
next DNS this is a setting for Windows
just follow this and you will get set up
with the next DNS and after that uh it
will never going to block you okay
okay so tell me okay
uh why I am getting
I am getting
uh this error
in my next JS app. NextJS app.
Uh 15. Okay. It&#39;s a 15. Okay. Next year
app and uh let me give the exact
version. Okay. Uh it&#39;s it&#39;s good for
good to give exact version. Okay. So
node modules and
and we go to the packages and inside the
packages and just hit control F or find
next. Okay, so it&#39;s a next okay just
keep the exact version. Okay.
Okay, this is the exact version and why
I&#39;m getting the error. Okay. And my
error is
my error
is
okay. So I haven&#39;t copied the error. Let
me open this and come here. And yeah, by
the way, if haven&#39;t check JPE, okay, you
haven&#39;t perplexity kind of thing, not a
problem. Uh you do not need to do
anything. I am just showing you how to
leverage the AI, okay? That&#39;s it&#39;s only
my purpose to show you how to leverage
the AI because perfect headings is
sponsored me then why I will go to why I
will show you this okay so it&#39;s just for
education purpose I want to just teach
you okay so that&#39;s why okay okay okay
okay the myor is and give me the
uh give me
the solution
okay Don&#39;t go on my spelling. My
spelling is really weak from this since
school time. Okay. Okay. So, someone
just respond to our Gh our GitHub
discussion. Okay. So, there you can see
Joseph. Uh it&#39;s going to be already
answered here. Okay. So, let me open
this. Uh if you open this, you will see
here it&#39;s a option maybe some. Yeah, you
can see this answer. I have read the
answer. Uh this error is due the package
log. Okay, it&#39;s a log file because uh we
have got the turbo pack error. A turbo
pack error tried to detect uh the root
package log. Okay, but in our cases
there is a fault. Ah, okay. There is a
fault. You can see
we have two package log. One is here and
second one is here. Okay. And this is a
problem because we have in the default
behavior of PNPM it&#39;s only one package
lock in the root file okay root folder I
mean but there is two why we have two
because if you remember we have firstly
we have used only uh front end part okay
after that we will customize this so
that&#39;s why we have two package log file
if you want to learn more about there is
a link of nextjs documentation you can
Radier you can see I have read old dogs.
Okay. If you want to configure, you can
configure from here in the next
config.js. Uh it&#39;s on you. If you want,
you can configure. But I just want to
delete. Okay. I just want to delete this
PNPM log file. And after the deleting,
this problem may solve. I don&#39;t know
this problem will solved or not. Uh but
let me try.
Okay. So now let&#39;s check uh is uh our
app is working or not. Okay. So uh it&#39;s
done. Done. And
okay. So I think it start working and
let&#39;s see compiling middleware
and uh
okay so we have error I know the reason
of this error just open this and it&#39;s
trying to importing schema from the here
but we know schema is not exist here and
also uh we want to customize this okay
so for now uh remove this part from here
okay and also uh remove this okay I we
don&#39;t want this. Okay. So now we will
use our customdefined class. Okay. So I
haven&#39;t remember the class how I was
configured. So let me see. Okay. So go
to the database package. Okay. Database
package and first go to the index. Okay.
Not migration not in the src. Go to the
index. Let&#39;s see. Okay. It&#39;s not a
default export and okay. So try to
import. So import
uh
from if you remember so we have name
space called SMM group database there
okay so here we will find okay uh we
have only type I don&#39;t know that why we
I have only type oh now we have the
database and try to import a schema
because we want a schema here so import
okay so import only import and this one
and from and from at SMM
database from forward slash uh we have a
schema if you don&#39;t know how I have get
this so I have get this via from here
okay if you remember we have configured
uh the package JSON you can see the
package the configuration of package
JSON allowing us to do this thing okay
so this thing okay so I&#39;m getting the
error can&#39;t find the model or is
corresponding type declaration. I know
the reason of this error. So maybe this
error is due to uh we haven&#39;t latest
build. Okay. So maybe try to uh build a
latest version. So PNPM
uh build
uh database.
Okay. So database
and now let&#39;s wait. Okay. So it build is
completed. Now maybe this will solve the
error. Uh to check this just come on to
the src. So we have error in database.
Okay. So wait a minute where I am. Okay.
By the way I am not sure why I have
these files here.
Maybe this is accidentally come here. I
don&#39;t know how. Let me delete this
because I don&#39;t know why there is these
files. Okay. So let me check
uh the build inside the build here and
maybe uh schema inside the schema. Yeah,
there is export schema d.ts everything
everything is here but maybe there is
some issue. Okay, let me just try to
reload my window.
Okay, so now I think this solved the
error. Now if I hover here maybe Okay,
so it&#39;s just a type. I really don&#39;t know
the reason behind this but maybe if I
hover here this will show me something.
Okay. So, okay. So, no suggestion ah
because the typescript is still loading.
Okay. So,
[Music]
uh but I know uh if you remember here we
have exported the whole schema from
here. So to get this uh we will just use
same syntax. So start as schema.
Okay. Okay, so schema uh again I&#39;m
getting the same error schema declared
but its value never read. Okay. So it&#39;s
good. Can&#39;t find the module and it type
declaration. But according to me if we
go to the build uh there is existence of
there you can see it&#39;s a type here.
Uh maybe I think I have configured the
packages in wrong way. Let me see. Types
schema export schema d.ts.
Maybe maybe there is something wrong.
Let me see. See.
Okay. So, export dots schema.d.ts
map map t schema.d.ts.
I don&#39;t want this.
Okay. Export. schema.js. Everything is
correct here. Uh the reason I don&#39;t know
and it&#39;s uh uh 12:39 p.m. and I am
really tired. So, I am just going to
sleep. Okay. So, rest of thing I will
record tomorrow.
Okay. So I think I it&#39;s third day I
Okay, I think after 2 days I am
recording again. Okay, it&#39;s after 2 days
and I was forgott what error I was
getting. Okay, so I was getting the
error of this. Okay. Uh so before the
starting I put almost half hour to find
the issue. Okay. So is here here we do
not need to use default here we want
import. Okay. So this is the problem.
Okay. Okay, this took me half hour to
get this problem. Okay, so okay, it&#39;s
it&#39;s worth not a problem. Okay, and also
you need to specify file. I&#39;m not sure
uh specifying file is necessary or not.
Uh but uh you specify this. Okay, so our
file is inside the in build folder
maybe. Let me check. Uh
okay, so inside the build. So this
folder inside the build. Okay, so yeah,
it&#39;s here. And now again try to run
build. Okay. Hit Ctrl C. This will open
the terminal. And now hit
C cls.
Okay. So this one database and I haven&#39;t
remembered I have uh committed or not
yet. So let me first check if I have
committed. So to check the commit
history just put uh I mean uh run get
status. Okay. So this will so all the
okay not status. I was forgotten get
log. Okay. So, get log. Okay. So, I have
committed. Project setup done. Admin
panel add. Okay. This my the previous uh
I committed but but this project setup
is done. I think I have explained you or
not. I was forgotten. Uh adding commit
is good. Okay. I always recommend you to
add commits. Okay. Uh even a small
changes
this will help you to roll back to your
previous code. Okay. So, and now let me
check here. Uh maybe this time this will
solve this error. Okay, I am still
getting the error. I think I need to
reload my window. But first let me check
something. Let me check the node modules
and there inside the node modules uh SMM
guru and database and let&#39;s see this
package JSON first. Okay. So this seems
fine. Okay. Okay. This looks fine.
Everything is fine. And why the error I
am getting still? I don&#39;t know. Let me
reload the window first. Okay. So
control shift P and reload window. Okay,
maybe this will solve the issue but I am
not sure. Okay, if this will not solve
issue then I think I need to raise my
hand. Uh but worry not I will not raise
my hand. Okay.
Okay. Okay. Okay, I need I think I need
to buy a MacBook but I haven&#39;t
bandwidth for buying a MacBook but but
when I am capable then I will buy a
MacBook because I don&#39;t like this
loading screen here. Okay, this take too
much time. Okay. Okay. Now I think our
error is gone. Let me wait for the
error. It&#39;s checking TypeScript still.
So that&#39;s why we need to just wait.
Okay.
Okay. So I am still I am still getting
an error and now I don&#39;t know why why
this is this is really a problematic
thing for me. So I think I need to run
PNPMI again. Okay. This may solve the
error.
So still there is error.
Okay. So reason
I really don&#39;t know about the reason.
Okay. I think let me delete the build
first. Okay, maybe this will solve the
error. So, let me delete the whole
build. Okay, so to delete the whole
build. Okay, I&#39;m not going to delete the
whole build, let me delete this build
first. Okay, so delete.
Okay,
and also let me delete the build of my
database.
Okay.
Okay, continue. Delete it here.
Okay. Yes, delete it. I don&#39;t want this
in my system anymore.
And there is solve. And now again let me
try to delete this. Okay. So delete.
Okay. And also I&#39;m going to delete from
the front end. Okay. I know if I try to
build the front end then it will take
much time. Okay. So but it&#39;s not a
problem for me. I will uh I have time
and time. Okay. I have too much time.
Okay. because it&#39;s uh 10:13 and I have
time till 1:00 p.m. Okay, I think I will
I am capable to record till 1 p.m. So
not a problem for me. I will record it.
And now it&#39;s done. And now one thing I
need to do, I need to clear the cach
first. Okay. So let me first clear the
cay. Which window I need to use? Yeah,
this window.
Let me open shared GPT for the because I
was forgotten about the command. Okay.
So I need to stick. Hey, give me
command.
C A M A N D command for uh keying. C L E
A R.
Okay. Don&#39;t go on my spelling. My
spelling is really weak. Okay. H loading
PNPM
I have remember uh PNPM uh I think it&#39;s
a purin I am not sure that&#39;s why I am
giving this to chat GPT and chat GPT
give give me uh this yeah you can say
store purin uh first let me run this
okay so if I run this then this will
clear the whole okay I have three
projects open okay I think this one okay
yeah this one is correct Okay, first let
me clear let me clear terminal because I
don&#39;t like this kind of UI shift. Okay,
so yeah, this one and let&#39;s wait for the
UI. I mean clearing the C. Maybe this is
due to the C. Okay.
Okay. So CLS and now let me try to run
PNPMI again.
Why it&#39;s saying already up to date?
Okay. Okay. This is really really a
problematic thing for me. Okay. I don&#39;t
like this. Okay. So for that I am
planning to delete my whole node module.
Okay. Maybe this will also give a
command for Yeah. RM. Yeah. This one.
Okay. So now let me Okay. So let me
close the server and server is still
already closed. And now let me clear the
but before uh let me open this in the my
file explorer and not this one. Okay my
okay that is on my desktop not there.
Okay so here it&#39;s here. Okay
so let me delete my whole thing from
here node modules and yeah delete this.
Okay this will take time because this is
really a large file. Okay. So this will
take too much time. Okay. So I have
deleted all node modules and also maybe
all build file. I haven&#39;t remember but
uh let me again try to clear the C. Uh
okay removing the C
and also after the C it&#39;s important to
delete this log file. Okay maybe this
log file is generating the issue because
if you remembered uh in maybe previous
code we have two log files. navigate the
region of the problem. There is two logs
files. Okay. So, okay. So, now it&#39;s
okay. And now let&#39;s try to open PMI
again. Maybe this will solve the error
this time. Okay. Okay. So, it&#39;s
redownloading the packages.
Okay. So, it&#39;s downloaded. Okay. But the
error is still there and also error in
Postgress. So, maybe we can solve this
error. But I need to check something
first. Let me check this. Okay.
Okay, this is perfect as I extracted and
also I need to check the node modules.
It&#39;s as expected and okay, so there is a
log file missing. Okay, so I think my
system get hanged. Okay, it&#39;s working
but the system is hanged. Okay, also
there is nothing. And let me check my
front end first. So if I check my front
end, okay, let me open my front end.
Okay, I think I have closed my front
end. Okay. So in my front end there is
no node modules. Okay. So this installs
only in there. Okay. So it&#39;s really a
problematic thing for me. Uh but I think
it&#39;s not a big problem. I will solve
this. Uh but also I have to see here.
Okay. In the packages there is no mode
models. But I think uh it&#39;s it&#39;s a
problem. My system is hanged. Okay. I
according to me. Let me first refresh
this. Okay. So, reload the window.
Okay. And now let&#39;s see again because
there is no package JSON but I have
completed my whole PNPMI command. Okay.
So, it&#39;s completed but there is no Yeah,
now it&#39;s package log file available. Now
you can see there is this and also in
the front end
uh yeah in the front end yeah I have
node modules and it&#39;s loading after the
loading we will clear out uh our error
is solved or not if not solved uh then
the reason I don&#39;t know
okay because I think I am doing
everything perfectly but it&#39;s still
there
okay it&#39;s SMM guru okay import stripes
everything looks fine to me but the
okay so error is still there and the
error is also in post crush okay so
there is error in everything declare but
never read okay and also can&#39;t find the
module and corresponding type okay so I
think I got the problem okay so let me
go in the front end okay maybe this
there is a problem cd dot/ apps
okay so finally I have noticed the
problem you can see Here it&#39;s a li in
the li there is dal and schema. But what
I am doing I am I have escaped that I
mean I think I had I had escaped the li.
Okay. So okay. So solving this error
takes almost 1 and half hour.
Okay. I have spent the 1 and a half hour
to just solve this error. Okay. So leave
and also I have to leave here. Okay.
I live. Okay. not live.
Okay. Live
and also the live here. Okay.
Okay. So now I think this will going to
work. Okay. Okay. Okay. Okay. Yeah. The
build database and you can see here it&#39;s
start working. Okay. It&#39;s started
working.
Okay. So now it&#39;s time to build the
database. Okay. So it&#39;s a schema. It&#39;s a
whole schema contains here. And now just
come on here and and then remove this.
And now it&#39;s time to create. So con
okay. So we need to database and from
database and just we need to call our
database function. You can see the
database inside this we need to pass our
whole schema. Okay. So database
and pass. Let me pass the database URL.
Okay. Not database. It&#39;s a database URL.
And after the comma just pass the
schema. Okay. Okay, if you pass the
schema, now it&#39;s time to get our DV
instance. So, export DV.
Okay, ex uh let me add const const DV uh
equals to uh database. Okay, inside the
database, we have returned the instance
of DB. Now, if we hover here now, we
will get the type. Okay, it&#39;s a type of
schema. I don&#39;t know why this is
happening. I need to check something.
But but for now let me let&#39;s first check
the types are working or not. If the
working then it&#39;s okay. If not then it&#39;s
not okay. Yeah types are working then
it&#39;s okay to me. Okay. So now I have
created that instance and it&#39;s take a
huge amount of time. Okay. And the error
was just a simple error. Okay. So now
it&#39;s solved and now it&#39;s try to close
all and now just come on here.
Okay. So first thing we need to create
the admin panel. Inside the admin panel
first thing first we need to create the
provider. Okay. Okay. So I have opened
this my live website which I hosted on
shell. But worry not after the session I
will down this website. Okay. Because I
don&#39;t want to uh increase my bills.
Okay. So I will down this website after
the session. Uh but for now I it&#39;s open.
Okay. Okay. Okay. So I think this one.
Okay. So this one is the project and now
it&#39;s time to start our front end. Okay.
So now cls. So pnpm dev front end.
Okay. So it&#39;s good. And now it&#39;s
starting on our local host 3000. I don&#39;t
know why it&#39;s showing two time but not a
problem for me. Uh it&#39;s it&#39;s I think
it&#39;s I feel this is common in PNPM.
Okay. So yeah it&#39;s our live website.
This is slow. I don&#39;t like this slow
thing and the slow reason of slow is my
system because my system is slow. Okay.
So I am getting the error here and I am
still getting the error and where this
error at the li schema and inside the
front end live src better ts. Okay. So I
think I have forgotten to update this in
the better ro. So not a problem and not
a big deal for me. So for that for that
for that for that okay just open this
and now come on here uh and not in the
schema and and not there uh go to here
and from here just export schema okay so
I have forgotten to export the schema so
if you don&#39;t want to export don&#39;t worry
not you can just pass this schema but I
think I need to export that so I export
uh a schema see uh first let me add
const
not const just a schema
So, s e ma. Okay, so export schema.
Okay, it&#39;s a default. Okay, so maybe
it&#39;s want con.
Okay, it&#39;s okay. I got the reason. Okay,
so this want this. Okay, not there. This
one there. Okay, so yeah, it&#39;s solved.
And now let&#39;s come on to the better and
server instance. It&#39;s a server instance.
In the server instance, we have this. So
remove this one and just we need to
import this from our DV. Okay, from
here. Okay, if we import this from here
and this will solve the issue. Okay, so
so so now try to reload. It&#39;s still is
loading. Okay, okay, okay, okay. This
may solve the error. Okay, again error
schema not defined. Not a problem. It is
still in loading. Maybe this is not an
error. Okay, just wait and wait. Okay, I
like this design in NexJS5 for showing
the errors. Okay, I think it&#39;s worked.
Okay, it&#39;s worked. It&#39;s really worked.
So now open this.
I think I haven&#39;t created a user but
I think I haven&#39;t created a user. So I
need to create the user. So uh it&#39;s take
time to opening. But worry not. Let me
go to the super basease. Okay. So in the
superase
uh I need to open my project project.
Yeah, it&#39;s opened. Okay. So I I have
watch forgeted which version which one
is I am using uh in the fans project.
Yeah, it&#39;s me me uh me is FAN and then
this one SMM guru and then table editor.
In the table editor we have users inside
the user. Yeah, there is a user login by
the uh GitHub. Okay, so it&#39;s good. Uh it
is logged in by the GitHub. So I will
use my GitHub credentials to login. I am
not going to login with email and
password because I am lazy. Okay, so
just go with the email password. I&#39;m in
GitHub.
Okay, so go to the admin panel. Okay,
it&#39;s still going to take time. Okay, I
really need to buy a new laptop.
Okay. So I am there and now it&#39;s time to
create our header for in the admin
panel. Okay. So to create the header.
Okay. I think it&#39;s created. Okay. H it&#39;s
a default user. User is still user is
created. So we do not need to create
anything for user and it&#39;s uses the
admin pack plugin of better. So to
handle this. Okay. So now let&#39;s open the
I have already told you I am not going
to focus on the UI. So not uh because UI
is not important thing here. Here we
need to create a components file uh
which a tsx file and the name is admin
links admin nav links. So to get the
admin nav links go to the my GitHub repo
and one thing I am again going to tell
you uh the repo here for now for now
okay not for for now the different okay
uh okay the code may be different okay
uh but uh after this video I I mean uh
when you will get this video I will
update it to that latest code okay which
I have code in my YouTube video because
I have changed something and I have made
it more too much advanc not too much
slightly advanc okay uh but uh because I
have learned something uh I have learned
something after creating this project
that&#39;s why I am implementing my new
logic I mean new knowledge uh to build
this app okay that&#39;s why you will find
you will feel some changes on my this
repo to my YouTube created repo but I
will update the YouTube this new repo to
here okay so not a problem but the
components and the maybe some file
structure remains same and the back
front end uh you need to go to the src
and in the src you will find a admin
okay you okay okay okay okay where the
app inside the app
okay so you will find this admin inside
the admin you need to open the
components inside the components a nav
link okay so copy the nav link it&#39;s just
a nav link okay uh which is uh just a
mapping the admin nav link coming from
the maybe somewhere from constant you
can see the inside the lip there is a
constant or nap links okay so I am just
mapping around that so just copy this UI
okay it&#39;s best to copy UI from here
because uh you are yeah this one okay
okay so now we need to create this I&#39;m
not sure there is existence of constant
folder or not so let me check my utils
so yeah there is existence of constant
and also to the nav link constant. Okay,
there is still exist and also there is
order services API. Okay, so it&#39;s a link
but it&#39;s a different nav link. Let me
see it&#39;s I want the admin link here.
Okay, it&#39;s something generated. I don&#39;t
want to remove this. Okay. So here uh we
need to go uh in the src
and the src we need to go inside the
live and we need to go to the constant.
Okay. And we need to go here. Copy the
whole file. Okay. Whole file I think
it&#39;s copied. Yeah it&#39;s copied. And now
come here and override. Okay. So
override this. Hit Ctrl + V. And if you
override it&#39;s just a constants. Okay.
Array of objects new order orders. This
will going to use on our uh public page.
I mean where we can create order and
this will use on our admin page. Okay.
So this one and now here it&#39;s fine. And
now I think it&#39;s not time to check this
because we have created but we haven&#39;t
implemented this. Okay. So to implement
this you open this layout.tsx. Okay. The
layout.tsx I mean to say in the admin.
Okay. In the admin route group, you will
find the layout.txs. Uh in my folder
which I have preferred to design. I
always use a layout. Okay, a layout for
every route. You can see a layout for
every route. It&#39;s my preferred way to do
uh work. Okay, maybe you have different
workflow but if you are following me so
I will recommend you to use my workflow.
Uh it&#39;s awesome. Okay, I like this one.
This create multiple files, folders and
files. But believe me, it&#39;s awesome.
When you uh open your code maybe in five
to six after five to 6 month uh this
will not going to uh give you
constipation.
Okay. So not just enough is enough. And
now
import our navl links. Okay. So import
our nablings. Okay. So here and now it&#39;s
time to import this. Okay. Okay. Okay.
It&#39;s taking time too much time. Okay.
Now it&#39;s done. And now if we come here,
here and there. Okay. Not there. It&#39;s
live one. Okay. So it&#39;s haven&#39;t
implemented. And let&#39;s wait for reload.
Okay. It&#39;s in the reloading mode. And
now we have the users. You can see it&#39;s
working with this. And but if you try to
access these route, this will going to
throw error because currently these
route isn&#39;t exist. So we need to create
these routes here. Okay. And the admin
let&#39;s close not we do not need to close
we just need to close the user. Okay.
Okay. So this page okay this page is
used for routing. Yeah you can see this
page is just routing. If someone try to
access forward/admin this page will
redirect to the forward/admin user.
Okay. So it&#39;s it&#39;s this. And now what
now we need to do and just okay. So open
this constant. add this one constant and
close others. Okay. And now first we
need this provider. Uh so create a
provider. Okay. So creating a provider
just come here in the admin here create
a file. Hit this one forward/ page.tsx.
Okay. Okay. This will create a folder.
Inside the folder this will create a
file. And here inside there I also
always always it&#39;s my workflow. Okay. I
will create I like to create a compo nts
components folder here. Okay. Inside the
component I will write whole component
which will used in this page. Okay.
Inside the provider. Okay. This really
uh categorized thing and this is really
opinionated thing. Uh you have different
point of view to work with this folder
structure. I have different point of
view. So you can do with your point of
view but I will do with my point of
view. Okay. So uh you can go to the my
GitHub repo because I will not going to
focus on UI. Uh yeah I will not going to
focus on UI for anything for anything
for any reason but I will explain you
everything but I will not focus on UI.
Okay so you can see uh in the UI what&#39;s
there uh but I will focus on writing the
back end. Okay writing the back end
handling the database handling the
delete I will do that I will do that
okay it is my promise but I will not
focus on UI. You can see what the
features exist here. Create. If someone
create the ad key, uh it will open a
popup a name. It&#39;s want a URL. It&#39;s want
a API key. Uh if you&#39;re thinking where
we will get, so we will use the
wholesalers. Okay, I know multiple
wholesaler. But uh if you want custom
price, you need to fulfill their
requirement. You need to uh sell some uh
sell maybe $1,000 maybe. I don&#39;t know
you and also someone some platform
offers you the orders with discount.
Okay. If you create uh if you fulfilled
almost 50 to 100 orders then you have
opportunity to uh get custom prices.
Okay. So this this different on the
difference on platforms. I know the
platform which is one platform is and
one panel you can see this panel. This
panel is also a wholesaler uh which I
have known from since 2023. Uh this
panel. Okay. And also there is a a cheap
panel which I have used in my previous
business you can say. Yeah, I have used
this in my business, previous business
which I have buy PHP script of SMM panel
in 700 INR uh which is around
uh $7 to $8. Okay. And yeah, this one I
have used this but I never uh I never
success in this business but you may
because that time I was wasn&#39;t have
money. Okay. And now here and also the
sales media which I am using for this
video. It&#39;s a sales media. Okay. So I am
going with this. Okay. So it&#39;s a sales
media. You can login here. And uh in the
login you can see there is a login.
Okay. I want to go with Google account.
Okay. Because I don&#39;t like to enter the
password email this and also I don&#39;t
want to this do this. This is really
annoying thing for me. Okay. So you can
see this is my dashboard and if you want
the API key you will find the API key
maybe somewhere yeah in the profile
section uh profile section you will find
developer docs every every panel has
their own developer docs you can
generate the key here and also there we
need a U endpoint but I don&#39;t know the
develop why the developers of sales
media haven&#39;t put some anywhere uh
endpoint here But not a problem. Uh the
common thing is in whole whole uh sales
SMM panel uh SMM panel community uh you
will find there uh API/B2.
Okay. On this right you will on I mean
on this route you will find the API of
almost all sales panel sales SMM panel.
Okay. But I have built something
different. I have used handler but uh uh
it&#39;s not recommended if you are planning
to really launch a business but it&#39;s not
going to maybe bother you because the uh
URL is dynamic you will create a you I
mean you will create a URL for different
platforms so it&#39;s not going to making
make you pro it&#39;s not going to create a
trouble for you if you want to launch
this kind of business okay uh with my
script because my script is MIT in the
MIT license you can use uh but this
script contain wasn&#39;t haven&#39;t contained
the whole features like cancelling order
and the refill button uh refill button
is there but you need to make it
workable I haven&#39;t make it workable and
I haven&#39;t know I have no plan to do that
but there is a add key you can see URL
key which I have shown you and name for
reference okay so this one and there is
a edit button if you click here you have
opportunity to edit yeah this one but
One thing I really need to tell you
these things. Okay, these API keys
haven&#39;t these XPI API key are not these
API key these API key is store in in is
store encryptedly store. Okay, this API
key is store encrypted. Okay. Uh this is
not
store as like this. Okay, we will
encrypt this. Okay, so now just close it
and also a delete one. Okay. And so
delete on the delete we have this
prompt. Okay. If we click here this will
delete. Okay. So here what we need? We
need three route. One is for create
post, one is for edit maybe patch and
one is for delete. It&#39;s a delete route.
Okay. So we need to create three route
and also a UI. So UI we I will we will
copy from my GitHub repo. So we will not
create UI. We will create only back end.
So come here. Go to the uh src. In the
src go to the app. Uh in the app go to
the maybe maybe maybe admin. Yeah, in
the admin uh in the admin go to the
admin and here you will find a provider
and the provider you will find this
page.tsx first. Okay. So copy the
paste.tsx. Okay. Raw file. Okay. Copy
this one and paste paste there. Okay.
Yeah. We have already here. And now
there from there to here and hit Ctrl +
V. Okay. This will open the file
structure of us. Okay. Okay. For us I
mean uh provider. Open this one. And
here we have two files. So one is for
list provider. List provider. This will
uh table. Oh me. Okay. So this will show
the whole data in table. Uh I think it&#39;s
something different. I have first I have
to copy because I have forgotten. Okay.
If you think this is uh created on last
week no it&#39;s not created on last week uh
I have created way before that uh but
this but I have push I have forcefully
pushed this multiple times okay because
I am leading this project so it&#39;s my
choice I can do everything and I am the
owner of this project so it&#39;s my choice
here okay uh it&#39;s not a my company&#39;s pro
project okay project I don&#39;t want a let
Okay. So here let&#39;s provide a worry not
but I will explain everything what I am
doing here. I what contain this a UI.
Okay. It&#39;s add provider button which I
have shown already shown you. So copy
the this name. Okay. The name from here
and come here and create a folder for
that. Okay. So not rename it&#39;s a new
okay there. And now add there
and copy. Okay. So I think I have
created the whole I have created a whole
file. So there is some errors. I&#39;m not I
don&#39;t know why the errors are there. So
data data data is in. Okay. It&#39;s type
any. Okay. Okay. Okay. I know that maybe
this problem is due to the jaw schema.
Okay. If you come here uh add provider
schema and also this coming from the
utils. Okay. Uh it&#39;s my old code. Uh
okay. I al also want to tell you if you
come here in the my data old code it&#39;s
old code but very I will override with
new one. Okay. So go if you go to the
packages uh you have remember we have do
multiple things in our back end uh I
mean packages but if you come here
there is no export you can see we
haven&#39;t configured the specific export
with specific name spaces but uh in this
project we have created okay so that&#39;s
why you will find some changes okay so
worry not uh I will cover everything as
I promise. Okay.
Here
uh here you are feel if you are feeling
uh we need this j schema. It&#39;s a j
schema. Okay. So coming from the SMM
guru utils. Okay. And there is a base
instance. Okay. So uh currently we have
I v1 admin instance.
Okay. So I think I haven&#39;t created this.
Okay. So let me open my GitHub repo.
and go to the utils of my front end.
Okay. So here there live xjios
config ts. You can see there is
everything you can see it&#39;s a v1
dashboard instance. Okay. Here we will
uh uh use the API endpoint of dashboard.
Okay. Uh this these are just a uh you
can say these are just a boiler plate
code. Okay. uh here you can define your
base URL of your server of your anything
and after that uh but if when you use
then you you will put URL after that you
can see you will put path after this
path maybe forward/ dashboard maybe
forward/overview/
uh some other thing maybe profile
anything you can put here and with
credential this will send the credential
uh credentials maybe headers cookies
these kind of thing to server to
validate our better oath. Okay. And also
it&#39;s a V1 admin instance. You can see
this will route on admin. Okay. It&#39;s
also want credentials and it&#39;s a V1 base
instance. Okay. It&#39;s only constant
contain B1 or maybe in some cases we
need this and also IP tracking. Uh these
are just a test endpoints. I I don&#39;t
know I have used this one or not. Maybe
I haven&#39;t used this. Okay. I haven&#39;t
used this but there is uh if you want
you can go to this URL and explore this
and also this this is important thing I
will explain this later and it&#39;s a
currency converter API so we have used
this currency converter API and the API
my API server it&#39;s a second API our hono
server okay hono server endpoint you can
see endpoint and also the credential to
because this also want credentials so
copy the whole code from here and paste
it to our Xio. Okay. Control P A X IOS.
Okay. From there and just override.
Okay. If you override this and we will
get some errors. Okay. So these error
are due to the our endpoint. But
currently we do not need when we will
need this then we will configure this.
For now just comment it out.
Okay. So this is happy and also there is
a problem. Okay. Currently I don&#39;t know
I I really do not need this but when we
need we will open it. Okay. So it&#39;s
fine. Okay. And I am facing the two
errors here. One is display error. So
what is the display? Okay. Display error
is a utility function that I have built
to extract error from the XJIOS
response. Okay. If some uh in okay let
me just explain you. If we come here uh
just hit here double click hit Ctrl F
and just navigate to use case. You can
see when we will get the error. Okay, we
will get the error. There is something
you can say it&#39;s the instance of error.
So we will pass the error. It&#39;s error
true. And in the error we will pass the
error and this utility function will um
consume this error. Okay. And this will
check the instance which kind of error
is this and according to that this will
show the message message from the back
end and or maybe the custom message if
we are not able to detect the message
type then it will show the custom m you
can see there is a one other use case
when our when our query is failed. Okay,
when our query is failed, we will pass
the error. Here you can see the error of
this one.
You can see this error. This is the this
error is coming from the query use
query. Okay, this will queries and you
can see it&#39;s taking the XJIOS response
is creating XJIOS request and if you
remember Xio if XJOS throw the error
then the type of the error is Xios
error. Okay. So we need to check uh
there is most probably there&#39;s high
probability there&#39;s 99% chances this
will only throw the xios error okay if
this failed then it&#39;s a xjios error and
if this fail the xjios error will catch
here in the error and we will get the
error here and is just a boolean value
it&#39;s a true false and is loading also
true false if you don&#39;t know about the
react query go and read about the react
query currently I have no uh tutorial on
react query but I am planning okay I&#39;m
planning trying to build and you can see
uh it&#39;s using the admin instance after
the admin this will provider and key and
the key id okay so this is passing it
dynamically and the result we have
getting from here you can see it&#39;s a
type save if you hover here you can see
it&#39;s contain ID API key name and the API
URL and if you hover here it&#39;s a API
response I will explain you what&#39;s this
and it&#39;s a generic type this will take
this type and which type you will pass
here. This will infer the type here and
this type will also reflect here. You
can see these are the type safety lots
of type safety. I have built everything
type safe. Okay. Uh currently I have uh
a good knowledge in Typescript. uh but I
think I I need to learn more on
typescript because I don&#39;t I really have
not much idea about generics globals
uh these kind of types but I think I
need to read that I mean learn that but
for now uh for this project my current
knowledge enough okay and and and and
and and
you can see the query okay if you have
watched my previous videos so you do not
need to do about I think you have
already aware of these things. So I will
recommend you to open this and read this
okay and understand this okay it&#39;s your
job okay because just a UI UI is basing
thick if you are not able to uh error I
mean if you are not able to the uh
understand then then you are in the
trouble bro uh really because if you go
on go in any company the company will
provide you the existing code it&#39;s your
job to crack that code and build a
features on top of that qu or also in
many cases you need to remove that code
and you need to write your own code.
Okay. But if you haven&#39;t knowledge or if
you haven&#39;t experience to read others
code to uh dstructure others code to
understand the other code others code
then maybe the jobs are not for you.
Okay, I&#39;m not demotivating you. I&#39;m just
telling you truth because my gym trainer
is also telling me truth. you are just
you are just truth okay because I am
really I am really lifting a light
weight okay I I have used only five 5 kg
plates okay for chest exercise that&#39;s
why uh my trainer really criti
criticized me okay so it&#39;s hurt my ego
so that&#39;s why I&#39;m also hurting your ego
uh it&#39;s not a just I&#39;m not I mean I&#39;m
just hurting I&#39;m just telling you the
truth because my trainer told me I am
just telling you the truth okay it&#39;s
true you you need to work on that you
need to make your diet correct uh you
need to because it&#39;s almost 1.5 months
on my I spend I have a spend on gin and
I am still on 5 kg your plate okay so
it&#39;s really a disappointing and same for
me that&#39;s why my trainer trainer told me
and also I am telling you because now
you are building a full stack project
and if you are not able to understand
this UI part code Okay. So you need to
understand this. It&#39;s a j form. Okay. Uh
if you know the sian you know this code
okay it&#39;s a effect something I&#39;m doing
the effect. Okay. It&#39;s your job to crack
this. Okay. I I&#39;m not here to take a
spoon and just eat you to the spoon.
Okay. And now no here some disable
configurations. And also I am passing
the exhaust thing here. Something
something something. and here and yeah
just I&#39;m showing the some dialogues
according to the condition and according
to the condition I&#39;m showing the
rendering the forms and these kind of
thing okay so now if you come here and
now it&#39;s time to uh know how this
display error code is looks okay so the
code exist here in the error the toast
error uh let&#39;s copy this one okay
copy this one and come here
go to the live go to the error. Uh here
you will find in the error we have all
we already have error handle but this is
the back end part. The error handle is a
part of back end. So worry not I will
explain uh when we touch the back end
but currently I am not touching the back
end and the toast. Okay. So for that
just go to the GitHub repo uh go to the
src
go to the lib
and and then go to the error
and it&#39;s a constant error you can see
what I&#39;m doing I&#39;m just importing the
xjs error and also toast son okay and I
am just checking error if this error is
available I mean it&#39;s boolean if error
check the error is instance of Exio
error then toast message error data name
okay uh this is provide uh okay and also
a description message okay so this name
and description we will passing through
our back end worry not I will explain
this when we will design our structure
because we will use a a standard okay we
will standardize our response okay it&#39;s
always it&#39;s really a great thing to
standardize our response throughout the
whole lab Okay. Uh I will uh I will
share this industry grade practice to
you and also if not that case just show
error because currently we don&#39;t know
what kind of error is this. So copy
this.
Okay. Uh I think you have already
understood what me what I am telling you
because writing this kind of uh utility
function is really a waste of time is
okay. So this one okay here you can see
there and also also writing that this
kind of UI is really a same same okay so
now error
now it&#39;s all automatically sometime it&#39;s
automatically will not detected okay so
it&#39;s solved and now to solve this we
need to walk around with our key uh our
packages okay uh this one utils so worry
not uh okay it&#39;s really
Uh it&#39;s 11:4 11:41 p.m. So I am going to
my bed. Okay. So I am really tired.
Okay. So we are getting the error in the
utils. Okay. Uh in the util it says
there is no J schemas. Okay. It&#39;s right
uh there is no J schema. But here we
will configure something. But before
configuring we need we need all J schema
to get the all J schema. Okay. Okay.
What&#39;s this? GitHub skill introducing
the GitHub skill. Okay, learn how GitHub
interactive courses design. Okay, I
think it&#39;s good thing uh skill.github.
Uh I don&#39;t know why it&#39;s open but I
think I need to explore this but now
it&#39;s not important. And the important
thing is to yeah not group games it&#39;s my
previous project. Uh and then and here
uh if you go to the packages in the
packages you will go to the utils. uh in
the utility
schema. Okay, if you&#39;re thinking why I&#39;m
not writing the whole jord schema, there
is no need to write whole jord schema.
Okay, you can see here in this src and
in the src and in the zord you can see
here you will file the whole jaw schema
here the uh admin add provider API I
mean jord schema API key jord schema
okay these are just a ja and not more
than that I inferring the type you can
see this is the type inferring the type
okay and I we will use this so that&#39;s
why I have do I have done these things
okay so now how You can do this just go
in your utils src create a jot folder
create all these file and copy and paste
whole thing. Okay. And here uh but if
you come here in the index.ts you will
find I have exported all jord schema.
But but but now we will not going to do
this. Okay. We will do in different
approach because if you think uh look at
here uh there is a utils. Okay. The
utils but I need this.
Okay. Uh to get to do this first go and
copy my whole jaw schema. I&#39;m also going
to copy the whole J schema because
writing the J schema isn&#39;t a good idea.
Okay, that&#39;s why I am doing this. Okay,
there is uh already a one J schema. Uh
I&#39;m not going to uh change anything
here. Okay, this is on the this level
and we need a J schema on this level.
Okay, here you can see here we need
Okay, in the utils let&#39;s create a folder
called jord. Okay, and let&#39;s paste this
here. So, okay. So, I have push all I
have put all the uh jord schemas here.
Uh here also I have puted the my
authentication schema. So, I think it&#39;s
best thing to remove the jord schema
from here because I have done in the uh
common file. You can see in the common
package. Okay. Also we need to ex uh ex
export this. So to just here uh create a
file export all
export as all do.js.
Okay. Here what we will do here just we
will come on the GitHub page and we will
go to index. You can see there is all
export. So just copy from here. Uh we
only just need to change the path. Okay.
Just paste it here and just remove the
jot because it&#39;s in same folder. I mean
it&#39;s in same level that&#39;s why uh we do
not need this anymore. So remove remove
and remove and also remove. Okay. So
okay so it&#39;s not detecting any uh can&#39;t
find the module. Let me just try to do
this. Okay it&#39;s uh okay it&#39;s it&#39;s the
same thing. I have got the problem. Uh I
we need to put JS.
Okay. So JS and JS. Okay. Uh but maybe
in your case uh when uh Okay. So it&#39;s
done here and we have this all the
schema and with error and there is error
in the jord. Cannot find the module.
Okay. Not a problem. If you don&#39;t find
the module and also if you don&#39;t find
the module here not a problem. We need
to install the jord here. Okay. So
install this. just cls. Okay. So, PNPM
uh let me go inside there cd dot
forward/packages dotforward. Okay.
Forward/
utils. Okay. So, we need to go in the in
just pmppm d add jord. Okay. But if you
are thinking why we are installing the
jord as a dev dependency here because in
our app I mean in our app in our front
end and back end jord is already
installed. So okay. So there is no point
to install jaw as a main dependency.
Here we will install the jaw as only as
a dev dependency. Okay. So in the build
file jord is not available but uh the
dependencies required but our code is
required jaw. So this this uh I mean
this code will refer jord from our uh
apps maybe from front end and from back
end. That&#39;s why I am doing this. Uh by
the way uh I am tell I want to tell you
one thing if uh we will use same package
we if we want to use same package also
in app and also in the uh package. Okay.
So in the package we will install that
package and that library as a dependency
and in our app we will install as a main
dependency. So this is the approach I
have asked this from the chat GPT. So
chat GPT told me uh this is the common
approach used in industry. So that&#39;s why
I have used this. Okay. By the way, if
you have any uh better no I by the way
if you have any better idea for this so
just tell me uh from the next video I
will add okay so it&#39;s not CL it&#39;s CLS
okay so now errors are gone uh there is
some error so just we will fix just wait
for now and here if you think uh we have
all export you can see there is all the
exports from here so just copy uh okay
so just copy
okay Just hit Fn F2. Okay. Uh if you are
in laptop then you need to hit Fn F2 and
go to the packages and just remove this
line. Okay. Uh we do not need this
anymore. Okay. So here. Okay. So here we
need to define files. Okay. First we
need to define this files and in the
files we have build. Okay. So we build
and also we need to define export. Okay.
So export and this one this one and also
I need to add a comma here. Okay.
So for dot forward slash so dot
uh I just only need to uh pass the dot
uh dot forward/build
build uh index dot js this one. And we
also need a j here. So dot forward/z
okay
here and maybe I will find two thing
here I have forgotten let me check uh a
type okay
a type this one and uh import okay so
import which we want to import and this
one okay so we will find this in ch
indexjs uh it&#39;s not correct but it&#39;s
almost correct Okay,
this one. Okay, so this one in the build
we if you uh in the build we will find
this. Okay, and all the in the also in
the build we will find the types. Okay,
let me copy this and let me paste this
here. And also it suggest D. TS. Okay,
so this one this one is our library.
Let&#39;s try to build. So PNPM uh build.
Okay. Okay, I have written the wrong
command. So, PNPM build. Okay, so uh our
package is built now. And if you come
here in the zord, you will find the
export. Okay, you can see somewhere. I
don&#39;t know where. Okay, I&#39;m not going to
check here. I&#39;m just going to check
here. Okay. Uh okay, if if everything is
okay, then it will work. If not, then it
will not work. Okay, so just wait.
Okay, it&#39;s worked. It&#39;s worked. And now
it&#39;s working. And there is no error. Uh
but if we try to run this our app then
we will maybe get error in the front end
because if you have remember we have
deleted the all schemas from here. So we
will get the error uh to detect that I
have remember we have used uh the O
schemas in here. Okay. So if we come
here and also here not here here you can
see in the O form. Okay. Okay. So in the
O form there is layout in the sign.
Okay. In the component I need to find in
the component there is a O form and in
the O form we have me have error uh J
schema. You can see this one. So we just
need to remove. Okay. So at the rate SMM
guru.
So SMM guru utils forward/shot.
Okay. So this will solve the problem
from here. It&#39;s not getting the error
because uh maybe it&#39;s not detected yet.
uh but in future is detected when we
will try to build or try to run. Okay.
So it&#39;s detected here. Okay. So now just
add it SMM guru.
SMM guru utils and jaw. Okay. The
password schema is also coming from this
jord. I don&#39;t know where I use it. Only
password.
Okay. There is error. Can&#39;t find the
module. Okay. It&#39;s just a previous one.
Ah yeah code is now updated. And now it
looks okay. And also there is one more
error. And the error is can&#39;t find its
type declaration. Why?
I think it&#39;s okay. It&#39;s it&#39;s database.
We need utils. Okay. Okay. It&#39;s my
fault. My fault. My fault. Okay. Utils.
Okay. So this util will solve our
problem. Okay. Now it&#39;s okay. And it&#39;s
solved. And now if we come here add
provider. Now everything is working. Now
it&#39;s time to run our front end. Okay.
So, PNPM
dev
front end.
Okay. So, I am getting the one more
error. The error is due to the page
loader is not found. Okay. So, page
loader is existing. Uh the components
global and page loader. I don&#39;t know why
this is not exist but okay. So, it&#39;s
just a UI part. So, we will copy. Okay.
Uh so SMM guru apps and the front end go
to the src
components
global
and the page loader. Okay. So this one
copy this one from here. Okay. So copy
and let&#39;s come on to our code and maybe
this one. This one this one. This one is
our code. And now here
in the components
uh maybe here here here okay in the
components we have global. So we will
create a file here and this is our file
and we will paste our component whole
component here. There is just a loading
p screen. Okay you can see in the div
there is just a loading icon with a
class class name animated spin and some
class
uh height and width property. Okay. So
yeah, I have added this one and now this
error is solved. So now if I try to
restart it again, this will restart.
Okay. So there is also missing use
provider hook. Okay. So now we have
missing the use provider hook. So we
need to create the hook. Uh worry not I
will explain uh I will explain
everything but I will not code in UI.
Okay. But I will code in back end. By
the way, if you go to here in the back
end in the packages hashing, we have the
hashing, we have crypto hashing. Okay,
so we have multiple things hashing
because we need to encrypt our API keys
and okay, so we need to generate our API
key. So these thing we will code the
logical parts we will code but
non-logical part there is no point to
code. Okay, so because you are the on
the path of the full stack developer but
if you want to stack yourself on UI then
yeah you can stack here. Okay. But
understand this because in future you
only have existing code written by the
others. Uh okay. So that&#39;s why you need
to uh make yourself as it is. Uh I mean
I am not able to speak correctly but you
need to develop yourself to understand
others code. Okay. Okay. So now here
hooks. Okay. In the hooks you will find
the hooks. Okay. I have created a hook.
Uh this is not much more than just a
fetch okay query. Okay, you can see it&#39;s
just a query the use provider hook. It&#39;s
just a function. Uh in the uh in the
react uh a hooks is a function not more
than function hooks is just a fun
function. So that is we I am created you
can see use query keyword provider it&#39;s
key for hasing a function uh the query
function just I&#39;m taking the xios admin
instance. Okay. and I am requesting on
the provider. This will just get all the
existing provider and this will show one
UI and not more than that. Okay, it&#39;s a
display error. Uh this will format the
error and show the error as a toast. And
yeah, you can see I&#39;m just exporting uh
the data and loading. But if you want,
you can just return this whole thing.
Okay, if you want I mean to say you can
just uh write the data here and you can
export all the data from here and you
will be able to use all the APIs from
the here but it&#39;s I mean all the states
from the here but uh in my case two
thing is enough that&#39;s why I have only
exported two values you can say two
states because these just these are just
a react states okay not more than that
okay so here so here in the hooks you
will find a hook folder. You can see
there is a hook. Okay. So, create a new
file and paste this one. Okay. So, paste
this one. And now it&#39;s opened. And now
just copy the code from here. Okay. So,
it&#39;s copied and copy and paste this code
from to here. Okay. So, just here and
here and just reload it. Okay. So, we
have error in our uh this file. You can
see the file is admin add user.tsx
because if you come here there is a
schema of z and also the type of z
coming from the o j. But if you have
remember we have deleted this and we
have created our own library for the
schema. So we need to export these jord
schemas from the there. Okay. So I
recommend you just copy this. Okay.
There is a button.
Okay. This will open. M no this is not
opening anything. So copy the uh copy
the line. Okay, this line and come on
the VS code and the VS code hit. Okay,
there is error T provider. Okay, but
what&#39;s the T provider?
Currently I&#39;m not sure about this. What
the T provider? Okay, it&#39;s just a type.
Maybe this will not going to throw
error. But for now, I&#39;m leaving from
here. Just hit control paste. I mean
Ctrl + V here. And also you will find
the error on top. So you can see there
is a error. Yeah, this in this part. So
we just need to remove this. Okay, so
use SMM uh utils and forward/jord.
Okay, so this will solve our problem
from here. Okay, so it&#39;s solved. And now
try to reload it. Okay, so it&#39;s there is
a module problem in the here. Uh so
let&#39;s check there is a data table.tsx.
So this data table I have just copied
from the origin UI. I haven&#39;t built it.
So hit Ctrl P and come on here and
there. And somewhere you will find the
issue. I don&#39;t know why this is coming.
Okay. I&#39;m really really not sure about
this. You can we can find the error
here. Yeah, this one the error. If I go
here uh V1 instance.
Okay. So, V1 instance. V1 instance. I
think I have override the V1 instance.
Yeah, it&#39;s a dashboard and there is no
V1 instance. Yeah, it&#39;s a base. Okay.
So, you need to just copy from here and
just come on go to the or okay I have
forgotten where we want to go. Yeah,
data table and it&#39;s not a B1 instance.
It&#39;s the it&#39;s a V1 base instance. Okay.
So just hit Ctrl+ F and search for XJIOS
XIOS V1.
Okay. And now try to search second one.
Okay. We are already on second one. So
here just remove it. Okay. So this will
solve our problem. Uh you I highly
recommend you to read this. Okay. And
also read how I am using this to make it
dynamic. Okay. It&#39;s your job to read it
and understand it. Okay. But if you
haven&#39;t understand, worry not. I have
created a discord server or a telegram
group. Uh currently I am not sure what I
will create. I will put that uh discord
server or telegram link which we I will
create. Uh so you can join there and
also you can ask the question from
anyone. Okay. uh I don&#39;t know how many
people going to join that group and I
will how many people I will get but uh
it&#39;s it&#39;s just a second thing uh the
primary thing is the creating a group
okay so I will create and maybe I will
also help you to solve errors okay and
if I will get time then I will also I
will also connect you to on meet okay on
Google meet uh we will solve the error
one uh by the way this will free for now
but I don&#39;t know uh but I I want to do
that thing for free so we will we will
may schedule a one and one call on
Google meet uh so I think it&#39;s uh it&#39;s
enough okay so let&#39;s try it okay I think
it&#39;s worked okay so it&#39;s working
okay so you can see the things are
working and it&#39;s loading and loading but
worry not this will going to throw error
because yeah you can see there&#39;s a 404
Okay. So it&#39;s not showing the error
because API isn&#39;t respond responding
anything and these alerts on are highly
based on the API&#39;s response. So that&#39;s
why there is nothing. Okay. But if you
want you can just add or after the order
you can set the message. Okay. So now we
have created and also we have this huge
provider with this one. Uh and I&#39;m not
sure what is this. Okay. So I got this
uh this is the provider uh in interface.
You can see it&#39;s a type which is
inferred from the jaw schemas. Okay. So
J allow us to infer their type. So we
can use this. So it&#39;s just a copy paste
thing. So we will also going to copy and
paste this because but I will explain
worry not uh but uh let me build this um
I mean let me close this. If you come
here there is a schema uh which we have
uh written here. But uh if we want the
type of user then how we can uh get the
type. So to get the type of user just
you can write type okay so type and it&#39;s
a T user you can say like this and T
user what now we need to do we need to
infer the type just type of okay so we
will use this type of coming from the
type script okay and also now what we
will do we will infer the type okay so
we will use you okay okay where I have
gone
okay so here so we will you add user
Okay. So user dot infer. Okay. So you
can see uh infer insert. Okay. So if we
will infer this then if you hover here
maybe not there. If you create any con
here. So here uh rest. Okay. So just
create this one and this one and make it
anything uh any object like this and
provide the type this.
Okay. So this one.
Okay. And now if you R r S and hit dot
and hit space. Now you can see we have
whole types. Okay. You can see uh we
have the all types here. So it&#39;s a lot
of type safety. So that&#39;s why we need to
infer the type. Okay. So what this is
doing? This is just inferring the type
of provider. So we haven&#39;t discussed
about the schema. So now it&#39;s time to
discuss about our whole schema. So I
will uh explain you all the schemas but
let me remove this. Okay. So we have
some default schema. You can see user,
we have sessions and we have accounts.
Okay. And we have the verification. Uh
these are the generated by the O better
o I have already told you and I have
already demonstrated you. So it&#39;s now we
need to come on here and go to the apps
not apps go to here. uh we will go on
the packages
here. Okay. In the packages you will
find the database and the database go to
the src and in the src okay there is a
live in the live you have this schema.
Uh now let me explain the whole schema.
This is time stamp. If you are already
familiar with this uh there is user you
have already familiar with this the user
relation. Okay. So I am defining the
relations here. Uh these are just a jaw
thing. Okay. If you have the jaw skill,
okay, let me first copy this then I will
explain this. Okay. So copy the whole
schema from here
and just paste the whole schema uh here.
Okay. So there. Yeah.
So schema is around 333 lines. Okay. So
you can see there is a relation the user
is relation to the uh provider. It&#39;s a
provider uh many to many relation. Okay.
So it&#39;s a many menu many relation and
also user related one. Okay. Not many
one to many relation. Okay. So uh a
provider a provider has one user. Okay.
So it&#39;s a one one to manual relation.
And this is also one to manual relation.
This is also one to manual relation. But
if you don&#39;t know about the relations in
the SQL then you need to learn about the
release about the relation in post and
also in SQL and I will also recommend
you to refer these docs. Okay. So
drizzle
o and also you will find relation here.
Uh maybe maybe there there okay yeah
here in the manage schema you will find
the relation so click on the relations
okay it&#39;s loading I think okay yeah it&#39;s
loaded so here you will learn how you
can define a relation in the chart I
mean inel so in drizzel define the
relation is really really really easy
okay I want to tell you it&#39;s really easy
is building something uh msql
I don&#39;t know What&#39;s this? Maybe if is
something I can contribute then I will
contribute in this. Okay. And now here
uh we have the query thing a schema. So
you can learn from here and also it&#39;s uh
make sure you have knowledge of uh the
postgress
relations. So okay so go on YouTube and
also learn about that and I&#39;m not going
to talk about that. You can say there is
a user relation and the provider schema.
You can say there is a provider schema.
The provider is this. Okay. So here you
can see the provider is this. Okay. So
we will save the information of the
providers. Okay. Which we will use maybe
in three panel sales media admin panel
uh which I have already shown you. Okay.
So here we have ID which is the serial
and our name and API URL and API key.
You can see
these two thing
here API URL and API key and also name.
There is a three thing altername and the
IV. Okay, so we will store IV publicly.
Uh IV is just not more than a key. Okay,
it&#39;s key. It&#39;s a public key and we do
not need to store this as secret. Okay,
so here at the API key, we will use this
key and also one secret key. I we will
use two key IV key. IC is a secure key
and also we will use uh uh secret key to
encrypt our API key which we have get
from our provider. So uh in here the
open the key will store in secretly I
mean in in encrypted in hashed mode.
Okay. So if someone is stole our docker
database then they haven&#39;t a key. Okay.
So it&#39;s safe and also it&#39;s a IV. Okay.
And there is user ID. uh it&#39;s just uh
showing the relation of foreign client I
mean foreign key okay so here it&#39;s a
provider relation you can see the
provider relation we are defining the
many relation one relation uh okay you
can see here user have I mean uh user
have relation with the provider many but
uh provider have relation with the user
one so it&#39;s a one to many relation uh
same with services okay uh because there
is a also one to many uh many because a
service have one provider but a provider
have multiple services okay like
Instagram res views followers these kind
of thing uh there are multiple thing you
can buy from the wholesaler so if you go
want to know you can just go the service
services page of the wholesalers okay I
know in this video I am explaining the
more things okay more but which I wasn&#39;t
explained in my previous video but also
uh with the explanation I am I have
copied and pasted the multiple codes.
Okay. Okay. Because the copy and pasting
allow me to use uh allow me to explain.
Okay. Allow me to get this kind this
much time to explain you everything in
detail. Okay. So maybe my Okay. So maybe
my effort worth it. Okay. And maybe you
will support me for future videos. Okay.
And also same with goes with services
there is a name and a user ID and also
something it&#39;s a category okay so we
will use this category and also there is
a schema services charact relations okay
so here we are defining the relation and
the schema so schema have service uh
it&#39;s a service ID which come from our uh
provider we will explore this a name uh
coming from their subprovider
type coming from the provider. There is
multiple thing which is coming from our
provider. So we will use this and we
will uh write this in our database and
al also there is a profit. This rate I
mean rate explore the actual price of
our uh service which uh our provider
cost and there is a profit which we will
add our margin or that okay so if you
are thinking why I&#39;m not updating the
rate because the updating rate will not
going to tell us how much price we have
paid to a service in future if you want
uh advanced calculation on this maybe
you want to build a whole dashboard on
this then this will going to make a
problem to you that&#39;s Five it&#39;s a rate
and your profit margin in dollars okay
in USD minax coming from provider the
this
coming from provider USD okay and the
relation
and order schema uh you can see the
order schema this one okay and order
relation so all also there is a wallet
and after the wallet we have wallet
relation we have transactions. Okay. And
we have transaction relation. And we
have transaction fee. Uh this is just a
schema. We haven&#39;t used this schema in
our app. But maybe in some cases you
want the fees. You want to detect the
fees, you can use. I have created it uh
for you. So if you want to use, you can
use because I want to uh make uh make
this project uh a next level from the
YouTube. uh I I step ahead from the
YouTube and I step uh I I step toward a
industry grade code but on a YouTube
it&#39;s not possible to build the uh full
industry grade code because they are
need of Q system in order we need a Q
system retry system and also a DLQ
system and also the notification which
order is failed uh which u where the
writing in database is failed maybe uh
some maybe uh user place order order
successful order created. But in some
cases there is chances uh a wallet
detection I mean wallet detection I mean
uh the uh deduction of price will
failed. Okay. So there is no retry
system. So we need to implement a retry
system that will retry three to four
time. If that fails this uh that action
will going to go in DLQ and the DLQ uh
DLQ will trigger a notification uh to
admin that will this is uh this error
this is failed and you need to manually
write it or if you want to perform
operation you can perform operation okay
so why not I have implemented
transaction if something is failed maybe
order creation and maybe transaction
updating maybe wallet then everything
going to revert back okay so it&#39;s not a
problem in our code because I have tried
to put this uh toward the industry grade
but there is something because this a
YouTube and because the builder of this
project is a who is a single man okay
and this single man haven&#39;t enough time
to build whole thing okay so I am
pushing uh my per but I am providing my
all effort which I can do here I am
doing here okay so you can see the
transaction and the fee relation
And the session again the thing of
better oath and the account again the
thing of better ro and verification
thing of better than API key. This is
also thing of better ro. Okay if you
have remember we have used the API key.
Uh I think I haven&#39;t added yet the API
key plug-in but in future we will add
but in my previous code I already have
the API key schema which I have
generated from the better or CLI. So
it&#39;s there. Okay. So it&#39;s autogenerated.
I haven&#39;t generated this and I haven&#39;t
uh haven&#39;t changed anything from here.
So these are the whole schema and these
are the whole concept of the schema.
Okay. I think I have explored explained
it much as possible and also in schema
we need to export types. Okay. So export
dot sca. Okay. Okay. Okay. Okay. Export
types. No I mean export schema. S cha
schema typts.
Okay. So this one there we will uh if
you want you can infer the whole whole
type of a schema. But in my case uh I&#39;m
not going to infer the whole I will only
infer which I have used in our app. But
if you want make your app more type
shape ah you can do I have open path for
you. You can if you want you can just uh
walk on that path. Okay. in the types.
Okay, I know the uh folder structure are
different in GitHub but when this video
is live and you will get this. So you
have the same project structure which I
have created here. Okay, so worry not
there and paste this here. Okay. So
export type live. Okay, this is then on
same level. Okay, and also there we need
to add JS. Okay, not TS. Uh always
remember we only need to add GS not TS
because this will try to refer. Okay.
One thing this one.
Okay. So I have we have exported every
schema and we have exported every every
everything. Okay. So I will highly
recommend you to remove this.
Okay. So I am getting the Okay. I think
I am doing some Yeah. Yeah. Yeah. Yeah.
I am doing the another operations here.
You can see I&#39;m just inferring the type
there&#39;s a T provider schema or also a
thing here. Okay. So now first I let me
build this. Okay. Okay. So I am here. So
let me build it. Okay. So I think I have
already on here. So okay. So let me use
this terminal. Okay. So cls and cd dot
dot/ do/ maybe now I am able to access
the packages. Okay. Yeah. In the
packages we have to go on databases.
Okay. What I have done here? Let me hit
Ctrl G data. Okay. Okay. Okay. What I
have done here? Okay. So database. Okay.
So now I am on right path. So PNPM
build. Okay. So PNPM build is completed.
If you want you can just touch it here.
Uh in the schema you will find also
there is a type. Okay. So we need to
export. Okay. So we need to define the
package JSONs here. Okay. So if you come
here uh we have already defined the
package JSON but I am not sure if I want
to use this types. So this will work or
not. Uh I am not going to explore that.
Okay. Because I haven&#39;t enough time for
that. So I am just doing this another
approach. And I will uh add dash typ
here. Okay. I am sure this will work.
That&#39;s why I&#39;m doing this. Okay. So if
you come here uh in the schema
okay so export schema type d.ts. So
rename it and hit control arr c and just
paste that here. Okay in the types and
also paste that here.
Okay there. And remove some things from
there. Okay. So it&#39;s a js not ts. Okay.
So we have defined the input and now
let&#39;s build it again. Okay. Okay. So
it&#39;s build is completed and now if we
try to access the database and the
database we have this. Okay. If we use
this then this error may will may solve.
Okay. Just wait. Okay. It&#39;s solved.
Okay. So now we have solved the error
and now it&#39;s time to create a file here.
Okay. uh in the utils function which we
will code together line by line I will
code and I will explain you okay so
because we have done the part from the
UI but if you feel anything is missing
uh you can check but worry not I when we
will run the build uh in the build any
issue is there then it will clear to us
okay so in the src so we have the jaw
okay so here we need to create a folder
called utils okay so I know it&#39;s already
a utils But it&#39;s I think it&#39;s not bad.
Uh let&#39;s call it lib. Okay. So let&#39;s
call it lib.
Uh now let&#39;s me call it utils. Okay. So
uh utils. And here we will create a file
hash. Okay. Uh h s uh h i n g hashing
dot uh ts. Okay. So this file and this
file is really important file. Okay.
because our app encryption is depends on
this file. So we will create and manage
this. Okay. So here uh to use uh first
we need to uh let me close others. So
first we need to use crypto. Okay. Okay.
So we need to use crypto. So import
crypto. Crypto from
crypto. Okay. So I think there is no
crypto. Okay. You can see the crypto is
declared but never read. But I also
couldn&#39;t find the module crypto. Uh let
me try to install a package called P
nodes node types. Okay. So okay. Uh so
install a package in the database. So
just PNPM add-
node
types.
Okay. So let&#39;s install this. This will
may solve the error. If this not solve
then we need to install crypto as a dev
dependency. Okay. So this is installed
and if we come here in our package JSON
uh so we can see there is no okay so
okay so this install in the database
okay it&#39;s not a good thing to here okay
let me remove it okay because we do not
require this in our database so remove
okay it&#39;s not able to remove I don&#39;t
know why so let&#39;s cd do/packages
and also the utils Okay. Uh here. So we
are on utils. And now let&#39;s try to
install there. Okay. Okay. If uh
automatic remove is not work then uh let
me remove this manually. Okay. There is
no files. Okay. It&#39;s all right. Okay.
Okay. So it&#39;s type is not a PNPM
registry. Okay. I think there okay.
Okay. I I know the problem. Okay. So
here and not this one. It&#39;s this one. So
types forward/ node. Okay. So this is
the correct package. Okay. Okay. So this
installed and now after installing this.
So our error is solved. Okay. So now
it&#39;s time to write our functions. Okay.
So now it&#39;s time to create our
functions. Okay. So first we will create
some constant. Okay. Now before creating
the functions, let&#39;s create some
constants. Okay. So here just create a
folder uh maybe in src. Yeah in src. Uh
let me create a file. So constants
constants
forward slash
uh uh just crypto it&#39;s it&#39;s a crypto
related constant. So just was crypto
crypto.constant.ts.
Okay. So here we need two constant.
First is export
uh const
algorithm. Okay. So here we will define
algorithm which type of encryption
algorithm we want. Okay. So algo okay
just give me switch because I don&#39;t know
the spelling of here. So uh yeah this is
the algorithm as 256 ctr. But in our
case we do not need we need CBC. Okay.
So if you don&#39;t know about this
encryption just go on internet and
research about this kind of encryption.
Okay. And here we need a IV key length.
Okay. So we will define our IV key
length here. So N. Okay. So length in I
case I am going with uh 16. Okay. If you
want you can also generate 32 bit I mean
32 character long but it&#39;s enough for
me. Uh and and one thing I need to tell
you if you are going with a AES
encryption always remember you uh you
need to set your IV key length uh 16.
Okay not more than 16. It&#39;s important
thing that&#39;s why I am adding a comment
here. Okay. So for as this is always 16.
Okay. So this is now okay. And now it&#39;s
time to uh create our functions. Okay.
So first function we will create to
generate key. Okay. So export.
Okay. Where is my cursor? So export. So
function
and
function. Okay. Okay. Okay. This is not
a Okay. Let me remove. Let me just block
this. Okay. for now uh for 60 minute
okay because this is really annoying
thing okay in some cases. So function
generate
key and which key we want. Okay. So here
and there. So here we need to as we need
a secret. Okay. And the type is a
string. Okay. Not any uh we need to
define the type and let me add a comment
here.
Okay. So uh add a comment here. Okay. So
generate a secure key from your secure
key. Okay. So we will pass our uh secure
key here. Okay. uh very secure key which
is stored in ENV. So we will pass our
key here and according to this key uh
this will generate a has key okay for
us. So just write and crypto dot uh
create has okay so this will create
somewhere create okay I have not finding
this okay so
create has okay so this is the has and
we need to define the algorithm our
algorithm is sa SHA 256 okay
256 algorithm and uh and here just okay
Okay. Okay. Why I have added a dot here?
Dot update. Okay. So, we want update
here. And by the way, if you are
thinking how I am doing this, uh, okay.
So, to note this, just go to chatg and
uh, tell chat GP to explain it. Okay.
So, dig not destroy, it&#39;s a digest.
Okay.
So, it&#39;s a digest. And now I think it&#39;s
okay. So, we will pass our secret key.
And according to our secret key, this
will generate a has key. Okay. Uh I
don&#39;t know about the length of this but
it&#39;s okay and it&#39;s very secure key.
Okay. So here and now we want to write a
function for encrypting our key. Okay.
So we will generate a key and then we
will encrypt it. Okay. So to do that
just export.
Okay. So export function
and here encrypt. Ry pt encrypt. Okay. I
think the spelling is wrong. Okay. So
it&#39;s encrypt corrective spelling I think
and there and there. Okay. So what now
we need to do uh we first need to take
uh some parameters here. First is a
text. Okay. So text is a string. Okay.
So it&#39;s a string. And second thing we
want a secret key here. Okay. So there
is a secret key which we will pass
through our
uh env. Okay. Secret. Okay. Secret key.
And this is also a string.
Okay. So this is also a string. And now
here uh here first now we need to
generate key because we will pass our
secret key here. And according to this
key secret key we need to generate our
on another key here. Okay. So here
uh con
key equals to generate key. Okay. So
this one generate key. I pass our secret
key there. Okay. So this will generate a
secret key. And now what now we need to
do? We need to now generate a IV key.
Okay. So const IV okay IV is a public
key but we want to generate this okay so
to generate this we will use crypto and
at random bite okay so random bite we
use to generate a string okay uh string
of some thing some length of characters
okay so it&#39;s IV uh IV length okay which
we have already created so this one is
IV length okay so now we need to create
cheaper okay so
P H E R cheaper Okay. So in the cheaper
to create cheaper so crypto dot create
uh cheaper IB this one. Okay. So this
will create a cheaper IB. So we need to
pass the algorithm here. Okay. So our
algorithm is uh assess 256. I think that
is algorithm. Okay. So here if I hover
here I think uh AES uh 256 CBC
algorithm. Okay. So this is the
algorithm and we here we need to pass
the key and also we need to pass a IV
key here. Okay. So these are the three
thing we uh we have required to generate
a cheaper. Okay. And now let encrypted.
Okay. Let me open this. Okay. Because uh
I is in spelling I&#39;m really AI. Okay. So
it&#39;s encrypted text. Okay. So we want to
pass some more uh informations here. So
first one is UDF8 and second one is hex
which AI has been detected. Okay. So
this one and now here encrypted final X.
So it&#39;s okay. So this is sgestion is
right. Okay. So now we want to return
some information. So there is a object
we want to return. First let&#39;s okay I
think IV and content it&#39;s it&#39;s correct.
It&#39;s correct but content not I am not
going to use content. I am use here
encrypted key. Okay. So
encrypted.
Oh yeah this there is key. Okay. So this
one and now let&#39;s also uh we need to
define our uh uh our um I mean return
type uh because we will use this as a
library that&#39;s why we need to define the
written type it&#39;s not important but if
you want you can define okay I don&#39;t
know why I&#39;m getting the error so it&#39;s
not a problem for us uh because I know
the error because this type is a string
and this type is also a string okay
okay so if we define this and now this
is okay and Here we do not need to care
about anything. Okay. So these two
function is okay. So we have the
generate key option from our secret key
and we also have a encryption. Okay. But
we also want to decrypt our key. Now if
we encrypt then we also need to decrypt
that key. So that&#39;s why we need to
create a decrypt function. So okay. So
export decrypt.
Okay. So function decrypt. Okay. The
suggestion is almost correct. I mean
text and secret key. uh session is
almost correct but it&#39;s not totally
correct. So first we want to uh solve
this error from here. And if you come
here here you can see the return type is
string. By the way return type is okay.
And now if we come here secret key. So
if you want you can refer this as secret
keys. And I am also referring as a
secret key. And for this one I am going
to put encrypted data. Okay. So
encrypted data because this here we will
come up with this encrypted data. And
second argument I want IV. Okay. So IV
key we will also pass this IV key. It&#39;s
also a string. Okay. So I am going to
take AIS and there is error because we
are defining this string but we are
returning empty I mean undefined that&#39;s
why there is a error. Okay. Okay. So now
here you can see the decor describe
algorithm key and buffer from hex and x.
Okay. It&#39;s correct. So I&#39;m going to take
this and also
okay. So let decrypted cheaper update
encrypted data hacks UTF8. Okay, it&#39;s
also correct. So I&#39;m going to take this.
Okay, so UTF8. Uh I think this is
correct one. Okay, I think both are the
correct one. But I never used that. So I
don&#39;t know about that. Okay, this one is
also correct. And in the return
there is a decrypted and this is also
correct. Okay. And here uh I also want a
function to create our own API key.
Okay. So create our own API key. Export
function. Okay. So export function is
generate key. Okay. So generate API key.
If there is a key I want to put generate
API key. Okay. So this one and in the
length. Okay. So here is a length. Okay.
So I will pass a default length which is
32 and the 32. Yeah you can see random
bite length and also the hexis. Okay. So
this will generate a string. Okay. So
this is also okay. Okay. So uh we have
created our all required functions here.
Okay. And now uh and now I have added
the comments here. Okay. So there is a
problem. Okay. I know the reason of the
problem. Okay. So I have also written
with uh I so I have also written uh
comments here some comments you can
generate key IV and all these things. So
I have written this. So if you want you
can also refer the commands. Okay. So we
have genuh done with the hashing part.
Okay. So now let me check. Uh
okay. So now it&#39;s okay. So also we need
to define the export for this. Okay. So
these are just a utility function. So
for this purpose I am going to export
this in our here. Okay. So to do this
just
export everything from
uh from where uh from src utils. Okay.
So dot forward/ uh okay where is this?
Okay. In the utils under the utils we
have hashingjs. Okay. So this one we
need to export here. And let me check
the package json here. Okay. So in the
package JSON jord index.js. Okay. This
is also correcting. Okay. So now just
build.
Okay. Not build only. It&#39;s a pnpm build.
Okay. So pnpm build. And what we want to
build? So we want to build utils.
Okay. So the utils
okay so now we have done with the builds
okay so now let&#39;s try to clear the
terminal and now it&#39;s time to come on
our front end part let&#39;s close all the
thing so we have done here okay and now
go to the front end and the front end
uh again go to the admin okay in the
admin uh provider here&#39;s a ad provider
provider. Okay. So in the add provider
now it&#39;s time to check our ad provider.
Ctrl + B and also Ctrl J. Uh you can see
so here is a button and button is
opening our dialogue box. Okay. You can
see uh I am managing my own state. So
it&#39;s opening a dialogue and here you can
see uh in the dial dialogue are passed
in our form. Okay. So this is our form.
If I open this form, you can see the
form is also in same file but below this
add button add provider. Okay. So here
if you go if you check this so this will
contain this and ID also there is also
ID because here we will perform the edit
and delete operation at same time okay
so you can see there is a function I
mean it&#39;s a use query hook here it&#39;s
uses the admin hook okay admin instance
and here you can see uh API response
okay so this kind of API response we
will get from the server and from where
uh it&#39;s a get okay so get for we are
using this for
So providers key and what&#39;s the id of
the key. Okay. Uh which we will store in
database. Okay. If you don&#39;t know about
this, worry not. We will discuss about
this uh again. Okay. And this one and
this one. Okay. So why this we are doing
this? Because uh in some cases because
because the region is this uh because
when we load our data first time you can
see here
uh uh there. Yeah. You can see there uh
if we load our data so our key is there
but our key is there but the problem is
our key is encrypted here we haven&#39;t
decrypted the key you can see if I
inspect this
uh
in the network tab there is very high
chances that there there is no existence
of key okay
you can see it&#39;s a provider Okay.
And you can see we are we only get the
ID ID of our key and the name and the
endpoint. Okay. We have no API key.
Okay. To get the API key, we need to
click here. Okay. So, let me again open
this
network tab.
Okay. So, it&#39;s open. And now if I click
on this, so this will again request the
data from server with the key ID. Okay.
If you see the key uh key id of this key
is 11. So uh this will send 11 key to
database and database will fetch the key
and decrypt that key. Okay. And after
the decrypted this will send to our
front end. Okay. So you can see so we
are doing this with encryption. We are
securing our key. Okay. So this is the
key original key which I have gotten
from the uh sales media panel. Okay. But
if you go in the database for this panel
I am using the nille okay the nille
database but for YouTube tutorial I am
using superbase okay not sponsored by
the superbase but uh because I I have
used superbase because I find it more
you easy easy okay because in the uh
database I mean from the dashboard of
superbase you are able to migrate your
data you are able to mutate your data
but the n doesn&#39;t provide this kind of a
this kind of features So you need to
write a query in nle that&#39;s why I am not
using the nle in this project on YouTube
but uh internally I have used for my own
project it&#39;s a nle but I don&#39;t like nle
I never going to build any project this
on this nle platform okay this first
time and last time okay but if they
improve this in future then maybe here
uh you can go in the provider section
okay
okay where I I have written the
provider.
Okay. Yeah, you can see provider schema.
Okay. So, this is a provider schema. You
can see the key is stored in database is
this. But the key we have get on uh our
on front end this key. This is our
original key and this is the encrypted
key. Okay. So you if you remember we
have just defined our encryption
function to get this function. Okay. I
mean to to get this feature. Okay. Okay.
So it says user ID, date and time and
the key ID ID this ID. Okay. So this ID
we are passing here you can see uh there
there. Okay. So this is the that ID.
Okay. But if you are thinking where I am
getting the this ID so you can see the
ID I&#39;m extracting from here. Okay. You
can see there as a component. Okay. If
we have the option of edit. Okay. If we
have option to edit this. Okay. So we
will pass the key and we will get the
decrypted information. Okay. So you can
see provider
the query will change and the query will
rerun if the ID is changed and also this
will enable only if each editing is true
because uh if there is no okay if we are
not editing this then there is no point
to run this query. Okay but we are
editing let&#39;s see uh if we click there.
Okay, just let me close not let me close
let me collapse this and let me clear it
and let me also close this. If we create
click on add key you can see uh there is
just empty and there is no loader and
there is no network request but this the
component is same you can see I&#39;m using
this component as also in creating and
also in editing but if I click on edit
you can see so there is a loading
instead this is fetching the data from
here you can see of ID 11 okay so this
will fet the data and decrypt the in key
and that will uh displayed on our front
end so here we have option to change our
key and we have option to change URL and
we also the name. So we have the same
options here. Okay. But if you go on any
PHP panel you will not going to find I
mean in the market which uh they are
selling. Okay. Selling on code canyon
selling on YouTube you will not not
going to find the edit feature in that.
Okay. So I am doing that here. Okay. So
you can see this is for editing. Okay.
This query is for editing. This will run
when this is change. Okay. This editing
true then it will run and so form in the
form we are passing the default data if
data is available from there you can see
from there then so if not just uh set
empty okay there is a huge effect so we
are setting the data okay in the form
okay because if if you put there this
will not going to work because sometime
components load later than data data pre
fetch previously but component load
later oh okay okay it&#39;s my bad uh data
fetch um if components load first data
fed last. Okay, I mean you can say first
data and secondly display uh display the
two uh uh the component. Okay, in that
case our use form set uh the data to
empty string. Okay, so we need a effect.
Okay, we need a huge effect that runs on
changes data when whenever data change
effect run effect set our uh form data
dynamically. Okay, it&#39;s a set value. So
we are overwriting this key. You can see
API key. The key if you don&#39;t know just
control space. Now you have the options.
Okay. So you can this these are the type
safety. So you get the type safety here
and also it&#39;s a mutation hook. Okay. So
here I we are performing the mutation
for creating and deleting. You can see
condition if editing. So we are
requesting this with a post method. You
can see there is a post method for oh
sorry it&#39;s my bad. There&#39;s if not
editing. So we are hitting the post uh
if endpoint we can see the same endpoint
is same but method is post okay if not
that case if not edit if I not editing
it&#39;s I mean if editing okay if the uh we
are requesting for the editing so we are
hitting the patch uh the URL is same you
can say endpoint is same but also I am
passing the ID here which uh which id I
mean which key we want to edit so we
need to pass the ID to tell the to fetch
the quer database and to update the
database according to the ID. So I am
fetching the ID I am sending the ID here
of our current key and also the method
is post I mean patch patch. Okay. So
method is patch and point is almost
same. This is the dynamic. So this will
work for also for editing and also for
the creating no because we are using the
same component for editing and creating.
Okay success response toast and these
are just things. Okay. So here the
display error and these are the just
dialogue which contains sen form. Okay,
it&#39;s a sen react hook form. If you don&#39;t
know about the sen react hook form, no
problem. Just open the docs. Okay, go to
the side scene. I don&#39;t know why it&#39;s so
why soifi is showing on first. Okay. Uh
react.
Okay, it&#39;s a react hook form. Okay, so
let me search only form.
Okay, I think this form. Yeah, you can
see it&#39;s a react hook form. So uh you
can learn from here and also you can
just go and learn jaw and react form.
Okay. Reactful form is different library
sets in uses these two library to build
their own form component. Okay.
So I think now you have understood.
Okay. So okay to achieve this. Okay. So
now it&#39;s time to create our back end.
Okay. And also let me uh okay we I have
explained this this and this one thing
when you click on this and over you
click on this. Okay. So these will going
to uh this will going to make query on
same endpoint. Okay. If you hit this
this will also hit same endpoint and
this will also going to hit same
endpoint. Okay. Uh to get the same
information. Okay. So I think you have
understood and there is also a delete
button. So for delete we will just
create a delete method and the delete
method we will pass the key I I mean id
uh just like we are passing here. Okay
you can see so we are passing here the
id. So just like we will also pass the
id for delete. Okay. So in the back end
we will hand the delete. Okay. So now
it&#39;s time to create our back end. Okay.
So we have done with our front end uh
create uh uh provider creation part.
Okay. So now come here
and okay so there is two back end this
back end use for only API selling and so
for this our app communication I will
going to use only only uh nextJS router
okay so it&#39;s app in the apps you will
find the API okay you can see there is a
API so this is this setup is already
comes with the hono setup you can see so
I have already set up the hono okay uh
but if you don&#39;t know about how to set
up hono with XJS not a problem. Uh go to
hono.com I mean hono.dev. I think it&#39;s
not.com. Yeah, it&#39;s a hono.dev.
You can come here. Go to the getting
started and also go to the again getting
started and go to virtual. Okay. So you
will find the setup here. You can see we
just need to run PNPM. Okay. This one
PNPM add huno. Okay. So not create pnpm
add horno. This will install library in
our virtual app. Okay. If you run this,
this will going to create a hole. But we
don&#39;t want to hole. We want to install
hono on our existing project. That&#39;s why
project that&#39;s why we need to run PNPM
add hono. If the P hono is installed
then we need to import you can we need
to create this path. I mean you can see
route TS file on this path. So you can
see I have already created you can see
the path is same. Okay.
And and this one and this one. Okay.
Edge runtime. In our case, we do not
want the runtime ads. So, you can remove
this. And the base path, you can set.
Okay. It&#39;s important to add API here is
really really really important. Okay. Uh
don&#39;t forget this. Okay. And this one
and the route and also the method if you
want to use any method you can you need
to export that method here. So, you can
see I am exporting the method get post,
put, delete and patch. Okay. If you want
if don&#39;t want to support put method uh
by the way if you don&#39;t want to support
put method so you can just comment it
out or just remove it. Okay. So our app
not going to support put method. Okay.
If someone requested with a put uh this
will send through a course error. Okay.
But let me add the put method. Okay. And
now you can just run this test endpoint
to detect uh your uh server is working
correctly or not. Okay. So I think now I
have explained the setup of hono and I&#39;m
not going to write this line by line
because where I need then I will write
the code line by line. Uh this setup is
not enough for us. So we need to set up
more. So first remove this one. Okay. We
don&#39;t not need this. Okay. So here first
thing first we need to do uh first we
need to create a route folder here.
Okay. So here you can create a routes
folder not a file. You can if you want
you can create a file but yeah let&#39;s
create a file. Okay. So routes r o u t e
s routes. Okay. So we have uh we need to
add that forward dash in the uh in the
prefix okay to ignore because uh the
next just know we need to ignore this as
a route. So it&#39;s a config. Okay. So it&#39;s
a config route.ts.
Okay. So this one. Okay. So it&#39;s a
routes. Okay. Okay. So if you hit this
this will create a folder and inside the
folder this will create this file. Okay.
So here first we need to define so con
uh a route. Okay. So we will use the
routes here. Okay. So in the routes.
Okay. So we will define the horno. Okay.
I think we need to define a new horno.
Yeah we need to define new hono because
hono is a class. So new hono. Okay. So
this one. Oh not ho. It&#39;s hono. Okay. So
hono we just need to export default.
Okay. So export default routes. Okay. So
just export this. Okay. So it&#39;s enough
and we have done from this part. Okay.
So now here we need to uh route that.
Okay. So here route we need to use the
route and there for forward slash we
need to route for forward slash and dot
I mean comma route. Okay. So r o u t e
route. Okay. So I&#39;m not getting the
suggestions here because I am getting
the sgest here. Okay. So it&#39;s done.
Okay. So if you are thinking this setup
is enough, no this is not enough because
uh we are using the better ro. Okay. So
authent we also need some authentication
related setup. Okay. So we will do the
authentication related setup in our in
our you know where we I&#39;m going to do
that uh in our uh utils package. Okay.
So in our utils package so here and also
we need to transfer this function. You
can see yeah this function in our utils.
Okay. So to do that just come here.
Okay, just control-click on this because
I don&#39;t know the location of this. You
can see the this is here. Okay, so we
need to transfer this. Okay, so to
transfer this just uh in the YouTube go
to the sr create a folder called
middleware. Okay, uh m i d l e middle w
a r. Now if if I will uh write wrong
spelling then please don&#39;t judge me
because I&#39;m really really really poor in
writings. Okay. So here let me create a
file name session
dot uh middleware mi
w
e w middleware.ts. Okay. So this file
okay. So in this file we need to write
some configuration but for now just
ignore this configuration for now. Okay.
Uh okay. So this file uh worry not
ignore this file for now. Uh we will
come on uh we will come again on this
file but for now uh we want to create
the error file. Okay. So here we will
okay okay so here we will uh handle the
errors okay so handler d e r handler dot
error
ts okay so this one is file okay so it&#39;s
error file now just come here error
handler and just control a and control I
mean okay you if you also you want totrl
c and the handler okay it&#39;s a util
handle just paste it here okay so if you
paste it here you will get you will get
lots of errors Okay. Uh we need to fix
this lots of error. Okay. So we have the
error. Okay. At the rate types types
there is no types. Okay. It&#39;s there is a
API response. Okay. I got this. Okay.
This type we I&#39;m going to create
manually. Okay. Because this is not a
more important thing. So uh if you want
you can create this type manually. So I
want to create this type manually. So
let me come here
control AR C. Uh this type I think I
have already explained you. So I&#39;m not
going to explain you again and again.
Okay. So here just Ctrl + V. Okay. Ctrl
+ V not V. Okay. So yeah this one again
Ctrl + V for opening this. And now it&#39;s
solved. And now here you can see we have
the multiple error here the content
fulfillment status. Okay
from util status you can see it&#39;s this
is coming from here. Okay. And you can
see here we have the dependency on ho.
But but but in our main apps also have
dependency hono. So we will install hono
here but as a dev dependency not as a
main dependency. Okay. And also there is
xjos and xjos has also dependency. Okay.
Uh exjios has also dependency in our
utils and also dependency in our apps.
Okay. That&#39;s why we will install xjios
and hono as a dependency in our app.
Okay. So just come here
and now here let me uh navigate. So cd
dot forward/p packages and utils. Okay.
So this one and now pnpm add-end d uh
also exios.
Okay. So xios and also the hono. Okay.
It&#39;s a ho there and hono and here you
okay let&#39;s hit enter. Okay. So now our
xios and the hono is installed as a dev
dependency. uh if you not believe on
this just open this uh I mean packet
dojson you can check here we have the
dependencies here okay so now here you
can see our all errors are solved now
and there is no error okay so error is
solved and also we need to export okay
so we need to export this okay in our
index dojs if you want you can create a
error okay for/ error thing uh if you
want you can do but uh I think I don&#39;t
want want to do that. Yeah, I want to
Okay, I&#39;m not going to do that. Okay,
I&#39;m just going to export this in the
index.js. Okay, if you want, you can
create a uh for/ error here. Okay, so
not a problem. Just come here and paste
this here. Okay. Okay, so just come and
now here export everything from the
error handler and also uh we need to
certify JS here. Okay, so GS. Okay, so
now it&#39;s good. I&#39;m not going to create a
for/ error. Okay, if you want you can do
anything. It&#39;s shown in your hand. Okay.
So now if you remember we have created a
session. You can see a middleware for
add session. Okay. So there is a
middleware for add session. So we need
to create this. Okay. Okay. So this uh
before uh implementing this uh
middleware we need to learn something.
Uh if you go to the better. Okay. So
better docs.
Okay. So there is a better ro
documentation. If you come here and if
you go to the plugins uh not in plugins
uh if you go to the integrations. Okay.
So in the integration if you go to the
hano huno not hano ho ho middleware.
Okay. I think this one you can see
somewhere
get session. Yeah. Yeah. Yeah. You can
see uh it&#39;s adding the session. You can
see it&#39;s it&#39;s created a middleware runs
on every route. Okay. So what the
working of this uh this will extract the
session from the our uh request and the
request if session is not then it will
set our user to null and also the
session to null. Okay. And and just next
okay pass the next and if there is user
and session then it will add and pass
the next. Okay. So just we want to do
this but in our way okay so now let&#39;s
you can see there is O this is coming
from our server o we have already seen
that. Okay. So we have set up this o but
but but how we will get this o here.
Okay. So we will this take this o as a
parameter. Uh by the way if you want you
can define a type here but I&#39;m not
defining a type of this because I really
don&#39;t know the type of this. Okay. And I
am not able to copy. But if you want you
if you want the type almost almost
correct type so you can copy the types.
Okay. Uh but I&#39;m not going to do that. I
am only believing just creating a
function here. So just create a
function. So con. Okay. create arrow
function. So add session.
Okay. So add session. Okay. Let me add
this capital. Okay. Because I like the
camel case. Okay. In the programming and
all the developers likes programming uh
in camel case. Okay. So there is request
response and next it&#39;s almost correct.
But in case of express but in case of
owno it&#39;s not correct. In case of ho
yeah it&#39;s correct. It&#39;s a context C. And
also we want next. Yeah. Okay. Okay, we
will get the next index. Oh, no. And the
type is next. Okay, it&#39;s correct. But we
also have a third argument called O.
Okay, so O type any I don&#39;t know the
type. Okay, so this one. Okay, so we
need to import this from the HONU. You
we know we have a HONU as a dev
dependency in the Okay, what&#39;s this uh
in our package JSON? Okay, you can see
in our utils. Okay, so here now we need
to get the session. So con session
session equals to a wait. We need to
wait because it&#39;s a network request. It
will take some time. So it&#39;s O. Okay.
And then on the O we will get API. Okay.
So I don&#39;t want to write this. Okay. So
just copy this from here and copy this
whole thing. Okay. Whole thing from
here. Okay. It&#39;s really a good thing to
copy and paste. I am a copy and paste
specialist. Okay. So okay what I have
done here? Okay. I think I have write
something that which I don&#39;t want to
write. Okay. So it&#39;s window and and and
and and there. Okay. So this is the part
which I have copied from the docs. Okay.
What&#39;s this? I don&#39;t know what&#39;s this
and what why this is showing. Okay. If
you know about this just tell me uh the
time stamp. Okay. Uh okay. So control
alt f. Okay. So now let me check uh it&#39;s
satisfying my use case or not. Yes. This
one this one is correct. This correct
and this is the correct. Okay. So the
setup is correct. And now we need to
export this. Okay. So export as the
default. Okay. Export at session. Okay.
So this one and now we need to export
this in our uh index.ts. Okay. So first
what we need to do. Okay. So first
import. Okay. Because it&#39;s a default. So
we need to import. Okay. So import add
session.
Okay. So add session from the forward/
middleware from add session. Okay. I
think it&#39;s correct. Okay. Uh to verify
this just controlclick and if they open
the correct path. Yeah it&#39;s okay. Okay.
So it&#39;s okay. And I think I&#39;m on here.
Okay. So just export this. Okay. So
export this and add session. Okay. Uh if
we add this. Okay. So now we have done
this part. And also we need to all we
also need to create one more thing uh
here. Okay. So I&#39;m going to create this
on root level. Okay. So here uh and we
need to create some constants. Okay. So
I will just copy the paste this because
the writing this not going to make
sense. Uh this whole constants are the
AI generated. So so code.ts.
Okay, if you don&#39;t know about this, uh I
have created a constants, okay, for all
status code with their name. I have
learned this I mean I have learned this
practice from the syntax. Okay, if you
don&#39;t know about the channel called
syntax, you can go on YouTube and
search. Okay, so syntax is really
awesome creator. I like their videos and
I also learned something from there. I
have learned mono repo from syntax. I
have learned something something in hono
because I have referred the docs for the
learning hono and also I have learned
eslint configuration with monor repo
from syntax okay so syntax is really
awesome channel okay you can refer that
channel okay so this practice I have
also learned from the syntax you can see
this is the constant file if you don&#39;t
know these are just uh docs jsx dot and
not more than that uh I have just
documented everything uh this is
generated by AI. Okay. also document
documentation and also it&#39;s a okay
constant 200 created 201 except 2022 uh
202 and all content blah blah blah I
mean uh so these are just things okay so
you can see here uh it&#39;s if you go to my
GitHub repo you will find this file on
the same level so the levels are same
okay okay so you also need to export
these uh codes from here so just export
this okay so status code uh I need to
put dot js here. Okay. So, JS. Okay. So,
it&#39;s fine and it&#39;s now okay. And now let
me run the builds. Okay. I am on util.
So, it&#39;s better to run just build here.
Okay. So, build. So, now this part is
done. And now it&#39;s time to configure our
route. Okay. I think I have configured
all thing almost all thing. Okay. So,
it&#39;s routes. Uh I have closed and now
it&#39;s time to set up. Okay. So, app dot
use. Okay. And there what now we need to
do? uh we need to uh uh write a function
here. In the function we will get C and
N. Okay. Uh C is a con con and N is
next. Okay. Uh if you don&#39;t know just
hover here. Okay. If you hover here you
will find uh you can say next and the
context. Okay. So here you can see the
add sgest this one this one this one and
it&#39;s already correct. Okay. What
happened? Okay. Okay. Not this one. Uh
first sgest was right but this
suggestion is not right. Okay. So you
can see this suggestion is correct.
Okay. Okay. Capsule. Okay. So you can
see I have added this and this is not
detecting O. Let me import the O. Okay.
This one is O. And now let me also
import this. I think I haven&#39;t installed
this. Okay. So I think I haven&#39;t
installed the utils here. So I need to
install. But first let me this one. And
also let me go in the error handler
because if you remember I have created a
error handler. Okay. I have created a
error handler in our util. So we do not
need here. Okay. So just delete from
here. Okay. So this one and now uh let
me come on the package JSON of the front
end. If I come here, you can see there I
think I have forgotten to import utils.
Yeah, there is utils. Okay, it&#39;s
correct. There is utils. I think it&#39;s
not able to detect automatically. So we
need to uh uh write this manually. Okay.
So, so, so, so at the rate SMM guru uh
utils this one and now this one and this
one and and and accepted for when you
can see all everything is coming here.
So we have the add session and if I
insert a comma here uh if I try to
access error handler okay so there is no
error handler reason I don&#39;t know okay
uh to check okay uh there if there is a
sation let me add there and now let&#39;s
come here and check from the utils why
this problem is happening and what the
reason of this problem okay utils and
index okay so there is index okay so
it&#39;s add session
error error handler handler JS okay if I
come here uh let me see check and check
it&#39;s error handler okay done
okay export class okay maybe it&#39;s due to
default if I remove the default if I
export here okay so export
okay so if I export here let me again
hit Ctrl J and let me again try to build
it okay so now I have built it and now
let me try it again maybe yeah Now the
error is solved now. And now this is
working. But if you are thinking this is
enough. No, it&#39;s not enough. Uh we want
Okay. So I want one more middleware
here. Okay. Uh to do that uh just come
here because our front end also have a a
folder called middleware. Okay. Okay.
Okay. Not there. Not there. Not there.
Not there. Not there. Where? Okay. I
think I haven&#39;t added a folder in middle
named middleware in our front end. So
let me add. Okay. So uh create a folder
here. So w a middleware. Okay. So this
one is and inside this I need to create
a file here. Okay. So I have
unauthorized access middleware. Okay. So
this will check our route which I we
have already done in my uh front end. I
mean indexjs middleware.ts. Same thing
we will going to do here but for back
end. Okay. Okay. But if you want you can
just restrict user here. uh but in some
cases why I have used this here because
because because then uh when I created
when I was created this project at that
time nextjs has bug okay that time
nextjs has bug
because you uh nextjs have bug anyone is
able to the bypass the middleware of
nextjs okay so that&#39;s why I I was used
this and I will always use this uh type
of function here to protect our route
especially Okay, because I am not going
to believe in nextJS and I&#39;m not going
to believe in oh no. Okay, there is
bugs. Okay, always there is bugs and any
hacker can detect the bug and exploit
your app. So it&#39;s highly chances but if
we use two middle wares for same purpose
there is two security level and there is
two checks and maybe if one fail then
work one work okay so there is 50/50
chance that&#39;s why I have created this
unauthorized access middleware ts okay
so also this will check here okay if
next just pass this and our middleware
of phone also check this and this will
also pass if everything is okay so for
this function I&#39;m not going to uh uh
This function I&#39;m not going to create
okay because it&#39;s easy function just as
else if okay which we have already done
multiple time in our multiple projects
okay so I&#39;m not going to do that just go
in the apps and go to the front end
and in the front end and go to the src
and in the src go to the lib h it&#39;s a
middleware dot middleware ts it&#39;s a
folder name of middleware ts okay
okay so Copy
all this. Worry not I will explain if
you are expecting explanation from me.
So worry not I will explain. Uh you can
see it&#39;s a session validator is taking
the context and next with the type and
user you can see the user here and path.
Okay, they&#39;re getting the path from the
request and checking the path. If path
start with admin and role is not admin,
then error validator access unauthorized
access exit attempted and fader and also
same for the dashboard route. Okay. And
if not that just written okay so it&#39;s
worked and there is no error. I was
expecting an error but it worked. Okay,
it worked. So that&#39;s good for us because
I know in pro development there is no
one time. Okay. There is no chances
there is zero chances our code will work
in one time first time. Okay. Okay. I
think I need to mark this on top because
when I put the error handler first if
something cause error here then it will
catch in error handler. Okay. So I think
this I think this uh orientation is
good. Okay. So now we need to add we
need to add our middleware here. Okay.
So this one and now just import this
session validator. Okay. So session
validator this one. And now uh our
configuration of route.tsspace is done.
Okay. So we have done with
configuration. Now it&#39;s time to create
our original routes. Okay. Okay. So now
create a folder here called V1. Okay. So
here we will store all V1 routes. It&#39;s
my practice uh in your case maybe you
have uh you like different cases okay
but I like this one so here uh I will
also create a one more folder called
admin al so it&#39;s a admin okay here we
will add all the admin route and the
second folder it&#39;s dashboard here I will
uh implement all the dashboard route so
d s p o a r d so it&#39;s a dashboard and
the admin uh I think we need three files
but for now I&#39;m just going with a
provider so provider dot route
TS. Okay. So this one and now here uh
just now let we need to uh define our
instance of the HON. So add provider.
So it&#39;s add provider route equals to not
this one. Uh it&#39;s new it&#39;s hono and the
hono and this one. Okay. Okay. Why I&#39;m
writing this the ho? It&#39;s h not ho.
Okay. So this one and it&#39;s okay. But
this is not okay because you have
remember uh we have added a session. Uh
so we need to define our authentication
I mean uh also we need to extend the
type of sessions. Okay. So here if you
come uh in the better ro in the better
ro you will find the type here I which
we have created. Okay. So here uh there
is here we need one more session. Okay.
So let me copy paste that. Okay. So
because the adding a session manually is
not make a point. Okay. It&#39;s a session.
It&#39;s a hono session. It&#39;s inferring
session. Okay. It&#39;s in for the whole
session but in for the type only type of
session. So session for the horno we
will send this horno we will tell the
horno what we will get in the get and
get and set in get and set in the
session we have the user this will
contain only the user tok I mean user
thing okay and here I&#39;m just passing the
all session it&#39;s a variable this thing
for hono and this one okay uh hono and
if you don&#39;t know this about this uh you
can go here in the docs and you can see
uh here you will add the session but who
know How hono will how will hono knows
there is a a user and session in there
in the method of get and session I mean
get and set so here we need to tell the
horno there is existence of this okay so
I think I was was son okay you can see
not this one not this one this one not
okay maybe somewhere yeah you can see
yeah oh yeah it&#39;s extended the type of
owner you can passing this okay you can
see the same thing the same thing we are
doing you can see the same thing here
which we are doing okay so the this is
same thing but I am I have put
everything in the interface okay so uh
we just only need to copy this and we
just only need to come here and we just
need only need to just import this here
okay and now it&#39;s okay and uh due to
this my version of code you will get rid
of these lines okay so now it&#39;s okay and
it&#39;s fine and now it&#39;s time to write our
quotes I mean routes. Okay. So uh first
I I want to write our post route. Post
route is for creating a new uh you can
say the post route is creating for a new
uh provider. So first we need to export
this. Okay. So let&#39;s export it here. Add
here we will write everything. So add
okay. So add provider.
Okay. Add provider post add. Okay. So
it&#39;s not add uh it&#39;s just forward slash.
Okay. Okay. And one thing one thing one
thing we need to define this first here.
Okay. So here this will routes three
time. First is route from index index to
our config routes and from the config
route it&#39;s route to our main route.
Okay. So here okay I have forgotten to
run this. Okay. So this one. Okay. So
now here uh let me add admin route.
Admin ros routes. And here I will put so
okay. So route routes dot route. Okay.
So it&#39;s a route and here uh I will add
admin okay forward/admin
forward slash providers pro v i d e r s
providers okay and now here uh I will
just pass my copied route name okay so
this one I will just redirect this here
okay so there is this thing okay and now
now we have done if we try to access
forward/ here then we need to access
api/v1/
admin for/ providers okay then we we&#39;ll
able to access this route. Okay. So,
it&#39;s good. It&#39;s good. It&#39;s good but
totally not good. Okay. Uh we want to
use a jaw here. Okay. And so J
middleware here. Okay. So why it&#39;s add
this. Okay. Let me remove. Okay. And we
need to use jaw middleware. If you come
here and just search for a jaw, you can
see the okay not it&#39;s jaw. Okay. Open
API jaw. You can see okay I think vi
with jaw validation. This one. Okay.
It&#39;s a short validate middleware. So we
need this package and the use case here.
Okay, it this will allow us to before
parsing before processing our request to
validate our request schema. Okay, so
it&#39;s good to use this. I always
recommend you to use this. Okay, so copy
this. Okay, just copy the PNPM command.
Okay, it&#39;s best. And now just come here.
Uh maybe maybe this one. Yeah, this one.
And now go to the terminal. in the
terminal. Uh let&#39;s route to the front
end. Okay. It&#39;s on utils. So cd dot/
apps. Okay. Forward slash front end this
one. And just hit V. Okay. Okay. So I
have done here. You can see I have done
here. Okay. You can see we have
installed here. So we need to add our
jaw middleware here. Okay. So let&#39;s copy
the import because I think first time it
will not going to detect automatically
uh import. So I need to import manually.
So it&#39;s control + V and now here here
and let try to uh let try to validate
our schema. Okay. So it&#39;s a Jed
validation. Okay. So it&#39;s a Jed
validator and here we need to pass the
things. Okay. Okay. So Jed validator.
First thing first what type of data we
will get? So we will get the JSON. Here
it&#39;s correct. Okay. So we will send
JSON. Uh if you have more kind of data
you can see the supported data format.
Yeah. send params query everything is
there take so you can check here so here
we need to check add uh provider
add provider form schema the coming from
okay it&#39;s not autoimp imported ah it&#39;s
imported now uh you can see coming from
util short okay it&#39;s best it&#39;s best okay
so now it&#39;s time to write our uh route
okay so first we need to const okay so
const okay so we need to get the whole
body. So whole body from the request. So
it&#39;s a whole body equals to uh here we
do not need to await because the
awaiting a part is done by this
validator. So C do. Valid JSON. Yeah
it&#39;s correct. So we need to use this.
Okay. Okay. Uh when we are using this
validator middleware then we will able
to access this. If not then we will not
able to access this. And if you hover
here it&#39;s a type safe. Okay. It&#39;s
totally type safe. If you hover it&#39;s
loading loading or loading. Yeah you can
see it&#39;s totally type safe. you will get
name, URL and API key here. Okay. But if
you use the default one which is I think
it&#39;s body I have okay it&#39;s chosen JSON.
So you will not get this as a type safe.
Okay. So it&#39;s good for type safe. It&#39;s
good for validation and it&#39;s really a
best practice. Okay. So const user.
Okay. It&#39;s guaranteed. It&#39;s totally
totally fully guaranteed. We will get
user here because if not there is no
user this then this will going to throw
error. Okay. So if you hover here then
you have a type you have type for user
you can see the type for whole user this
is coming from the here okay this is
doing this okay so here what now we need
to do we will get the key from our
request because this this post route is
for creating a provider you have
remember if you have forgotten then you
need to check our UI again okay so it&#39;s
the post request is for creating a new
provider so before creating a new
provider we need to encrypt our uh our
API key to encrypt the API key. So we
will hit const. Okay. So we will hit
encrypted API key
encrypted
API key. Okay. So this one is encrypted
API key. Now we need to call the encrypt
function which we have created in our
utils. Okay. So it&#39;s encrypt. Okay.
Okay. Okay. Okay. Okay. So encrypt.
Let&#39;s import the encrypt. Okay. from
there utils and now here we need to pass
two things. First is our a secret key uh
which we have installed in our
environment variable and sec first one
is uh API key. So first one is API key
and the second one is our secret. So to
pass the secret okay
so this is okay. So this is our secret.
Okay you can see this is the secret and
and and let&#39;s import this. I think I
haven&#39;t created this yet. Okay. So it&#39;s
haven&#39;t created yet. So we need to
create this. Okay. Uh so come here in
the YouTube just create a folder. I mean
a file called in. Okay. Not a folder
it&#39;s file.
Okay. In front end I was forgotten. In
front end uh you need to I think it&#39;s
already exist. Let me see. Yeah it
already exists and okay I think there is
no there is no there is everything.
There is no everything. Okay. So here
now let&#39;s go to the GitHub account. my
GitHub repo. Uh from here you can go to
the front end and the front end you can
go to the live and live envy
whole thing from here. Okay, it&#39;s not
going to make sense writing line by
line. So that&#39;s why I recommend you to
just copy you can see the whole thing
here and the whole thing whole thing you
can see the whole thing here and let me
check the env. Okay, I think I have uh
written whole thing in ENV. Okay. So let
me copy the whole thing from my another
env. Okay. I will show you. Okay. So now
project name a variable these kind these
env I have pasted here. It&#39;s a better or
it&#39;s a o for uh our application. Okay.
And recent key okay and as cry es
encryption key. You can generate this
from anywhere you can generate from the
internet. You will find generate a
32-bit encryption key. So this will
generate or you can uh generate our key
uh the key from uh generate key which we
have created a function on YouTube. So
you can generate this key from there and
also you can generate from anywhere.
Okay, it&#39;s a PTM merchant ID. Okay,
worry not I will going to blur it. Uh
it&#39;s really important thing to blur and
upst URL. Okay, it&#39;s my upst URL. Uh we
will use the upst here and also the
currency key API. Okay. So, uh we also
need this. But now uh if you think we I
have uh m I have maintained if you are
thinking how you will know the all the
key all the variables here. So worry not
I have maintained env.ample file. So you
will get the example of all the env
variables which we needed in our
project. Also there is env you can refer
this. Okay. We have two options. So you
can refer from anywhere but I will
recommend you to refer from here because
these two variable is not exist in NVTS.
Okay. Because not required. Okay. So now
if you try to import this now this will
going to import here. Okay. So this will
return two thing. If you hover here it&#39;s
a IB. This will return IV and this will
return encrypted keys. Okay. So now it&#39;s
time to save our whole data in database.
So just we need to await here. Okay.
Okay. So await and we will import our
import our DB from our somewhere this
database. Yeah, you can see it&#39;s a lib
database and yeah we need to insert.
Okay. Okay. My system is slow when uh
when I will buy the MacBook then it
feels good to me. But for now I have no
money for the buying MacBook. So I am
going with I am accepting this. So uh
okay. So it&#39;s a provider.
Okay. So provider I think this provider
schema. Yeah it&#39;s valid. And now here we
need to pass the values. Okay. So, ues
values and this one and here we need to
pass the whole values. Okay. Okay. To
save the time I am going to spread this.
Okay. So, okay. It&#39;s throwing an error
and
Okay. I don&#39;t know the reason of the
error. I really really really really
don&#39;t know the reason of the error. Let
me hover here. Okay. Overload. Some kind
of overload is there.
Okay. And now our error is solved. Okay.
The error is also already in user and
then swing us possibly null. Okay. But
in our case we are implemented the
checks. If user null null this will
going to not route here. So that&#39;s why
we will add exclamation mark here. Now
to tell typescript this will always be
there. Okay. of values we are spreading
the body. Okay. So you can see the body
contain API key also. If you are
thinking the API key will there is non-
encrypted API key this will also save
here. No we are overwriting the API key
from the encrypted one. Okay. And also
we are saving the IB and also we are
saving the API URL and created at okay
and also the user ID which users created
this one. Okay. And if you want to know
about the schema just control click and
you are able to see all the schema which
we have required here. Okay. So now we
have saved. Okay. So now we have saved
our schema and now it&#39;s time to return
the function. You can see uh I&#39;m just
returning C.JSON is success truth and
name the provider added. And you can uh
if you want you can just rename this to
code. Okay. Because I have seen the
better oath response type. Betteroth
uses this kind of thing as a code and
also and they added a name here and
maybe like this. Okay. So, uh better use
better handles API response like this.
If you want to handle like this, then
you need to change our API response
interface. Okay. And then you are good
to go. But I&#39;m I stick with this one. Uh
from the next project, I will use that
kind of thing which I have already shown
here. But for now, I am stick with this.
Okay. Credit also come from our utils.
You can see it&#39;s coming from the utils.
And now this route. Okay. The
configuration for the post route is
done. Okay. Now if we hit this endpoint,
this will create a user first. I mean
create a provider. First it will encrypt
and then it will create. Okay. So now
collapse this. Now it&#39;s time to create
another routes. Okay. So create another
route. Just add. Okay. Add provider
route. This one. And it&#39;s a patch route.
So it&#39;s a patch. And there it&#39;s also
forwardless because we have handled all
the thing. Okay. So here uh we need uh
we need to handle this dynamically. So
here we will pass the provider and id.
Okay. If I have you have remember we was
passing the provider ID like example 11
which I have shown which I have already
shown you. Okay. So the suggestion is
almost correct. So I&#39;m going with the
suggestion. Okay. And this one. Okay.
Okay. Okay. I think this suggestion is
also correct. Let me close the function
here. Okay. Because some cases is may
write wrong thing. Okay. There is a
error. I don&#39;t know the reason of error.
Not a problem. Copilot fix. Okay. This
will fix the error. And now you can see
it&#39;s a provider ID dynamically. Okay.
Dynamic UI and JSON. It&#39;s JSON add
provider schema and C and the body from
JSON. You can see the everything is
correct. And user. Okay. What is doing?
What is what? What is going on? Encrypt.
Encrypt API key. What is okay? I think
it&#39;s writing the same thing. Okay. Okay.
Okay, it&#39;s generated same thing. I don&#39;t
want this. So, let me close this. Okay.
Okay. Let me close this. I just want
Okay, this error is fixed now. And now
the user which we have already done in
there. Okay. So, now it&#39;s correct. Okay.
And now this suggestion is correct.
Okay. So, encrypt key because it&#39;s
editing. Okay. Because user edited API
key. There is highly highly highly
possibility user edit the API key. If
user not addit the API key then here
this uh because when front end when
front end you can see we have stored the
uh API key uh API key encrypted in datab
encrypted API key database but let&#39;s
suppose user click this a user try to
edit okay now if user try to again edit
this then uh this non- enrypted uh API
key will going to send on database I
mean going to send on our server so it&#39;s
our duty to again reenrypt this API key
and resave this. Okay, it&#39;s our job.
Okay, but if you don&#39;t uh uh if you
don&#39;t pass the API key from here, this
will not going to make any problem. But
if you are passing the API key from the
front end or also the decrypted API key,
then it&#39;s your job to encrypt API key uh
whatever user change API key or not.
Okay, it&#39;s not depend on the user
action, it&#39;s depend on the your
architecture. Okay. So it&#39;s your
architecture flow fault if you just
leave ID as it is. So we need to encrypt
that again here. Okay. Because in the
body we have API key and API key is in
non- enrypted form. So we need to
encrypt this again. Okay. So now this
sgestion is correct. I&#39;m going with the
this suggestion and also here we need to
update our provider schema. You can see
update body API key IB URL the whole
thing is almost correct. and also the
provider ID and uh this is not correct
but worry not this is almost correct
okay so you can see it&#39;s successful
provider update provider s result null
created okay it&#39;s not created it&#39;s uh
it&#39;s I think okay so here we will write
not created we haven&#39;t created new thing
that&#39;s why we will return only 200 the
action is done successfully okay okay
it&#39;s not from I don&#39;t want this from jaw
I want from this from our utils Okay.
Okay. I don&#39;t know when I have much.
Okay. So, this one is done. But but but
the best thing best thing is to Okay. Uh
there is one more problem. If we hover
here, uh I need to show you one more
error. Okay. Uh equal equal equal equal.
Okay. Yeah. Uh the equal is not coming
from dil because we have no drizzle. Uh
we have but one thing. If we just uh
duplicate this and uh remove this schema
from here. try to import drizzle. Okay,
so DEL drizzle and here you will find
equal to. Okay. So this will going to
solve our problem and there is equal to
and now if the if equal to error will
fall then we will get the error here
because if you hover here the type of
this is you can see the type of okay I
think I&#39;m not able to see the type. Okay
I&#39;m not able to see the type but the
type of ID is number but and the but the
type of params is string. So we need to
convert this from string to number.
Okay. And there is a error and I think
it&#39;s not loaded. Okay. I got the error.
uh this error is due to the type
mismatch because this is the number and
this is so we need to first convert this
we need to first convert it&#39;s a provider
ID so we are getting the provider ID and
I am
and I am uh and I&#39;m converting the
string to the number so I will just pass
there to provider ID okay uh if I pass
the provider ID now our error will going
to solve and now it&#39;s okay provider
updated okay so our patch route is also
done. So this this route was for
editing. So this is also done. Now we
need for getting the all all provider
and for deleting the provider. So we
need two more routes here. Okay. So now
just add again add provider. By the way,
if you want to create a chain, you can
create a chain like this. So you can say
the delete, get anything. But I don&#39;t
like this chaining here. So I&#39;m going to
avoid this. So provider. Okay. Provider.
Why? Why my system is too much slow? I
don&#39;t know why when I able to get the
MacBook. Okay.
And forceless and this one and now it&#39;s
a C here. Okay. So as synchronous
function so as synchronous C and this
and it&#39;s okay. And now what now we need
to do. Okay. So we just need to write
the query. Oh here is query. It&#39;s a
provider await db query provider schema.
So schema prov provider schema and there
is a thing. Okay. Okay. Okay. Okay.
Okay. Okay. Okay. So there is a columns
and columns. In the columns we can uh
tell uh superbase you can say superbase
what we want. We want only ID, we want
only name and we want only URL. As you
have already seen uh which I am
displaying on URL. You can see name URL
and this is just a dummy dummy. There is
no key. Okay. If you just click on this
I button then they have access to the
key. Okay. So you can see we I am also
not passing the key here. Provider
schema. By the way, this provider schema
is call back. If you want, you can just
write a provider like this. You can see
yeah, this provider. Okay, this is also
valid. Okay, you do not need to pass the
same name here because in the callbacks
the there is access of this provider.
So, it&#39;s not a problem. You can write
here just like this. Okay, so control
alt f. Okay, so now by the way, I am
always clicking the controls because I
have configured eslint in my company&#39;s
project. Okay. So that&#39;s why in that
project I am using eslint to format the
code and in this code I haven&#39;t
configured the eslint that&#39;s why I am
using the prettier to format this just
control shift and f okay so that&#39;s why
it&#39;s really a a thing that I am always
doing control s and control alt f this
is my problematic thing okay so not a
problem okay so here let me return this
from here and there and here yeah you
can see now I I&#39;m just returning this
true provider fetch and fetch
successfully and in result provider okay
so now it&#39;s okay now so we have done
with our get route by the way in get
route we have error the error uh get is
doesn&#39;t okay I got the problem because I
have a provider schema okay I was
forgotten I we need to use this okay so
just replace this and now it&#39;s okay and
now it&#39;s okay to do and now just
collapse this so we have the uh route
for getting all the providers. Okay.
Okay. So now it&#39;s time to create a route
for deleting the providers. Okay. Uh but
before the but before deleting okay uh
we need to create a route in which we
are able to get this one. You can see
when we click on this then what we want?
We want uh to uh unencrypted key. Okay.
I mean uh original key not encrypted
version. So that&#39;s why we need to create
one more route for this functionality
and that is a for/ key and the id. Okay.
So now here and there and now just add
property and not property not provider
route and get it&#39;s also a get route
because dynamic thing we will handle in
in the
params. Okay. So here forward slash
forward slash key forward slash and
there what we need to pass okay okay
okay okay okay okay
and yeah it&#39;s forward/ and here I need
to pass provider ID this one this is
correct and just add also one
calibrations here okay so now here in
the provider ID it&#39;s a string so we need
to convert in the numbers okay so now
here you can see okay so we have user so
we do not need user here because it&#39;s
admin admin route. So admin has access
to all the things. Okay. So there is a
provider you can see it&#39;s a provider
schema first. Okay. Okay. The provider
schema ID. Okay. Provider schema columns
API key and IV to true. It&#39;s almost
correct. We just need to uh uh do
something. You can see this this is
correct. Okay. This is correct version.
If you want to go with this, you can do
but and also you have access to uh write
a call back function here. So you can
also write a call back function here
just like this.
Okay. Here here the provider
provider
and there you can write this one and you
can just do this. Okay. So you have two
options. Okay. Uh so you can do like
this and you can do like that previous.
Okay.
Uh which one I like? So I like this kind
of syntax. Okay. uh because it&#39;s it&#39;s
really a good thing for me and I like
this one because for this one I do not
need to import this provider schema for
this purpose. So this will going to work
as expected. If you hover here and this
will load and you will get pure type
safety here a true type safety I can
say. Okay. So now let try let me try to
format it. I don&#39;t know why why it&#39;s not
formatting but let me add a bracket here
because if we add the bracket here this
will avoid the confusion. This will
truly say I am at function. Okay. So
it&#39;s good to API key and IV here but I
need ID also ID. So mark it true.
Okay. And here API key URL. Okay. So I
also want a API URL. Okay. So mark this
true. And also I name IV. So yeah it&#39;s
already have there. Okay. And also uh
true. Okay. Name true. Uh I need these
uh five information. Okay. Okay. So if
not provider, okay, if provider is not
exist, then what we need to do? You can
see C do.json return provider not found
provider not for null and 404. It&#39;s
really okay. Okay. And it&#39;s really okay
thing. But here is a problem. I just
want to return okay. The reason because
if you return 404
uh
Exio is going to throw error. Okay. So I
don&#39;t want any error in uh front end
because in some cases uh by the way here
you can see it&#39;s a 404 error. I don&#39;t
want a 404 error. I just want to add
okay here. Okay. Because I don&#39;t want to
throw error in my case. Okay. Uh but if
you want to throw error you can throw
error because XS XOS will going to throw
error for this purpose. Okay. So this is
really a problematic but uh it&#39;s really
there uh because uh provider if we have
provider ID then is highly highly
chances provider exist here. So it&#39;s
good to add server error here but I am
not doing that server error. I&#39;m just
writing this provider not found. I know
it&#39;s misleading information but I think
it&#39;s fine for me because uh I have built
that in such a way. So I think it&#39;s good
for me. And now here uh now it&#39;s time to
start our decryptting. Okay. So
decrypting our data. So now here you can
see it&#39;s a decrypted API key. Y there is
encrypt but I don&#39;t know it&#39;s decrypted
API key. So then why it&#39;s using the
encrypt if this there okay so const
const okay so I&#39;m going to name is open
API key okay
open API key equals to decrypt because
in all decrypt you can see provider API
key yeah it&#39;s good I need to pass the
provider API key and also I need to pass
the IV yeah it&#39;s good and also I want to
pass the my server secret okay which I
have used to decrypt encrypt I mean so
it&#39;s okay so now we have encrypted our
data so now you can see uh we need to
customize our result so first I am going
to build our result so con su l result
equals to okay so here is a provider and
the all the provider information and
this one but if you want you can
customize like this but I just want to
write whole thing according to me I am
not going to uh spread okay So if you
want to spread yeah you can do okay so
ID provider ID key and this and this
okay so now it&#39;s okay and now it&#39;s time
to return and there is error I really
don&#39;t know the reason of the error but
not a problem I will provide I will okay
it&#39;s solved okay
uh if not solved
okay provider fetch provide success
result and result it&#39;s okay so now we
have done with routes okay you can see
AI makes our life really really really
easy I will not going going to take our
job. Yeah, I will just help us to write
a clean and fast code. Okay, not more
than that. Yeah, I not going to take job
of job of anybody.
Okay, so now here
it&#39;s a get and we have two get route and
one post and patch patch route and now
also one we want a delete route. Okay,
so here uh this one the route dot
delete. Okay, you can say delete
provider ID as synchronous function
provider ID. It&#39;s it&#39;s correct. It&#39;s
almost correct. So, let me accept this
change. Okay, so here I just want to add
this curly braces and circle to avoid
the errors. Okay, so I think it&#39;s okay.
Yeah, I think it&#39;s okay. It&#39;s working.
Okay, so here you can see it&#39;s await DV
delete provider schema where
uh EQ provider schema is provide. Okay,
it&#39;s correct. Okay, it&#39;s the thing which
I have required. Okay, so yeah, you can
see the provider deleted. Provider
deleted successfully null and okay, so
it&#39;s it&#39;s great and it works is and it&#39;s
uh thing that I want. But here you can
see uh I always like to use call back
here. So uh let me remove the call back.
Okay. So okay,
I don&#39;t know in this case we will get
call back or not. So I&#39;m not going to
change this because I&#39;m not sure about
this from here because I am only sure in
the this uh this method and not this
method and
okay I am only see about the call back
in this method. Okay and not in this SQL
query builder method. So if you want you
can try but I&#39;m not going to try that
because it&#39;s not needed and if you use
anything it&#39;s good. Okay. So now I think
uh we have done with our all route. Now
it&#39;s time to test our app. Okay. So just
collapse this. Everything I think
everything looks fine to me. Okay. So
done. Hit Ctrl C. Okay. So if you want
you can just run dev here. But I want
this on root. Okay. Okay. So now our
next server is ready to use. Let me open
this on port 3000. Okay. So now we will
ready in port 3,000 in some time. Okay.
So you can see I am getting the error
here. It&#39;s five time because it&#39;s a
react query. The error is due to the
Postgress database. You can see the
internal server something went wrong.
It&#39;s a postgress error. Local security
error port and reason I don&#39;t know.
Okay. I don&#39;t know. Let me check
superbase if I run migrations or not. I
need to check. Okay. So in the superbase
project dashboard. Okay.
Uh it&#39;s my project.
SMM yeah SMM guru
I think I don&#39;t know why there is nano
the meaning of nano unlock more
compatibility I don&#39;t want
okay I got the problem because we
haven&#39;t migrated our database yet okay
so first now we need to migrate our
database because tables are not exist
yet here that&#39;s why we were we were
getting the error okay so if you come
here uh let me explore Okay. So let me
come on the root package JSON. Uh
package JSON JSON. Uh let me see I have
added commands or not. I think I was
added the commands. Okay. So migration
commands. Okay. I haven&#39;t added the
migration commands yet. So I think I
need to add migration commands here.
Okay. So let me come here in the
database. Uh go to the database. In the
database you will find this not results.
We do not need this but let me close it.
Okay. So here I go to the package JSON.
Uh here we need Okay. So you can see we
have a scripts. Okay. In the package
JSON uh I am on. Okay. Why I opened
this? I need the package JSON of
database. Okay. So this one. Okay. In
the this one here you will find we have
the scripts. This one, this one, this
one and this one. But uh in our case I
only need the scripts three. These three
script. Okay. So, let me copy this
script and create this script on uh my
uh here. Okay. Okay. By by the way, this
will not going to work. So, we need to
write a working code. Okay. So, here
just copy this. Okay. Copy this part and
write that part here. Okay. Write that
copy part here. And it&#39;s uh it&#39;s not a
start command, it&#39;s DV gen. Okay. We
need to run DV gen command. Okay. So,
write the DV gen here. And also it&#39;s not
a front end, it&#39;s a it&#39;s a database. So
data base. Okay. So this one and now
okay. And now copy the whole thing.
Okay. So copy and paste here.
And here uh just write mis it&#39;s a
migation. Okay. And now uh again paste
here. And now it&#39;s not a migration. It&#39;s
a studio. Okay. So this one. So now have
we have written our all required
commands here and now let me check uh
the database migrations file you can see
okay so there is only one migration as
we expected okay so now it&#39;s time to run
okay uh there is our running server so
I&#39;m not going to interrupt that okay so
here in there uh first we want to
generate so pnpm uh gen on root I&#39;m
going to do this on root gen and no it&#39;s
a dv gen so dv
gen. Okay. This will generate all the
all the migrations. Okay. Okay. Okay.
So, there is a error. Okay. So, I think
the error is due to the provider DEL
config JS. The version of DELK newer.
Okay. The version of DEL is required
newer version of DEL OM. Okay. So, uh
the error is due to the I am using the
different different versions of DEL kit
and DEL ORM. So just uh we need to
upgrade our digital OM and result kit.
Okay. So then maybe this will solve the
error. Okay. So here just cls and now go
to the CD package. Okay. So package in
the package we need to go on database.
Okay. So now we are on database. Let&#39;s
try to update PNPM. I don&#39;t know how to
update dev dependency but we need to
check. Okay. So PNPM update
update. Okay. So just here DEL kit.
Okay. action will make it out of date.
Okay. So I have done and now I am able
to see there is nothing changed. Okay.
The version is same but this if this not
changed then I need to check it
manually. Okay. The latest version of
kit and OM. Okay. Uh let me try again to
for this OM maybe OM below. It&#39;s a 43.1.
Okay. By the way I think it&#39;s upgraded.
I wasn&#39;t remember the which version I
was used previously but I think this is
the latest version. Uh I don&#39;t know.
Okay. So now you if you want you can run
the migration command from this label.
So I&#39;m trying to uh run the migration
command from this I mean this generation
command from this level. So let&#39;s wait
and check. Okay. So now it&#39;s upgraded
and now we are able to generate. Now if
you come on to the migration now you can
see there is one new file. Okay. So now
it&#39;s time to pull. H it&#39;s time to
migrate. Okay. So just run MIG. This
will migrate our data to our database.
Okay. Okay. It&#39;s just warning. I was
worried why. Okay. This migration
already exist escaping. Okay. I think
it&#39;s okay. Now let&#39;s try to check on
here. Okay. So now I think we have all
required here thing here. So now it&#39;s
done. Okay. So now I am on dashboard
because now I have signed in and now I
need to uh go to the user and I need to
override the permission. Okay. So RS is
RL is disabled. It&#39;s the def and and and
there is a user. So uh we need to
specify the role called admin.
Okay. So admin. Now it&#39;s admin. Now we
need to reload this first. Okay. So now
it&#39;s reloaded. Now try to access the
admin panel. Okay.
and provider.
So now uh uh so now you can see uh our
the provider page is now start working.
Now it&#39;s time to test. Okay. So just hit
create. Okay. And let&#39;s just try to
create a test one. Okay. So it&#39;s a test
and the AP end point. Let me use this.
And for this five I will I will going to
use this. Okay. Let&#39;s try to add maybe
maybe I am hoping everything for fine.
Okay. So now it&#39;s good. It&#39;s added and
also in uh shown on display. Okay. It&#39;s
fine. Fine. Okay. Now let&#39;s see. Okay.
Yeah. This is the key. Okay. Now let&#39;s
see in the database uh in superbase. So
you can see there is the providers
schema.
Here we have one. You can see the API
key in encrypted form. Okay. So it&#39;s
good and it&#39;s good and it&#39;s also looks
good. We have achieved our desired
feature. Okay. So now let&#39;s try to add
it. Okay. So just it&#39;s loading test one.
Uh let&#39;s make it V3 for now and just
remove zero and just uh re okay. So now
it&#39;s updated and now it&#39;s updated on on
UI in real time. Okay. It&#39;s fine. Fine.
Fine. Okay. So now let&#39;s again try to
hit edit. Okay. So we have the older
one. The reason is because it isn&#39;t
loaded. So we need to reload it to to
update this. Okay.
Okay. Okay. So if slow reloads. Yeah.
Now we can see this working. Okay. And
now this.
Okay. So this is also working. And if we
hit delete and let&#39;s delete.
Okay. So this also deleted. And let&#39;s
see on the database what&#39;s happen on
database. Okay. Yeah. It&#39;s also deleted.
Okay. So our app is uh gain the desired
feature. Okay. So now it&#39;s time to
create all the category part. Okay.
Okay, currently we have no category
page. So let&#39;s write. Okay, I&#39;m not
going to create UI. I will explain
everything on UI. I will only focus on
the back end. Okay, so creating UI is
just a time waste. Okay, not more than
that time based. Okay. Okay. So here in
the admin just come here in this admin.
Okay. So create a file name is KF G O R
Y category. Okay. Let me see check the
spelling. Yeah, it&#39;s spelling is
correct. Forward/ page dot
tsx. Okay. So this one we need. Okay. So
we have created. Now let me close
others. Okay. Because I don&#39;t want the
unrequired things. So here let&#39;s create
a folder dash components
components. Okay. So this is the
components folder. And now here it is
time to create our page. Okay. To create
our page yeah you know we will copy and
paste because I am not going to create
the UI part. Okay. In the front end if
you want you can go in the apps. Okay.
In the apps go to the admin. Okay. In
the admin you will again need to go to
the admin and in the provider here you
can say there is a provider. Okay. Oh
sorry we want category. Okay. So here
the page.tsx. Okay. So just copy this
page.tsx from here. Okay. So now this
one and let&#39;s paste it here. Okay. And
now we will get the error. This it&#39;s
really a no problem. Uh we need to open
the components. Okay. So here is a
component add category and category list
same as the provider. You can see the
provider also has the same thing. Okay.
If I open add and list and this is the
whole page. Okay. Uh our schema our I
mean I mean to say our logic of the
front end is same for also for category
also for the users and also for the
services. Okay. The logics are same just
we are reading the back end and just we
are getting the data from the back end.
Okay. But my purpose to just teach you
how things work under the hood, how
their servers are built, how to uh so on
the UI. Okay, in our case uh UI haven&#39;t
anything. Okay, I have also generated
all the UI all the UI you are seeing on
the display generated by the AI perexity
AI. Okay, so I have used Pexity AI to
this purpose. Okay, because uh you need
to leverage the AI and if you uh you do
not need to code yourself UI, okay, task
uh UI part, okay, of the back end back
end need logics and maybe AI is not able
to do that. Okay, because in back end
view need maybe uh uh BMQ for the Q
system. Maybe in some cases you need
Kafka. Kafka is really advancing things.
Okay, uh many developers avoid Kafka.
Okay, so BMQ is fine with radius and
some radius things. Okay. Uh rate
limiting security these kind of thing we
required. Okay. I am planning to build a
a dedicated videos. Okay. For that
things but the problem is uh the my
views. Okay. My views I really really
open here open uh views are only going
to the videos which is longer than 10
hour 11 hour. Okay. So uh the videos my
the views are on that kind of video. I
have built also the small videos like 43
minutes that kind of video but they had
touch only three 300 400 views. Okay,
this is the problem and I know this is
the this is the problem of this
category. Okay, I know this problem.
Every developers every you developers of
this I mean I mean to say every YouTuber
in this fields face the same problem. If
you see the Jan Marshall, so Jan
Marshall is also building the small
videos uh 5 to 10 minute videos and 25
minute video. You can see uh their 25
minute video has almost 2.5k 3k views.
Okay. But their full project like 1 hour
11 hour video have highly high videos
almost 25k 30k views. Okay. So I noticed
this. Okay. So this problem in this
category okay I know uh but I haven&#39;t
had time to build a full project. Okay.
So I am also just pushing myself to
build that kind of source videos. Okay.
Uh like 43 minute or something for
security related thing. Okay. I am
pushing myself. I&#39;m getting my uh I am
just extracting my time from the
schedule to do that. But my schedule is
really too tight. Okay. I have no time.
I am working 9 to5 uh to my for my
office work. Okay. Uh yeah I am working
from home but let&#39;s take my 9 to5 maybe
sometime I work as to 6. Okay. After the
six, I have 1 hour. Okay. After I mean
uh after 6 hour at 6 p.m. I I go to gym.
I I go to gym and 9:00 p.m. I have
written from gym. Okay. After that uh
after that I will just dinner. I eat
dinner and after that I I&#39;m recording
the video maybe from the 10 p.m. Okay.
10 to 12 p.m. Okay. So these times I
have Okay. So I have I have really a
tight schedule but it&#39;s uh I think you
can say
just I want to do on YouTube just I want
to contribute myself the the reason is
this I am doing this okay there is
nothing more than that okay I am also
happy with my work okay my job okay my
job is also paying me enough uh to just
uh leave my life but no I just want to
work I just want to put something on
YouTube and just provide do something
different. Okay. Uh I&#39;m also uh I&#39;m also
thinking about I want to build something
different from the YouTube community.
Okay. Mainly the Indian YouTube
community. Okay. Because Indian YouTube
community only stick with the e-commerce
website. Okay. Everyone you can say the
e-commerce website. Uh let&#39;s build
e-commerce website. Let&#39;s build
e-commerce website. E-commerce.
E-commerce. I am really tired from the
e-commerce website. So that is the
reason of uh creating my channel
fullstack mastery inspired by the
JavaScript masters YouTube channel.
Okay. Uh I am open to say that yeah it&#39;s
inspired name you can say. Yeah you can
say copied. Uh it&#39;s on you want to say
anything you can say. Okay I have okay
not a problem to me. Okay. So uh no back
to the code and yeah uh add category and
category list. Okay. So just you can
copy the code from there and just paste.
Okay. These are just a UI which is
generated by the AI. Uh I haven&#39;t
generated this. Okay. And also generated
by the AI. Everything is generated by
the AI. Okay. And you can see we have
some components there. Okay. So add
services column, admin, navling
verification, category column. You can
say there&#39;s a category column. So here
this is this is the main category column
which we need to also add and also the
services column which we want to add.
Okay. If you want you can come here and
explore. I am highly recommend you to
explore. Okay. So if you are wondering
about this what the access key or the
rate and name not a problem. First time
I was also wondered about this. So it&#39;s
just a satian table. Okay. Uh let me
show you.
I just search for the data table. Okay.
Satian has two table. We want this data
table. Okay. So it&#39;s a data table. You
can see there&#39;s a data table and and and
let me show. Yeah, you can see this.
Okay. So, if you want you can read the
whole docs. Okay. If you only read the
docs, this is not enough. Uh you can
spin up a react v react project side by
side and just implement the guide. Okay.
As the sid scen tells you. Okay. So, you
can implement and also sen uses uh react
uh tank stack table and the down you can
say somewhere uh this will return this
is written here. Okay. Yeah, you can say
tank stack react table. Okay, it&#39;s a
dependency for that. By the way, tank
stack table is really a hard thing.
Okay, I have put my two days but haven&#39;t
got it anything from their docs really a
complex thing. Uh for me it&#39;s a complex
uh but maybe in some cases for you it&#39;s
not a complex you can see. Yeah, this
one you can if you want. Okay, why it&#39;s
visualizer
is I open the wrong doc one headless.
Okay, it&#39;s correct. Okay. So you can
just read it and also uh this is the
dependency of satsenian table this
table. Okay. So you can read and I the
table I am using which is from the
origin UI. Okay. Origin UI just
extraction of satsenian table. I mean
satian. Okay. So you will find the table
here. If you don&#39;t find just search it
here. So table. Okay. Here table. And I
which table the table I am using from
here. you can say uh this uh the last
one. Okay. So I am using this table.
Okay.
So now it&#39;s just time to create a
component folder also maybe there. Let
me see where I was created.
Okay. So components you can see the
components here. Okay. So here the
components and let&#39;s create a folder
called components here.
Okay. And I have recommend you to create
the files and paste all the files from
the uh GitHub repo in the this level.
Okay.
So I have copied my existing project.
Okay. So just paste there.
Okay. So now we have all the columns.
You can see the columns are same as
shown in the uh okay not there as shown
in the uh
yeah stats in stocks. You can say it&#39;s a
filter function. The filter function is
there and this filter function is coming
from I have get this filter function
from the origin UI. Okay, because I
really don&#39;t know how to write strang
table. Okay, so that&#39;s why I haven&#39;t uh
interrupt multiple thing here. Okay, so
it&#39;s really I want to something I just I
want to tell you. Okay, so there is a
dot dot forward/admin. Okay, add
category.
Okay, I know this is not a okay
category. Currently we haven&#39;t created
the charact category thing that&#39;s why
this is not working but worry not we
will create okay this one okay
components category components okay yeah
uh we are just here to create that okay
so also you can you go and uh category
and copy these two things okay okay so
now we have created this file okay which
is uh which this folder is looking I
mean this is looking for and there&#39;s a t
category from the database okay Uh this
is not getting that from database. Yeah,
it&#39;s really do uh it&#39;s the thing which
not getting uh I haven&#39;t remember. Okay,
maybe I will. Yeah, schema type maybe
there. Yeah, it&#39;s fine. No, it&#39;s good.
And now everything is working as
expected. And let&#39;s see this if there is
any error. Okay, so use category use
category hook. Okay. So this is there is
a use category hook and this hook we
need to create and this hook is not more
than a just a query. Okay. Uh this is
just a requesting get request from the
server. Okay. And not more than that. I
have you created a hook here because we
need this query in multiple places. Okay
that&#39;s why I have used the hook here.
But and why I used why I mark this as a
use okay as a hook. The reason is
because we are using this function in
server side or I mean client side. Okay.
So just just uh this is the reason that
I build a hook. If I will uh if I was
used this in the server side then just I
will maybe I will create a server action
for this purpose. But we are using this
in front end that&#39;s why I have created a
hook. It&#39;s uh by the way if you are
using the server action who are using
the hook these just are a function these
are just a fast nameable name and not
more than a fable name okay
and now it&#39;s time to create this in the
hooks okay so just copy this name okay
and go to the hooks folder maybe here
somewhere you will find okay so there is
a hook and now create a file okay just
paste dot jsx okay so there is a hook
okay We need just TS. I think GS is
enough for your use case. If this will
throw any error or we will return any JS
function here then. Okay. Okay. Okay.
It&#39;s TS for TS. Uh TypeScript project
not JS. I I hate JavaScript. Okay. So
now there uh just uh find out the hook
from here. Yeah, there is a hook. Okay.
So we have used category hook and also
we have solve a hook for services and I
think we have created the hook for the
provider. uh if you haven&#39;t believe on
my word you can just see these are just
a get request okay I have created a
function you can say it&#39;s just a
function not more than a function so
it&#39;s just a function uh which a
fashionable with a fashionable name hook
okay so it&#39;s just doing a query using
the use query hook okay it&#39;s just a
displaying error which we have created
for a formatting formatted correct error
okay so just copy this from here and now
just come here and just paste this here
okay just tell me uh writing this code
line by line is just a time waste
according to me and what you are
thinking just tell me in the comment
okay according to me it&#39;s just a time
waste for a full stack project of size
almost 10 to 12 hour videos okay so now
this is done okay uh I think uh I think
we also need to create this use server
okay right now okay so you can see it&#39;s
a server thing okay I think I am using
the currency thing here Okay.
So this currency is coming coming from
the just. Okay. This is the thing that I
want to write. Okay. I&#39;m going to write
this line by line. Okay. So do not copy
paste this. I will write you because I
want to explain you something because I
have used the juice stand here. Okay.
Yeah. You can say just stand. Okay. So I
will explain you how to work with stand.
How to code with G stand. Okay. So I
will teach you the basics of just stand
also in this project. Okay. My purpose
to just teach you. My purpose is not to
deliver you the whole bulk of content.
No, my purpose is to teach you which is
the important thing and not okay not
building the UI only not building a UI.
My purpose is to give you the full
working project for your portfolio.
Okay. So now we have done here. Okay.
Okay. Okay. So now it&#39;s time to now if I
look at it here. Okay. Okay. In there uh
in the category. So now we have the
whole thing which we have required here
but we have also error. Okay. So okay.
So it&#39;s trying to get a schema. We know
the schema has on jaw. Okay. You will
not get this kind of error when you will
copy it because you will get my this
latest code. Okay. So then uh you will
not get the error. So but I am getting
the error because my uh the code is
oldest one. Okay. So schema type. Okay.
I think it&#39;s perfect. And yeah it&#39;s
perfect. And now let&#39;s see this one. Uh
is there is any error and the admin
admin admin I think there is no error.
We have solved this error. Okay.
Uh okay. Yeah this part is done from
here. And now let me also check this
from here. Okay. And there is error.
Okay. So here for this error just a
schema type this one. And use provider
ID from the juice stand. This is for the
services. Okay. For now just control A
and mark this as a comment. Okay. Uh we
will come on this pro uh this file later
because it&#39;s you just to stand states.
So I want to teach you. So I will code
this that line by line and I will
explain you everything how we will
working on this. Okay. So uh just I
ignore that for now and just come here.
It&#39;s okay. And and and and and
I think it&#39;s also okay. All right. It&#39;s
okay. On services column. Okay. Maybe
services column is not. Yeah, it&#39;s not
okay. Let me add the uh key J schema
type. Okay. So, this one after this our
services will Okay. Okay. It&#39;s okay. And
then this this from D value utils. It&#39;s
a it&#39;s a schema and D value. Okay. So,
we have two thing here. So, we will get
a schema from the J. Yeah, this one on
this thing. I don&#39;t know. Okay. It&#39;s
worked. Okay. then it work then work so
it&#39;s fine.
Okay. So now there is no error. Okay. So
now let&#39;s go on the
uh
there and now let&#39;s try to re reload.
There is a loading button. Okay. Don&#39;t
care about the UI because it&#39;s admin
panel. Okay. So in the admin panel there
are no much UI thing. Okay. There is no
I candy things. Okay. There are just a
working thing. Okay. I I I don&#39;t know
you have ever used the AWS or not. If
you go on AWS AWS UI is really a poor
thing. I have worked with AWSS and it&#39;s
really annoying thing. Okay. Okay. So
now it&#39;s time to create our the uh
routes. Okay. So to solve these errors.
Okay. So
now it&#39;s time to build the route. Okay.
So now uh come in the come on the
routes. Okay. So not there. Okay. In the
V1 routes and the admin. Okay. So, now
it&#39;s time to create the route. I think
now it&#39;s a category. Okay. Create a
folder. I mean it&#39;s a file k.
Yeah, this one k g o r y dot uh
route.ts.
Okay. I think this is okay. Just make it
category route. Okay. Uh I have make
this category routes in my older
project. That&#39;s just just uh just
because of that I am I will use the
categories here. Okay. uh not category
only. Okay. So now it&#39;s fine now and now
it&#39;s time to create the route. Okay. So
const. Okay. Category
categories route equals to new
huno.
Okay. And this one. And now let&#39;s import
the huno from the huno.
Yeah. It&#39;s imported. And now extend the
type. Okay. Uh this one. And sah huno.
Uh I have no idea. Oh no session. I
think this one. Yeah, this one is
correct. And now it&#39;s time to define our
route. But first export this. Okay. So
sometime AI session is really helpful.
And sometime it&#39;s annoying. You can see
this AI suggestion category this and
this this for the get route. I think
it&#39;s almost correct. Not much correct.
It&#39;s almost correct. So I will use it.
And let me remove this because it&#39;s not
correct. Okay. So con result.
Okay, result equal to await context
query. Okay, not this one. Uh AI is not
able to detect because we haven&#39;t any
code anything on this page. So that&#39;s
why it&#39;s a DV. We need to import the DV.
Okay, the database dot and the query uh
category is schema and yeah and but it&#39;s
but the name is not our category schema.
The name is our service schema. This one
this is the schema for our category of
services. Okay. So we find want to find
many. Okay. Because we want everything
everything from there. Okay. And here
nothing more than that. Okay. It&#39;s okay
because we want to fetch every category.
Okay. Because we are because we are
admin. So we do not need to apply any
filter here. Okay. So now there uh if
uh not just say if not. Okay. So if not
result the category not from categories
and it&#39;s 200. Okay. So for this I&#39;m
going to uh export I I&#39;m going to return
internal server error. Okay. Internal.
Okay. Yeah. I think I think I I have
forgotten one thing. Uh here I was used.
Okay. Okay. Uh I just want to change
that to internal server error. You can
say somewhere I was forgotted where
uh let me check here. Okay. So let me
see this uh not there
maybe there
yeah this one I have uh written as as
the okay but no I will return the
internal server error okay it&#39;s a
internal server error okay so it&#39;s good
idea uh because when I was build that
project okay uh when I was used this as
okay that time I haven&#39;t built I you can
say I wasn&#39;t built or you can say I
hadn&#39;t built I don&#39;t know the correct
correct uh sentence but I think it&#39;s you
have understood what I want to say uh
that time I wasn&#39;t uh build uh the that
display error function to format our
display and extract the information from
the server side so that&#39;s why I was used
okay here but for now uh I we have the
display error function uh that will uh
format the error so we will just return
the server error here okay so I think
it&#39;s okay now and now No. No. Okay. It&#39;s
done. It&#39;s done. And not done. Done.
Okay. So again come on the category
route. Close others. Okay. Uh the close
others. So now
this
[Music]
[Music]
[Music]
Heat. Heat.
[Music]
Heat. Heat.
Heat. Heat.
Heat.
[Music]
Heat.
[Music]
Heat. Hey, heat. Hey, heat.
[Music]
Heat. Heat.
[Music]
Hey,
[Music]
hey, hey.
[Music]
Heat. Heat.
[Music]
[Music]
ization is almost correct. So I&#39;m going
to use this and the number ID. Yeah,
it&#39;s also correct. Okay, it&#39;s also
correct. And but here we want to pass
our middleware. Okay. Okay. So a
middleware for our jaw. Okay. So this is
the middleware for our jaw. Currently we
haven&#39;t this. Okay. So just import and
maybe this will also going to import
automatically. Yeah, it&#39;s detected
automatically. Okay. So now it&#39;s done.
And now we want a body from here. So
const
const body equals to await. Yeah, we do
not need to await for this here. Request
valid JSON it&#39;s correct. Let&#39;s use this.
Okay, if you hover here. So okay never
uh why it&#39;s never it&#39;s JSON error
argument type JSON is not assignable to
never
okay I think let me check this valid
where it&#39;s come from uh from where okay
it&#39;s a uno jord validator it&#39;s it&#39;s
correct but why this is not correct
argument type JSON maybe uh let me try
to do yeah there is JSON yeah okay it&#39;s
worked I don&#39;t know previously Why this
would not work? But now it&#39;s worked.
Okay. And now here we just want to write
our query. Okay. Our query for updating
our data base. Okay. So just await here.
Okay. This update body update date.
Okay. It&#39;s correct. Let&#39;s use this.
Okay. There is nothing uh wrong. Okay.
So we want to import this. Okay. What I
have done here.
Okay.
Uh because this contain everything which
we required only the name. Okay. uh we
have only need to change the name. So we
have splits the body. It&#39;s good. It&#39;s
good. And we have to uh update our
updated. Okay. So EQ you know it&#39;s where
it&#39;s coming from. It&#39;s coming from the
drizzle. Okay. So now this done and now
here just we want to return to the front
end. Okay. So JSON true category updated
and result null. Okay. And it&#39;s fine.
Okay. So it&#39;s good. Just use this one.
And now there uh it&#39;s not from J it&#39;s
from YouTube. Maybe in your case the AI
will not work as expected and like me
because uh AI is trained on my data and
this is my the and this is my choice to
work and that&#39;s why I am working it&#39;s my
universal format on for working. Okay.
Um so maybe it&#39;s detected my universal
format that&#39;s why I&#39;m getting the uh
suggestions like I want and maybe you
will get suggestion that you want okay
so you just need to come I mean uh use
your suggestions okay maybe in your case
have different your use case is
different your coding style is different
different than me but if you are
learning from me I am following the all
the best pract practices so you have to
copy me yeah you can just copy me it&#39;s
not a problematic thing it&#39;s not a
scene. Okay. So, just copy me
because I&#39;m learning things constantly.
Okay. So, it&#39;s on me. Uh I want to I
want to give you the more things. Okay.
I want to give you the more thing and
more features and more uh more industry
grade experience. Okay. Just uh uh like
I I am gaining the experience from the
company where I am working and just I am
giving you that. Okay. I have learned
multiple thing from my job. uh but
everything is I&#39;m not able to put here
okay uh because I have time limitations
okay first I was plann to put full MQ
here to make a quick system a full retry
system if something is fail then our
system will able to automatically retry
it if the retry is fail then it will go
in a DQ and uh this that will notify us
okay that will notify us this this thing
is failed okay so you can uh check it
manually or you can update your data
manually many thing main thing I have I
plan to build but there is a time
limitation. Okay. So I am stuck with a
time limitation. Okay. So maybe but I am
trying to do my best. I&#39;m trying to put
my best as a YouTube industry in
standard right now. Okay. So I am
working on the uh YouTube standards and
the on YouTube you will find that this
kind of project and this kind of server
setup. So I am doing that. Okay. But but
but when I will get time when I will get
much time if I will not get a much time
then I will uh build a a small project
small just demonstrate you the bulmq Q
system how these things are work okay so
I think it&#39;s helpful for you and it&#39;s
it&#39;s a thing that my dream to teach you
everything which I have no okay so now
it&#39;s okay it&#39;s enough now it&#39;s time to
code okay so category route dot post.
Okay, by the way, by the way, by the
way, uh currently I am not able to teach
you the Bull MQ thing, okay? QP system,
but I will recommend you go to the Bull
MQ and read the dogs, okay? On YouTube,
you will not going to find much thing.
So, I will highly recommend you to read
their dogs, okay? Okay, read their dogs,
ask Ask Mr. Chad GPT, okay? Do anything
you want. Uh but read these dogs, okay?
Uh reading docs is really important
thing. No one going to teach you by
mouth, okay? You just need to go on
write read on docs. Okay, it&#39;s my
personal experience that&#39;s why I&#39;m
telling you. Okay, I have uh I have read
uh bulmq docs. I have read the multiple
things docu in my company experience.
Okay. I have read read kafka gs
documentations multiple things. Okay.
Okay. So I so that&#39;s why I will highly
recommend you to uh uh take your I mean
create a habit for reading docs. Okay.
It&#39;s really important in your career and
also uh work with others code. Okay, go
to their GitHub and download that code
and try to work with that. Try to
contribute in the opensource projects.
Okay, I am also planning to contribute
on opensource project and my aim is to
contribute in better oath but but but
I&#39;m not getting much time to do that but
when I will able to do that I will do
that. Okay, it&#39;s my dream to contribute
in open source.
Okay, so now it&#39;s a post. Okay, and I am
not I am just not like a typical Indian
uh YouTubers that&#39;s only that says uh
just go and contribute in uh read me do
read me and then you are a contributor
on open source. Okay, I&#39;m not a that
kind of person. I&#39;m not a that kind of
YouTuber. I am here to show you the real
thing. Okay. Okay. So now I think uh
it&#39;s enough and now just come here.
Okay. It&#39;s a valid JSON. It&#39;s correct.
Okay. Okay.
Category schema. And here we want a
user. Okay. Because user is updated.
Okay.
By the way, there is no need of putting
a user. Uh so I avoiding the user from
here because it&#39;s a admin route. So
there is uh admin has full permission to
do anything the admin want. So it&#39;s
insert. Okay, it&#39;s a post of insert. By
the way, putting user is not a bad idea.
So I think we need to put the user. So
con
user this get user. Okay, it&#39;s fine.
Okay. And now there is insert values and
I think it&#39;s almost correct. So the
values and the body which we are getting
from here. If I hover here, I have only
the name and it&#39;s valid. It&#39;s created at
updated and user ID. Maybe it&#39;s correct.
Uh okay. Okay. So it&#39;s maybe correct. I
don&#39;t know. Ah, it&#39;s correct. There is a
user ID. Okay. Accept thing. Same thing.
And if you want to know just here that
name, table name. Okay. This is not able
to detect table. And just open the whole
schema. Okay. ID, name, user ID and time
st. Okay. So it&#39;s fine. Okay. Is the
thing which we need. Okay. And now it&#39;s
time to return something on front end.
By the way, I have forgotten one thing.
Okay. To avoid duplicacy. uh uh in this
situation uh you you you can write
anything you can create a two category
with same name but in category we want
only one with the same name the to do
this there is one thing if you you want
to go in schema okay in the name and
it&#39;s not null and make it unique okay so
make it unique and now this one okay so
uh now our name is unique and uh there
is no chances uh of key to duplicacy
okay so the name is unique and now this
is fine by the way if you don&#39;t want to
add a unique here so you can just uh
okay so now uh here uh I was tell told
you uh there is one one more way it&#39;s uh
the previous code which I which I have
uh which I was written uh which I was
looking okay this the code I am looking
from my uh second monitor okay so you
can see uh in the previous code I was
checking uh the first I was finding the
category with the name okay which I have
we have given here uh with the name if
the category available then I was
returning the category already exist
null and okay so if you want to do this
you can do this but I was to I also told
you the alternate you can mark the name
as a unique then okay our database not
allowed to do that okay so there is same
both approach if you want you can do
anything and after that I am inserting
here okay so it&#39;s fine okay so now let&#39;s
Mark this to another display. Okay. So
now here and but if I if we change
anything in our schema then we need to
migrate it first. Okay. To migrate this
now let&#39;s come on here.
Okay.
So PNPM
uh DV okay not DI it&#39;s a DV uh okay
generate.
Okay. So this will generate migration.
And after this we need to migrate mig.
Okay.
Okay. So our migration is done. Now our
name in unique. And now after this you
are not able to create multiple name
categories with same name. So we have
done with post put and now I think it&#39;s
time to create delete route.
Yeah it&#39;s time to create our delete
route.
uh this one and now delete
okay so delete delete delete and
category ID delete okay the isolation is
correct as I want okay so now it&#39;s fine
here and now there by the way uh just
tell me one thing are you watching anime
or not I am fan of the attack on titan
solo leveling little bit a fan of JJK
Jujutsu Kaisen uh Juu Kaisen is awesome
thing uh but Uh but the father of the
Juju Kaisens Kaisens is uh JJ Attack on
Titan Demon Slayer or Solo Solo Learning
is awesome character development
character development of Sanjin was
really awesome in season one by the way
I like season one of Solo season 2 is I
don&#39;t like the season 2 because
in season 2 San Jinu was is too stronger
strong okay that&#39;s why I don&#39;t like the
Viru fight Yeah, the VU fight is really
a bad I I&#39;m not able to I have not no
word to say that but uh
I don&#39;t like the fight with AU. I was
like the fight with Iris in season one.
Okay. Tired fight is awesome. Okay.
Okay. So, and now the talk is enough.
Okay. I like to talk with you. And now
it&#39;s a delete category schema where uh
eq and service category id equals to our
provided id. I think it&#39;s correct. And
now let&#39;s try to return. Okay. So return
true category deleted successfully. And
okay. Okay. So it&#39;s okay. So now let me
accept this suggestion. And now it&#39;s
done. Okay. So now we have created our
all routes of category. Okay. Okay. So
now again try to reload it. And first
thing first we first need to create a
category called un uh categorized. Okay,
it&#39;s important to create a category
named un categorized because if we add a
services by default our all services go
in the uncatategorized. Okay, if the
services are uncatategorized that will
not going to display on front end uh to
the user. It&#39;s really important thing
you need to do this. Okay, because in
categorized version uh we haven&#39;t set
our the profit margin. Okay. So that&#39;s
why we need to mark this uh I mean we do
not need to show on front end. Okay. So
just create a
uncatategorize.
Okay. So let me come the n because I
don&#39;t know the spelling of the
categorize uncatategorize. So that&#39;s why
uh I need to copy the categorizate
spelling. So it&#39;s a services.
Okay. It&#39;s this is the reason I don&#39;t
like the nle. Okay, you can see uh the
this is not working as I expected. Okay,
because it&#39;s signed out. Okay, session
is over. The reason is this. And also
this is the one region I don&#39;t like the
uh nle because session duration is too
short. Okay.
Okay, it&#39;s in small. I was thought uh
this this is in capital. Okay. But but
but one thing if you add the
uncatategorized ones here then you are
not able to delete that category from
the UI part. Okay. If you want to delete
you want to you want to you need to
delete from the back end. Okay. Because
there is a special check for the
uncatategorize. Okay. Uncatategorize is
a default thing that&#39;s why we have the
error and and I don&#39;t know why we have
get this error. So let&#39;s see the reason
of the error. It&#39;s a network. And now
let&#39;s again hit this to get the reason
of the error. It&#39;s in pending 404 not
found. Okay, it&#39;s not found. Okay, I got
the reason. Okay, so reason is too
simple. Uh we need to go in the config
route here. Okay, so here we need to
mark that route. Okay, so here just mark
that route. Yeah, this one. And now just
import it. Okay. Okay, there. Okay, so
just import it. It&#39;s loading. And now
it&#39;s imported. And now now now this will
going to work as we want. And now if we
try to save it, this will work. Okay,
it&#39;s a 500 error. Now it&#39;s a server
error. Now I know there is something I
think maybe I need to reload it first
because I have changed this. Okay, there
is error in there. Okay, it&#39;s good. It&#39;s
good to see. I&#39;m not afraid of error and
I like the errors. Okay, because errors
give us chance to learn something. So
it&#39;s error and no return handler route s
next response and all the branches.
Okay, currently I don&#39;t know the region
of this error but now let me go to eat
dinner. Okay, so after the dinner I will
play this game. Okay, I have a warfare
frame. Okay, after that I will start
recording. Okay. So, I am recording this
video again. Okay. Because I have lost
my clip number 15. Okay. I don&#39;t know
how I lost but I lost my clip number 15.
Uh in the I have remember in the clip
number 14 uh uh we were which we was
faced a issue uh we are not returning a
next response. Okay. So that&#39;s the
reason uh I have recording this again.
Okay. Uh so you can see uh we uh maybe
uh in previous code which we have we
have coded you have seen in previous
clip uh we was forgot to return. Okay,
where I was forget to return, I haven&#39;t
remember because I haven&#39;t any idea
about that. Uh but uh you can check your
route in categories. Okay, so somewhere
uh you will forget it to return. Okay,
so you can check uh every return thing
you can see I have displaying here all
the returns the delete in the delete.
This is the this return in the post uh
this is the this return and in the patch
let me open the patch. Okay, so and the
patch there is this uh return. Okay, and
also the in the get. Okay, so there is
this return. Okay. So you can see uh
this is the return. Okay. So due to this
reason that error was occurred. Okay. So
if you put the written that error will
gone. Okay. So I have voice of the uh
clip number 15. So I have listened that
white and I I have come to a uh I think
I have uh uh noticed something. I have
display you uh something. Okay. So I am
going to Was that okay? I&#39;m going to
regretting that. Okay. So SM group front
end. Okay. So this one uh okay
okay I will not going to change the
password if you want to access the admin
panel there you can come here and access
but I will remove the provider API key
okay because I have added my money in
provider so not a problem that for me
okay if you come here okay so we need a
provider okay so it&#39;s a sales media and
this the API URL okay you can see the
API URL of every SMM panel are same okay
but their domain changes But their path
remains same. So every SMM panel it&#39;s a
it&#39;s a you can say it&#39;s a practice in
SMM panel panels. Okay. So you will find
the sales media API and V2. Okay. It API
V2 path is you will find in every SMM
panel. Okay. You can say this this is
their traditional you can say this is
their convention. Anything anything you
want to say you can say uh this is
there. Okay. So I am using the uh uh I
am using uh sales media as panel. Okay.
For my purpose. Okay. If you go to the
sales media you can say there is a sales
media.
By the way tell me my voice because now
I am recording this voice with my new
mono mic. Okay. Uh the previous uh
previous I mean all the clips which we
will get in this part are recorded with
a mobile microphone but this part is
recorded by my new mic. Okay. And also I
will record the intro with this mic. And
after this part I will record all my
videos with this mic. Okay. Okay. I
voice is really awesome. I have added a
bass. Okay. So I think voice is going to
good and uh let me open anything uh
anyone. Okay. Okay. So it&#39;s loaded. Now
go to the admin panel. Okay. So
somewhere you will find the developer
option. Okay. I haven&#39;t remember where
is the developer options and uh uh uh uh
no there is nothing admin option okay
maybe in the okay I know admin option is
there okay so let me go to the profile
here
okay so now you can see the developer
docs okay here the developer docs you
will find only the API key so you can
click on the API key this will generate
API key somewhere here okay so
everywhere is this this generate in a
alert dialog So okay so you can see the
API key is generated. So uh I want to I
want to remove the API key. So worry not
I will remove after the session. So not
a problem you will find the API key here
and okay they haven&#39;t assigned the API
API endpoint. So I have already told you
API endpoint for the every SMM panels or
stream. Okay. So they followed the
convention and if you don&#39;t want to use
the uh sales media you can use the cheap
panel. Okay. There&#39;s a cheap panel also
in the market. They have also a cheapest
services in market. So you can use them.
And there is also I know about the N1
panel. Okay. So N1 panel. So you can use
the n1 ppanel.com.
Okay. And also I know one more
wholesaler which is the just another
panel. So it&#39;s a just another panel. You
can use them. Okay. And if you uh follow
the fulfilled the 15 to 100 orders so
you can request them for custom price.
So you will get the custom cheapest
price than their service page. Okay. So
you then you will able to sell your uh
services in more uh in more price. Okay.
I mean you can say in more profit. Okay.
And also there is one famous website in
India which is myfame.in. Uh I I am sure
they are also doing the same thing. They
are also using the service provider to
provide the services. Okay. Uh so if you
want to you can just come here. I
provide pro by the if you are Indian.
Okay. And you want to you use UPI
gateway. Okay. Automatic UPI gateway. In
this project, we I haven&#39;t used the UPI
gate uh automatic UPI gateway. I have
used PTM manual payments. Okay. But if
you want to use you can use API gateway.
This one uh this is only one project.
You can say this is only one uh app I
have seen. Uh okay. Which provide you uh
which provide this kind of feature and
there is no one in market which provide
this kind of feature. If you want
automatic payment, you can come here and
choose choose this with their uh your
own merchant ID. Okay, this they will
not going to hold purchase. I mean they
will not going to hold your money
instantly. They will send to your PTM
merchant account which is you you will
provide your PTM merchant ID. I don&#39;t
know how they are doing. I haven&#39;t I
have tried I have researched how can I
can do but I don&#39;t know how they are
doing. uh maybe they have some
partnership with PTM show kind of thing.
uh but I don&#39;t know how they are doing
the thing and also they provide the web
hook for uh event listening the event
many thing many thing they provide but
they have pricing model you can use them
I I by the way I haven&#39;t sponsored by
them I have just research and find this
so I have shared to you and you uh if
you are a foreign uh foreign cl I mean
you can see for foreign from foreign not
from India so maybe you can not use vice
you can okay you can use voice because
these kind of projects okay this kind
this kind of project will not going to
approval from the stripe nor PayPal. No
one going to uh approve you. Okay. So
it&#39;s you going to use you need to use
this wise manual payment gateway bank
transfer. So you want to you need to use
that. Okay. And one thing you will get
which is the crypto. Okay. If you come
here they are also using the crypto
payment. Okay. So for this kind of
website you will get crypto payments
approvals. Okay. So I haven&#39;t I I
haven&#39;t I have not much knowledge about
the crypto uh but I know there is
multiple uh companies which pro uh which
is providing you the crypto payment
integration in your app. So you can
explore that. Okay. So uh okay so I
think I have covered all things from my
last uh last video. Okay. So now enjoy
it and tell me the voice quality of this
mic. By the way, I am not going to edit
this too much because I haven&#39;t a time
and I I want to learn the editing of
voice. Okay. So, okay. So, I think
that&#39;s enough. So, by and watch the uh
other parts of this video. Okay. And by
the way, it&#39;s not an end. I will add my
whole clip which I have 22 clip I have
recorded for part one. Okay. So, you
need to finish that. Okay. So, now I am
recording the almost a week later. I
don&#39;t know uh it&#39;s almost five to six
days later. Okay. So now it&#39;s time to
create our services uh routes here.
Okay. I know you are already aware how
to create the right plots for services
in the admin. Okay. So I&#39;m not going to
explain that because that are the basic
uh nextjs thing next year developer
learn from there. Okay. So let me paste.
Okay. It&#39;s not pasting. Oh, by the way,
you can also go to the uh uh okay, so uh
I&#39;m copying from my uh previous project,
but you can copy from the GitHub. Okay,
so I think it&#39;s not going to problem to
you. Okay, so now there is added every
files. Okay, here I have added services.
Okay, which I have already shown you.
Here a button and also service list.
Okay to display the service. Okay. And
here a a pay add inside the add. Here is
another route. Okay. For adding the
services and now there are components
regarding to this and inside there
component regarding to the service.
Okay. So now it&#39;s fine. And now if I
reload by this page okay now it&#39;s
reloading. And now currently the routes
which we which they are polyh not exist
right now but we will create the route.
Okay. So here you can see now I don&#39;t
need to show anything here because I
know you guys are ah really option you
can do that because I have also done
these thing multiple time on my channel
so I&#39;m not going to do that kind of
basic things okay so you can see this
one okay everything is looking fine a
URL these are just a facial request
using the
react query okay and now it&#39;s time to
create our back end okay at the back end
I will create with I will create
together with y because I like to create
back end together okay so there is one
error I don&#39;t know the error which of
the error okay so t services they are
expecting uh no exported member okay I
know there no expect exported member
there so let&#39;s go to the database
okay inside the src inside the lid
inside there okay so there is this and
yeah there is No uh t services. Okay. So
we need to create the services like okay
these are just types uh which is in
part. Okay. Okay. So here now I have
created a folder called types here
inside there there is schema ts. Okay.
So here you can see the all the schema I
have imported here. Okay. And I have
created uh everything. You can see I
have created everything. You can see
that yes. Okay. There is error. So not a
problem. they will solve the error and
provision of error correctly I don&#39;t
know okay so here I guess and the
provider schema and inferred infer infer
insert okay uh these are just using used
for importing that uh I mean you can say
just creating a type according to our
existing uh tel model okay so tel schema
model so if you want to learn this you
can go to the tel talk docs and you can
learn uh but now it&#39;s time to explain
what uh these thing is doing okay So now
you can see there. Okay. So currently I
have changed my uh routes. Okay. So here
uh dot forward slash and okay. So dot
forward/ schema. Okay. So I know okay
I&#39;m not getting the suggestion here.
This is the really a power thing for me.
It&#39;s not a dot/
and/
inside the lip I can see. Okay. Inside
the lip I will find a schema. Yeah,
there is a schema and inside there I I
pass schema js. Okay, so here I will
find everything. Okay, now if I hover
here but first let me show you it&#39;s a
provider. Let me open this table. Okay,
you can see the table has
ID, name, API, URL and API key and all
this thing. And what I am doing here I
am just calling yes uh yes contain all
the uh you can say else contain all the
uh tables okay in the object pop. Okay.
So I am just uh taking this provider
schema from the object and I am
inferring infer insert. Okay. This will
help us to infer the type. Okay. But
here now if you hover here now you have
whole type. Okay. You can see the whole
type with id set it. Okay. We have
everything and which is what is optional
and what is non optional according to
that there is everything created okay so
we do not need to type manually our
types okay uh this will create types for
us okay I can set this create for the
type of us just we need to also
operations okay the deep provider okay
there are multiple you can do here I am
using omit omit will help us to uh just
remove the existing uh some uh some then
says subproperties. Okay. So these
property are removed from there. So you
can over here. So you don&#39;t going to
find this property. Okay. User ID, ID
and rated and rated at and maybe. Okay.
So you can see here now this this thing
is start. Okay. Uh if you want to create
uh if you want to create export for this
whole thing, you can create and but if
you don&#39;t want to create you can just uh
go to the index.ts FPS and you can
export that from here. Okay. So for that
case I am just creating your index here.
Okay. It&#39;s recommended to create index
index.ts file for exporting the things.
Okay. But I am I have created export is
schema.ts
typ. Hey wait a minute.
I think I have created everything. Okay.
Already I have created. I was totally
forgotten about that. Okay. So all the
things is created. Now let me delete
this or not renap. Let me delete. Okay.
I was totally foretted.
Okay. So now it&#39;s done. Now I know how
to access this. Okay. Where I was
getting the error. Okay. So I am also
not sure where I was getting the error.
But maybe maybe maybe
uh not there.
Uh maybe there I was getting the error.
Okay, he can say uh t service progress
as yeah there is error. So if I do like
this okay type maybe this will work.
Okay. Yeah this work and now there is
the error. Okay
add column service add services column
not existment here the file is not exist
there. Not a problem for me. Okay, we
will paste that and there it also uh use
provider ID from the just end store is
missing. So we need to create a node I
will create with you. Okay, not a
problem and okay so these are the errors
here and uh
services
and the sum file is okay. Okay, so there
is no error for the addict uh services
list. Okay. So there is a error and let
me solve the error.
Okay. So this one. Okay. So this will
solve this error.
Okay. So error is 10 here from here. And
now two error is there. Okay. Okay.
Clear. And also there is no error. Okay.
It&#39;s okay from here. And it&#39;s okay from
here. So we have uh two error in this
four pi. Okay. So first I will fix this
error. Okay. So this file is okay. So
this import is referring this file
inside admic test component. Okay, this
one. Okay. So uh I have commented out I
have commented all the files from here.
So let&#39;s get back them them. Okay. So
here now we have only one error. Okay.
So you can see here the use provider ID
and also the same error which we are
getting the error here. Okay. this done.
First let me check is I have installed
the kind of world because I am not sure
about it because I was created this
project long time ago. Okay. I was
taking time recording the videos. Okay.
It&#39;s really a huge amount but apart from
me.
Okay. So
just stand. Okay. So there is a just
stand. Okay. So just stand is done
installed. So let me install the just
stand. uh I I always prefer to like that
go from the docs and copy the
installation command. Okay, I always
pick for because I want to avoid break
type. Okay. So here so PNP PM add to
step. Okay. So this way. Okay. Okay.
Okay. So I am on boot. So uh let&#39;s cd
do. Power/ packages. Not package it&#39;s
it&#39;s app. Okay. In the app we have the
front end. Okay. So front end. And now
let&#39;s run. Okay. Okay. Now we run this
again. Okay. So now current P and this
will install successfully. You can see
in the context there is to start and
there is store. Okay. So here okay here
there we need to put it. Okay. So let&#39;s
uh go to the context folder maybe some
uh there is a context and now uh just
create a folder called just
okay so it&#39;s just stand and okay yeah in
the just end we have a store. Okay
store.ts PS.
Okay. And the second file we need are
for storing the types. Okay. So the
second file is store
dot types.ts.
Okay. So this one. Okay. Uh before
creating the store purchase uh I always
refer to create a type. Okay. So let&#39;s
create a type program. Uh export
interface provider of id state. Okay. So
this one. Okay. Let me close this. Okay.
This one and now there. Okay. So here we
need two thing. First is select provider
ID and second one is set. Okay. Uh this
is just like use state but we are
defining the things. Okay. Uh selected
provider ID. Okay. So you can see I have
suggestions. Okay. So I will use the
sense almost correct and there is there
is no chance to null. Okay. Okay. So
here uh it&#39;s a setup. I can say it&#39;s a
or the bell which we are creating from
here and this is the uh setter for that
this will set the value inside there
okay so there is a type okay uh we need
to define type okay uh that&#39;s why we uh
the reason of defining the types when we
import that store somewhere we have the
type definition for that and that&#39;s uh
then then we can use that uh any time
okay so because we know what we will get
from that store okay so that&#39;s the
reason okay so you can uh also create a
same thing. So same thing for currency.
So there is a currency. Okay. So it&#39;s a
currency state. It&#39;s a same thing. Okay.
So now it&#39;s time to create the store.
Okay. Uh to create the store. Okay. So
uh to create the store you can read the
tokus from there. Okay. So to create the
stand store uh you can use uh yeah you
can say this one you can name it
anything. Create set. Okay. And vs. And
this is the thing you can read from
here. And if you don&#39;t want to uh use
the stand you can use redex toolkit.
Okay. So this one the redux to uh tool.
So I think RTK is enough. So RTK.
Okay. RTK react. Maybe this will come
out.
Yeah. You cancel this one.
Okay. So if you want you can use Adex
toolkit but I always prefer to use just
do lightweight and also the easy and
this is not easy and not lightweight but
some companies are using this but not a
problem if you want you can use this uh
but I will always this is scale scalable
and also this is good for the enterprise
level application okay so uh it&#39;s still
loading uh network this and now come
here and also the come here okay so now
export code. Okay. So, export con use
provider id uh which we we know uh we
want to use this. So, use provider ID I
am assuming. Okay. So, it&#39;s the ping
that I was assuming it&#39;s a provider. No
need to input because we are defining
the here. Okay. I get the error because
I okay there is no need is equal use
provider ID. Okay. So, use provider ID
and so we need to import the create from
this strand. Okay. So after the thing
it&#39;s looking perfect. Okay. Yeah, this
one. Okay. So now it&#39;s also imported but
from zooming but uh we want from the
just stand. Okay. So it&#39;s a just stand
here and now we have the set and now we
have so here. Okay. Okay. What the
happened? Yeah. Okay. So explaining. So
and now here we have to give our types.
Okay. So we know we have created a type
for this case. So here the type here.
Okay. So here just come and just pass
the type here. Okay.
And this will import the type and now
and now if we open this. Okay. So the
error is due to be I have I haven&#39;t
imported that one. So if I import this
and now if I try to control this space
now we have the posts here. Okay. So add
initial text all. Okay. And there is one
thing we have this one and here I will
give a id okay it&#39;s a ID there and we
know it&#39;s the thing okay so here we need
to use set for setting the things so
okay so set by by the way using this uh
using this uh by using stat there is
multiple types I mean there are multiple
way to do that and update
uh you can do according to your listing
you want but I al I there is Nothing for
me I can say there is no saint for
because I am also a person who are who
forget everything okay so it&#39;s really
hard to me to remember anything so
that&#39;s why I always uh take or repress
from my previous previously written code
okay so you can see now I have defined
this and there is a provider ID also
setter but if you go here uh you have
know uh this is the type number and if
you hover here you will also know there
type number and n. Okay. As this is a
possibility to do our type script and
also the passing our type script
interface. Uh in same way uh you can
create currency. Okay. Uh the type
interface we have already created. Okay.
So just we need to use that. Okay. So
it&#39;s a use currency and currency state
from our types. Okay. And set null and
poly and this this this and now let me
import this. Then we have unknown type
here from n into unknown type you can
say extra string. Okay. So now we have
created our uh this thing. Okay.
Okay. So we have created our standard
and now if we come here. Okay. So our
all errors are solved from now from
here. Okay. So also from the services
errors are gone. Now we have also learn
how to implement this stack. Okay. stand
is helpful for managing global stress in
our re react application. Okay, this is
lightweight and easy to use and also the
very lightly you can say in very light
language little uh talks. Okay.
Okay. So here some errors I don&#39;t know
the reason of the error but maybe if I
repress I will I am hoping this will
call solve. Okay. because I I first time
saw this kind of error and this error is
from uh plugins
it&#39;s plugin it&#39;s from the better of
native modules okay so now it&#39;s solved
now it&#39;s time to create our APIs okay so
create a file here name which aligns
with our uh convention so here the
services
sir okay so it&#39;s a s vic services dot
Uh maybe you can see it&#39;s a route. Okay.
So route dot ts. Okay. So now this is
fine. And now it&#39;s time to uh write our
PL word hero uh which is our server. So
con.
Okay. So we need to use server service
ro. Okay. If you want you can put the
sub admin ro but service route is
enough. Okay. So service route. Okay. So
it&#39;s a service route and not new huno.
We need to define a new huno class here.
So ono and there is a horno from the ono
and this wall and also the p is this and
now here is a oh ono
awesome okay so we have imported our
thing okay so now
just your services can say I have
suggestions services it&#39;s called the
getting the services see and true
services patch okay it&#39;s almost true
it&#39;s almost true but not fully true. Uh
but just let me use this suggestion.
Okay. Uh so this suggestion work for me.
Okay. So now write our whole thing.
Okay. So uh let me remove this one first
uh to avoid the confusions. Okay. So now
we first thing first what we need to do
we need to uh get the body. Okay. And
also let&#39;s uh remove this because
currently I have first I will build the
post route. Okay. Uh so here the first
thing first I have to build the post
stroke. Okay. So now get body. So con
body uh equals to uh we need to get the
body. So first aid uh require JSON. It&#39;s
almost correct. Let me use the suggest.
Okay. So you can see we have this one.
And now uh we need to define the type
for this and we already have a type. I
don&#39;t know if I remembered or not but
you can see values but this one not this
one uh which is coming from the our SMM
guru datab services uh form provider.
Okay. So now uh now TypeScript will know
the type of this body. Okay. So now we
have defined the types and now we by the
way if you also want to add here as okay
uh any so you can add the as okay first
is we will replace this as any uh
because we do not try to write okay and
then we will uh cast this to this one
okay and now if you go over here you
will get the same thing uh so it&#39;s also
good to do that uh I first time saw this
kind of syntax in pet ro code okay I
have watched almost
50% of better code okay how they build
the plug-in how they are signing how
they authentication okay so I have shown
the better of nail f4 from their github
report so I have also clone that uh repo
you can see here uh yeah this one this
is the better of official repo okay so
you can also go to go and clone and you
can also uh learn something from that
code okay so con
and this one user or equals to rc. get
okay so we know there is a user and now
we will put exclamation mark because I
know the user with there okay because we
have checking the middle I we have
implemented a middleware to check it
okay so it&#39;s a con okay so it&#39;s a map
here we will get the provider ID okay so
there&#39;s a provider ID provider ID in the
oh by the way provider ID I am sending
in the query okay if you want to know
you can just go and see my code okay so
there&#39;s a provider ID which I am passing
in the query but it&#39;s taking from the
pallet so not a problem I will change
okay so here uh the query
yeah you can see in the query uh in the
query anything we will pass in the query
that transform into the string so that&#39;s
why but we need provider ID number so we
need to convert that into a number okay
so by the way if you don&#39;t know about
the query so query are just uh after the
URL I we implement this query like uh
provider id something equals to yeah
provider id something 1 2 5 anything
anything after the hour okay uh let me
say so this out here obviously I am
getting this the same error I don&#39;t know
the reason of the error but uh not a
problem for me for now it&#39;s like this
now provider ID
equals to say anything okay so this one
I think you have already know about this
because now you are a fullstack
developer uh you are using the MXS you
have the piet and also you have reoped
quering and querying from the JSON
placeholder maybe where you from you
learn I don&#39;t know where from where you
learn and they teach you not but I am
assuming that you know about these thing
how to pass the query using the xios
okay so now here we need to check uh
because if we will forgeted to pass this
not provide provider ID. Let&#39;s check.
Okay, at the AI say almost correct
provider ID. If not the provider ID,
it&#39;s false. Okay. Okay. Not false. Null.
And okay, it&#39;s good. It&#39;s good. And now
let me use the bad request which I have
created. Okay. So, it&#39;s a bad request.
Okay. So, yeah, this one is a bad
request.
Okay. So, I think you have no about
think uh you have already aware of this
kind of center. Uh by the way uh many of
you as thinking uh uh from where we are
getting the provider ID. The
providerizes the provider ID of a
wholeseller which we have save in our
database with the uh uh IP world and
also with you can say the API key. Okay.
Uh if you remember in the front end when
we was click on the add button and
services page. Okay. So then we have a
selector of provider. Okay. When then we
select the provider. Okay. When then
when we select the provider there will
run a onchain. Okay. When select the
provider the uh our system will run a
query. Okay. And get provider uh I get
the provider ID from the provider and
that will send here on on our server.
Okay. So our server will accept that.
And if you want to know more code you
can just come here and learn about this
and you can see all the code which how
the thing is work. So you can see uh
there are the code you can get uh you
can watch from here okay and you can
explore the code here because uh I have
put my huge amount of effort here to
making this code okay and so you can
check also and I also have taken the
help of AI to create the UI okay I know
I am too late I almost I have I think I
have uh 2.5 month ago I have put posted
a free course on a full book project on
YouTube. Okay. So, let&#39;s take spam
because I I have no time. Okay. I am
just doing this for fun. I can say uh
and also for you and also for some
money. Okay. Money is individual. Okay.
So, everyone uh there is everyone
working for the money. I know I am also
one of them. Okay. So, con and age.
Okay. So, we need to check is is service
available. Okay. Uh there there is user
the user is requested for the service.
So we will check the services available
or not in our system. Okay. So let&#39;s
check the service is available or not.
Okay. So service exist. Okay. Uh I don&#39;t
prefer to use word called exist. I
always prefer to use word a web.
Okay. So this one. Okay. So here we need
to database query. We know we have to
open the database query here. So here
the DB query and the here the provider
form schema and which is not correct.
Okay. So let replace this with our
service schema. So this one is our
services schema which contain our
service table. So find spread because we
want only one but uh we need to this
okay because there is we have our own
laws. Okay. So not a genative. So this
one direction code and also this one and
now here we need to pass equals to
because we run a two query here and we
will verify it. Okay. So import this one
and now there is
okay. So in my code I am able to see I
have checked only one condition. So uh
if you want to check only one condition
you can remove that. But if I add it I
will add here. Okay. I was remembered
okay first time when I was creating the
app uh I was also checking the user ID
but when I was realized that in admin
side we do not need to check add user ID
okay so that&#39;s why I have removed that
that&#39;s why there is and uh but if you
want to remove the you and you okay it&#39;s
up to you uh but if you want to use
multiple thing here to checking so you
can see just like the if else it blocks
which checks and uh we check with and
and I I don&#39;t know what I want to say
the and but it&#39;s and okay so you can see
this one and also put the quote the
comma and write here or second one
second one uh you can say condition okay
so now let me uh write the condition so
it&#39;s a services provider ID it&#39;s not
correct we need to check services
so services schema okay so here we have
the services property
Okay. Here we are provide the ID from
the wholeseller uh the ID from the
wholeseller which of our wholeseller
provided ID. Okay. Okay. So this
services column contain the ID provided
by the wholeseller show this one. So we
have to check uh in the body is in the
body uh uh this whole seller ID is exist
or not. Okay. So it&#39;s a services. Okay.
So here in the body when we request to
add because I have already explained the
post route I can say the post method we
are using for the creating the new
entity and patch method we are using for
the updating an entity and get method
just we are using for the getting the
things okay so you can see we have
checking okay this services is getting
from the wholeseller okay this is
wholesellers service unique ID which
they have provided us as the service and
that I am taken as a service. So it&#39;s a
service and this is also a service. Let
me open the schema post. Okay. So there
is a ID. This ID is our unique ID of our
our
service in our database. Okay. And this
service ID is coming from our
wholeseller. Okay. This is the
wholesellers database service unique ID
which we have porting XM port which we
are sharing in the name space of
service. Okay. same name space and also
the name and also the type and rate and
everything there. Okay. And if you want
to know just go here and just search for
the cheap palance if you open not chat
jp it&#39;s a cheap balance I have already
shown you uh but let me show you so but
I want to teach you everything okay so
go to the API okay for the admin panel
and for the SMM panels there are same
things okay there are same principle
they are working on same kind of API
same kind of response and everything is
same power all the SMM panels. Okay. So
you can say uh when we are requested be
requested uh service. So so we will get
service with their unique ID and name
type default category everything. Okay.
So we are just loading the that things
in our front end which I have already
shown you in the tables when we have we
have selected product ID not product ID
then we were selected. the provider.
Okay. And we will click the add. Then
one thing only one of them uh which are
from uh for which we have created the ad
button that will going to send it on our
back end. Okay. Uh our back end there.
Okay. You can see not there. This is not
our back end. So my back end is here.
Okay.
So here. Okay. So just I am doing this.
I am doing that. Okay. So I am expo I am
just taking the body from there and I
just added the body and I&#39;m just
checking that services or is already
exist on our system or not. Okay. And
also it&#39;s one thing you want to check.
Okay. Here one thing one thing you need
to check when we come here when you come
here not
okay go to the service. Okay. In the
service
we can say we have the provider ID.
Okay. So we also want to check the
provider ID is same because the service
ID is same for multiple providers. Okay.
But the provider ID in our system is
different for all provider. So in the
end we have to check one more thing.
Okay. This is the provider ID. Okay. So
to check that just come here. Okay.
And there maybe somewhere I forwarded
where I was written. Okay. Okay. So we
uh we need to check one more. Okay. I
was totally forwarded about this and
also I am not checking this in my
previously written code. Okay. So it&#39;s
in that really a crucial part but it&#39;s
really a good okay so it&#39;s a services.
Okay. Services schema. In the service
schema I we have the provider ID which I
have already shown you. Okay. The
provider ID is updated from there. Okay.
So now it&#39;s fine and now it&#39;s correct.
Okay.
And now you can see yeah it&#39;s prepared a
response a service already available
then written for service already service
already there is no need to add. Okay.
So just let me get the tab and this will
complete whole thing. Okay. And now it&#39;s
time to check. Okay. So now if we come
to our database you can say there okay
by the way I have on I recommend you I
will I mean I will recommend you to just
go here and read the code okay and read
the front end because front end it&#39;s
like a mystery if you are new in the at
the development but if you are already a
good player in the developer then and
this may not for I mean this is not a
great thing for you but maybe you will
learn something from me. I don&#39;t know
what you will but maybe you will learn
something. And now we have to find the
ID for our uncatategorized
category. Okay, you can see uh we know
for the uncatategorized category the
services category. Uh okay, so we was
created a category called
uncatategorized but that is deleted. Uh
I don&#39;t know how that is deleted. Okay,
I I know how I deleted it. I think I
have I wasn&#39;t used super for a long time
I think uh one week almost a week ago I
was used that&#39;s why my super uh
deactivated that uh that&#39;s
database so I have reactivated and now
all the backups are gone I was on flow
not taken any backup so there is no
backup so I need to create that I mean I
I need to create this I need okay so Hi
there. So let me insert insert row and
col. So I want to insert a row not a
column. Okay. So just put the ID. It&#39;s a
default. I do not need to put here. And
just paste the anchorize here. And ID
it&#39;s referring from there. Okay. Okay.
So I have no ID selected. Let me first
discard it. And let me again go to the
user and let me copy the ID for the
user.
Okay. Why I am not able to copy that?
Let me open the over app. Maybe no not
a problem. Let me open the inspect
because we are developer. They added
nothing impossible for us. Okay. So
there and now this one I have linked
that one I think.
Okay. So I have clicked. Okay. So yeah
we have this ID here. So let me copy the
ID from there. You can see we have the
old ID. Let&#39;s give the expect window.
Okay. So, category schema and now it&#39;s
time to create. Okay. So, let&#39;s insert
insert
another column. Okay. So, uh name which
I have already copied which is
uncatategorized and the user ID I have
copied with you. Okay. And created it
just leave it and option just leave it.
Okay. Now just save it. Okay. for
everyone of thumbnail for everyone there
is uncatategorized category ID is one
but in my swipe because I have created
multiple categories there that&#39;s why
it&#39;s wipe so that&#39;s why we need to fetch
the category uncatategorized category ID
first okay then we will save that okay
uh it&#39;s important but in some cases it
may not important but in some cases it
may important to fetch that ID so I will
highly prefer and highly recommend you
to I have fetch the ID for the
uncatategorized category. Okay. So here
and now it&#39;s time to wait just a wait.
Okay. So aait and just write DB query.
Okay. So it&#39;s a DB query and where we
want to run just schema cat. I think
this work schema point first. It&#39;s good.
We want point first. Okay. This one is
also correct. And now I need to import
that one. Okay. So let me import. Okay.
So it&#39;s imported here. And now here what
we need to do uh here I want only one
column. So that&#39;s why I would want to
select only one column not more than
that. Okay. So clear.
Okay. So here the ID and that is true.
Okay. So ID is true. Now if you over
here you will get only ID which is
number and error and name. Okay. So now
let&#39;s check again a condition just put a
condition here and then not uncom
it&#39;s uncatategorized service and
category not found maybe in case service
is not yeah okay so main services to
server error but it&#39;s good to put that
okay so this
okay so now it&#39;s looking good and
everything is working perfectly fine
from Here I&#39;m in T here and now now it&#39;s
time to perform our VL database
operation. Okay. So uh now as we have
already discussed when we add a service
first time then we will push that
service in and an categorized part.
Okay. So here let&#39;s we need to add uh
our uh service into our database. So we
need to just insert uh the suggestions
are almost correct. So I am going to use
these suggestions. Okay. So I am
spreading the body and the provider ID.
Yeah, it&#39;s correct. And the category ID,
it&#39;s also correct. Okay. And created at
and updated at is also correct. And user
ID. Okay. So, user ID is also correct.
And one thing is missing which is the
our category. And okay. And I think
category I yeah category ID is mentioned
but the category is not mentioned. Okay.
So here we need to specifically mention
our category. Okay. So there is a
category other category is un
uncatategorized as we have discussed
already. Okay. So it&#39;s uncatategorized.
Okay. So now we have done from this part
and now it&#39;s time to return uh our
function. Okay. So just return this.
Okay. So return C do.json. Okay.
Here and now uh what we need to return.
Okay. Okay. Okay. Yeah. Successful
service added and service added
successfully and result null. Okay.
Because I don&#39;t want to uh get I don&#39;t
want to send anything on front end.
Okay. Because it&#39;s not necessary here.
Okay. And now second thing is uh we need
to pass our status code. So it&#39;s a
created.
Okay. So this one is created. Okay. So
now it&#39;s time to create our patch route.
Okay. On patch route we will able to
edit our service. Okay. So now it&#39;s time
to create this patch. Okay. So patch
route. And here uh we need to get our
service ID first. So this is this is a
dynamic route. Uh I think I don&#39;t want
to explain this part. Okay. because you
have already know uh if we want to
change something uh in some uh uh
project I mean in some column then we
need to pass service ID or t ID related
to that service okay it&#39;s necessary and
it&#39;s important you can also make uh send
this as a body parameter but I always
like to send as a params okay now it&#39;s
not a param it&#39;s a path okay
so here now one thing we need to add our
j validator as we have discussed I
always uh like to add j validator here.
So J validator service and service form
schema. Okay. AI citizen is almost
correct. Okay. He he knows what I want
to do. That&#39;s why I am using the AI. By
the way, uh the AI I am using it&#39;s
codium. Okay. Now the name is changed
and now the name is win ser but formally
this is known as kodium. Okay. So here
something is a problem. Okay. It&#39;s
change schema. Okay. So I need to uh add
my uh schema which is service.
Uh not this one, not this one. So no not
a problem
[Music]
service form schema. Okay. So this one.
Okay. So now we need to do some things.
Okay. So we need to just first get body.
So cd const body equals to uh c dot
request dot valid JSON. Okay. So it&#39;s
there. And now second thing we want
service ID in number form. So we need to
convert that service ID into the number.
So const service ID
service ID service ID number. Yeah, it&#39;s
almost correct. I wanted this. Okay. And
there uh from the body we need one
thing. I will explain why I have done
this in such a way. What not just uh
just write first code first write the
code. Okay. So it&#39;s a category info. So
category
id okay and now it&#39;s info okay so it&#39;s a
category info and now here uh we need to
pass some things so JSON dotparse okay
and here what we need to pass ah we need
to pass body
dot category ID and the name ID okay the
reason is correct okay so I&#39;m going to
use this reason if you are thinking uh
why I have used the JSON dotparse here
to parse our category Okay. And why uh
and after the parsing we will get the
name and string in there. Okay. So to
check that we need to go on our service
page. Okay. Where we are adding the
services. I mean where we are editing
the service. Okay. Everything is uh
hidden there. Okay. So now let me find
where the editing of service. Okay. I
have I also haven&#39;t remember where I
have done this part. So I need to check.
Okay. So add service. It&#39;s a service
here. and maybe add service. It&#39;s a link
hyperlink. Okay, so maybe I will find
here there is a add service. Okay, there
is a paste services.
Okay, I think I need to go there in this
page. Okay, there is a service list. Let
me go on the service list because we
know the addit button in our service
list. Okay, I mean we are there now
there is a table. Okay, in the table I
think.
Okay, uh I&#39;m not able to see anything
there.
Okay, what&#39;s this? Let&#39;s see. It&#39;s a
query function get request data table
service column data name and name. Okay,
let me come here and let me find
something. Okay, this data table is
there. Okay, I got the point here. Okay,
uh I know why I&#39;m not able to find that.
Okay, so everything is here. Okay, in
the result not there. Okay, everything
is service column. That&#39;s why I was
forgotten because I was uh I am
recording uh that a long time ago after
a long time. Okay, you can see it&#39;s 63
2025.
Okay, it&#39;s a really a long after really
a long time I&#39;m taking this session
because I have no time. Okay, so here if
we go here man and refill and the
service yeah action on services. So
there is external services and these are
the external service button and maybe we
will find somewhere the edit. Okay. So
it&#39;s a service yeah you can see this is
the delete route. So uh we are
interested in the post I mean our patch
route. You can see this is the patch
route which we are getting uh created on
our server side. Okay. You can say
there. Okay. So here we are taking the
service ID and that is there. Okay. the
service and the id. Okay. So there is a
ID and these are uh create and I have
created these in the satian table and
using the react not react angstruct
table. Okay. You can see there is these
things. Okay. And if you come here you
will able to find the data value type.
So value type is there. So you can see
we have three thing. We have name,
profit and category. Okay. So we are
sending these three thing. Okay. Let me
drag it.
near to our service route. Okay. So
there. Okay. And now if we hover here.
Yeah, we have the same thing here.
Okay. Okay. I think I have dragged wrong
one. Uh I want this. Okay. Let me drag
this.
Yeah, this one. And now now it&#39;s time to
see uh where we have used this and where
is our form. So this one. Let&#39;s uh deep
down. Not this one. And yeah this one
there is a form we have used you can see
category original but but but when you
look at there for the look at the form
yeah there is a form for the category
and here you will find this is the
select okay on select there is you can
see uh field dot onchain and field dot
value okay so value you can see that the
value is there okay I think it&#39;s
something different okay so I do we do
not want to refer that Okay.
Yeah, you can see the value we are
sending. Okay. So, you can see the value
I am sending the in the value I am
sending the name. Okay. And the name and
also the ID and I have a stringify that
the JavaScript object. Why I have do
this? Because when I was created that
job schema, I wasn&#39;t uh remembered about
the ID. Okay. Uh we need to pass ID.
That&#39;s why I have do that jugard. In
India, it&#39;s juggard. Okay. You can say
it&#39;s a jugard which I have done here. I
have just stringified the JSON object
and I am pass this as a string and on
the server I have just passed it into
the JavaScript object. Okay. So you can
see there I am sending this as ID. It&#39;s
due to the I was forgotten about to
build that. So I was used the jugar.
Okay. And now you can see the
placeholder is incorrect. Select email
verify. Okay. It&#39;s it&#39;s really a bad I
can say it&#39;s really a bad thing. Okay.
So select category it&#39;s a correct thing.
Okay. So select category. Okay. So I
have done this part. Okay. It&#39;s also the
corrected. And now if we come here and
now you know why why I have passed this
in the name and ID. Okay. So now you
have information about this. Okay. So
it&#39;s good. And now it&#39;s time to update
our database. Okay. So just we need to
await for the database. Okay. So await.
Okay. So here the DB dot uh update.
Okay. So update and there is a update
and what we want to update. We want to
update services schema. Not this one.
It&#39;s a services schema.
Uh I think not this one. I think this
one is correct. Yeah, this one services
schema and dot set. Okay. So it&#39;s really
a thing that I want to set here. And the
what I want to set it&#39;s really thing.
So I want to set name. Okay. Name. Okay.
So name is name is coming from the body
dot name. Okay. And also I want to set
profit. What&#39;s the my profit toward this
uh service? Okay. So we will set the
profit. So body.profit body contain the
profit and what the category ID. Okay.
So we need to pass the category ID here.
So there is a category ID. And now if we
come here and now we have the category
info and the category ID and we also
want to pass the category name. In the
category we will pass the category name.
I think you have understood it well. And
uh we also want to define where we want
to uh reflect these changes. So the uh
the changes we want to reflect on you
can say the service ID and there okay so
just hit this this suggestion is correct
I want to make changes here. Okay so now
it&#39;s time to return our function because
we have done with our function. Okay. So
written and services updated. Service
updated successful. We do not want to
send and yeah you can say it&#39;s done and
it&#39;s not created. It&#39;s okay. Okay.
Because okay contain 200 response. Okay.
Not from here from there.
Okay. So this part is done. And now it&#39;s
time to create the get route. Okay. Uh
get route is for getting the all the
services. It&#39;s a simple sort route.
Okay.
Okay. So here the service route this
one. So here we want get route. Okay. So
the get and there uh I think I want to
get on the forward/ path. Okay. So it&#39;s
a forward/ path and let me see that is
my own end. Okay. I don&#39;t want to write
this. Okay. So uh let me copy and paste
this part. Okay. So here uh it&#39;s just a
database query the find many find uh I
mean I want every everyone I mean you
can say every service here and just
return that service. Okay. So it&#39;s great
and here I want to pass the status code.
If you don&#39;t part it&#39;s very default
going to take 200 I think. I&#39;m not sure
but I think okay so now it&#39;s our time to
writing our last route but let&#39;s export
this and in the last route we want a
delete route. So here the service route
and so delete it&#39;s a service ID if we
take service ID. It&#39;s really a genuine
thing and also uh we need to pass
service ID. Okay, it&#39;s great. Okay, it&#39;s
great. He know what I want. Okay. So
that thing is this this is correct and
there is a delete. Okay. So here the
await delete where equals to uh I think
it&#39;s almost correct. Okay. It&#39;s almost
correct. So I want to take this and now
it&#39;s time to write a return. And before
after writing a return there is a
problem the pro the function is not
properly closed. Okay. So we want to
close this. Uh okay. So I think if I
will do this. Okay. So now here B1 or
return. Okay. Uh I want this. So it&#39;s a
const. Okay. I don&#39;t know I am using
this on front end or not. I&#39;m not sure
it&#39;s a service. It&#39;s a deleted service.
So it&#39;s a deleted.
Okay. Uh it&#39;s like this way. So deleted
and deleted. Uh also I want D. So
service. Okay. It&#39;s a service. And the
spelling is wrong. So let me correct the
spelling. Okay. So now it&#39;s time to
return uh our required thing here. So
status true service deleted. and this
one not null h this time this we got to
return this we need to pass a returning
here okay because by default this will
not going to return anything so I think
yeah it&#39;s a returning it&#39;s a returning
there okay so now it&#39;s fixed okay so our
delete route is now prepared okay so we
have done our server part we have done
our encryption we have fetch our
services and we are build a function
feature to add the service from our
service provider okay so I haven&#39;t
remember we I have added the service uh
provider or not uh but not a problem
let&#39;s do that let&#39;s start the server so
I think it&#39;s a pnpm tab
front end
okay so this one okay so one thing I
have forgotten I haven&#39;t mentioned uh
the route here okay so that&#39;s why I was
getting the error and and I was not
thinking I haven&#39;t I think that our
error is there. So, uh just we want to
add okay so our route here. So route
there. Okay. So the admin route and this
is our last right route. Okay. It&#39;s
admin route. Now let&#39;s let&#39;s let&#39;s let&#39;s
Okay. So it&#39;s done. Okay. So we have
done and now it&#39;s time to reload. Okay.
So I am on the service add admin page.
Okay. So it&#39;s time to reload because it
haven&#39;t fetched anything. Okay. So it&#39;s
fetching the data and data and data and
data. Okay. So now it&#39;s fast. So we have
nothing. I don&#39;t know why but we have
nothing.
And I think I haven&#39;t built a route for
that. Let me see where the problem
occurs. Now it&#39;s time to reload it.
Okay. It&#39;s reloading and I haven&#39;t I am
not able to see anything.
Okay. So it&#39;s not trying to getting the
provider. It&#39;s in pending. It&#39;s 200.
Okay. It&#39;s 200 provider and the thing is
there is no provider. Okay, I got the
problem. I find a missing piece here.
You can see I have forgotten to uh uh
write this route here uh to fetch the
services. Okay. Uh there is a 404 error
and let&#39;s see the what&#39;s the route and
the route is local host API v1 admin
provide. Okay. So it&#39;s a provider route.
I have missed a provider route. Okay. So
it&#39;s time to add that route. Okay. I
think not that one. Not that one. Yeah,
this one is our thing. So, just come on
to the provider route.ts here in the
admin routes. Okay. And yeah, you need
we need to create a new route here.
Okay.
By the way, you want to see
uh where is this route exist? I also
forgoted where is this route exist?
Maybe there
services. Okay. somewhere you will find
uh the route which I have used here.
Okay. Okay. So you can find okay it&#39;s on
you. Okay. Uh you need to explore the
thing. I have uh created a puzzle for
you. You can say that uh say like that
it&#39;s your puzzle for you. Okay. So front
end is easy. So I have put front end on
your okay. Uh I have only done the back
end part.
Okay. So now it&#39;s time to add provider
route. Okay. So it&#39;s a provider route.
Okay. So let&#39;s add not all. I don&#39;t know
what the meaning of the all really I
don&#39;t know. Okay. So here it&#39;s a get.
Okay. So get and now we need to pass the
routes here. Which routes we want to
use? So it&#39;s a servicesh
I want suggestion. Okay. So it&#39;s a
service
services
forward slash and here the thing is what
we want? We want dynamic thing. Okay. So
dynamic is provider ID. It&#39;s almost
correct. Okay, it&#39;s almost correct which
I want here. And now let&#39;s first close
this. Okay, to solve the error because
in future maybe this will uh create a
problem for us. Okay, so now maybe I
think this solved. Okay, so this error
is now solved. And now it&#39;s time to grab
some database operations. Okay, so first
we want to get the provider. Okay, from
our database encrypted, you know, we
have uh everything stored in encrypted
format. So not a problem for us. We will
uh get that and we will decrypt that and
then we will use that. Okay. So it&#39;s a
provider DB and yeah schema and where
provider and provider ID provider ID
okay it&#39;s correct it&#39;s correct we want
this we want okay we want do not want
name but not a problem let&#39;s remove name
manually uh some manual labor okay
and also now let&#39;s check if if there is
something is in getting the provider if
not provider okay so the thing is I have
already get the s uh JSON JSON not And
uh provider not found it&#39;s also good
provider not found you are you can if
you want you can set a fail to fetch
provider okay it&#39;s on you internal
server error and maybe here I don&#39;t want
to pass the server error the reason is
this because I don&#39;t want to create uh
any error for
xjs okay so just okay if not get the
provider it&#39;s okay not a problem for us
because if someone come here then there
is high chances the provider is there so
this why this is because the message is
not compatible to us. Okay, because uh
imagine if you have come on the uh on
our this page. Okay, you have already
come on this page and you have seen the
our provider called sales media when we
will you will try to access this then if
you are seeing uh the provider not want
this is probably high chance the
provider is exist but our server fails.
So we just want to make this message
more senseful. Okay, failed to fetch
provider and okay, it&#39;s a okay response.
Uh if you want you can create a error
here then you need to handle that error.
Okay, so I&#39;m not going to handle that
error. So I&#39;m just passing the 200.
Okay, so there and now what we want? We
want the original key. Okay, so to get
the original key, you can see the
original key. To get the original, we
need to decrypt. Okay, we need to
decrypt. So here we want IB. Yeah, it&#39;s
correct. AES secret key. Yeah, it&#39;s also
correct. And also we want API key. So
yeah, it&#39;s correct. Everything is
correct. And everything is look uh what
we need. And now I want to prefer this
to name it original API key. So original
API key. Okay. So this part is done from
here. And now it&#39;s time to do some
access operation here. So let rest.
Okay.
not result. I I always prefer to make
name sorts. Okay, so try catch start the
try catch block.
Yeah, this try catch statement. And now
here time to uh run the Xios. Okay, so
rest equals to a wait just we need to
wait. Okay, so provider URL. Okay, it&#39;s
correct the provider URL. We want the
provider URL. Okay. And this and we need
to pass the uh body. So in the body
which we have discussed uh already
discussed. So in the key we need to pass
our key which is decrypted key. It&#39;s our
original API key. And the second thing
we want to pass action. So action is
services not get service. Okay.
But I think it&#39;s also correct but we
need to just change this to this. Okay.
So now this will work. And now there is
also a problem. I forgoted to import it.
Okay. So import and if you don&#39;t know
how I know this the podi payload is
super easy uh you can go any website uh
on any service provider so I&#39;m using the
sales media but sales media doesn&#39;t
provide the documentation for that and
for the every SMM panel the
documentation and the technique are same
okay there is no different every SMM
panel have same kind of body structure
and same kind of API endpoint okay so I
am going to show you the cheap panel
okay I have used this cheap panel uh
it&#39;s really a good service provider
uh when you will login then and you can
you will go to their docs and in the
docs you will find okay I I am not
signing in here because I have forgotten
the credential for this uh
I think let me try yeah it&#39;s save in my
browser so not a problem for me
okay if you go here
API
yeah you can see there is a service list
key and the action service so so all the
docs is written here. If you want more
precise docs with code example, so you
can prefer just another panel, just
another pro panel provide you the PHP
script. Okay, example script. If you
know PHP, so you can also refer that.
Okay, by the way, I know PHP not much,
but I just able I&#39;m just able to
understand the PHP code. Uh if you uh
tell me the uh to do the code in PHP, so
I will raise my hand. Okay, it&#39;s beyond
my scope. Okay, so now here we need to
console the error. Okay, so
console
dot error.
Okay, and here we need to pass the
message. So fail to fetch provider
services.
Fail to
fetch
provider
services.
Just print the error.
And now return this. Okay. So return C
do.json. Okay. C do.json. JSON and this
one, this one and this one. So, uh just
success failed provider services null
and yeah everything is correct as I
want.
Okay. Okay.
Okay. Okay.
So, let me add okay.
I think I have done this part and now
it&#39;s time to come out from the try as
block there. Okay.
And now it&#39;s time to return. Okay. So
here we have the JSON successful f
successfully provider services f
successful provider services f
successfully yeah it&#39;s also correct uh
but I prefer to remove this provider and
also provider from here okay so I think
this is correct and as I want okay so
now the our route have been created and
now I have done with this part and now
if I come here not there yeah there and
now let&#39;s try to again run this okay
it&#39;s not running ah I need to reload it.
Okay. So now it&#39;s done. Uh there is no
error but also there is nothing. Okay.
So it&#39;s a sales med. Okay. Okay. I think
I have forgotten to select here. Okay.
So first let&#39;s select the Okay. So I
have selected and maybe just I am
waiting and hoping everything work fine.
Okay. So everything worked here and also
the result is null. Okay. Fail to fetch
uh provider services. Okay. Okay. So,
fail to fetch provider services. I don&#39;t
know where this error is come. Let me
see uh which part generated this error.
So, FV
and there is error and error is here.
Okay. So, I I&#39;m not sure why the error
is here. So, not a problem and not a big
deal for us. Uh let&#39;s open this and we
have the log we can say the await. Okay.
So there is a error and the error
request uh with status code 404.
Okay, it&#39;s if it&#39;s 404 then it&#39;s
probably high chances I have put the
wrong URL here. Okay, let me see.
Okay, I have chosen the wrong back end.
Okay. Uh, it&#39;s not it&#39;s not that. Uh,
it&#39;s this one. And and and and and and
yeah, this one
and here,
yeah, there is provider schema and there
is the API endpoint. And I don&#39;t know
why it&#39;s incorrect and why it&#39;s showing
the incorrect. But if I go to the sales
panel docs there and they haven&#39;t
mentioned the uh they all they also
haven&#39;t mentioned uh this part. Okay.
The end point of their uh service. Okay.
So let&#39;s try to see again.
Okay. So I got the uh reason of the
error. Okay. If we come here okay where
yeah you can see there is only act. So
we need to pass action. Okay. You can
see I have tested here. So we need to
pass accent. If we pass the action then
our error will gone. Okay. Uh so it&#39;s
not a big problem but sometime it&#39;s
really a uh worse thing to find. Okay.
Uh but in our case I have find it. So
not a problem. And now now again let me
try to uh just reload it. Okay. So maybe
after this after this change the our
error will gone. Okay. And I am I am I
don&#39;t want any error now. Okay. I want
to go everything seamless because I want
also want to work on the client side.
It&#39;s admin side and I also I want to
work on client side because because the
reason is this I have taken really a
long time to build this. Okay.
Okay.
So now the thing is this. Now let&#39;s try
it&#39;s spend pending. Okay. Yeah. 200. Now
let&#39;s see. Okay. Everything is coming
here. Okay. So now it&#39;s worked this
time. Okay. So now if we come here.
Okay, there is only some things I have
cancel 10 data. Okay, so if we hit 50,
so we have 50 data. Okay, so it&#39;s not a
problem. Yeah, it&#39;s worked and it&#39;s
really a good thing for us. And now what
we need to do? Uh let&#39;s we need to click
this not YouTube. Uh let me go to try to
Instagram.
Uh and now added successfully. Uh I want
to verify my database. This one uh this
one is my current database. And now
there
okay yeah there is the service okay uh
which currency is uh USD it&#39;s correct
provider ID it&#39;s four maybe I don&#39;t know
the uh ID of the provider yeah it&#39;s four
yeah I have already seen in the network
tab okay so it&#39;s four it&#39;s correct four
updated created everything is working as
expected okay so now let&#39;s add two one
or two more so this one and this one.
Okay. So maybe after this now let&#39;s try
again try to see our database.
So here is the database and it&#39;s not
loaded automatically. Let&#39;s try to
refresh it. Okay.
Okay. So now it&#39;s work. Now uh this
system our this system is working and
now it&#39;s fine also it&#39;s fine. Okay. Now
let&#39;s try to come on the category and
now let&#39;s create a category called
Instagram. Okay. Because we want to post
these on Instagram category. Okay. Uh,
okay. It&#39;s taking time because we are on
development server and I am using my 5
year old laptop. Okay. So that&#39;s why I&#39;m
planning to buy MacBook but the problem
is I don&#39;t want EMI. Okay.
Okay. So now it&#39;s done and now I am on
Instagram page. So there is Instagram
and now the save changes.
Yeah, it&#39;s done. It&#39;s successfully.
Okay. So this is created now and now if
we come here the service. Okay. So now
we have also service. Now let&#39;s try to
edit this and yeah it&#39;s if you want you
can change the name. Uh let me add my
profit $.3
and the category we have two category
Instagram and this and after the saving
yeah a category added successfully. Okay
so it&#39;s fine. So uh we have done this
part this category also updated in real
time. Okay. And I also want to add one
category here. The profit not same. Uh
let me change the profit Instagram.
Okay, it&#39;s correct. It&#39;s perfect. And
it&#39;s perfectly fine. Okay, I think there
is a problem. Uh if I English power
yeah it&#39;s so this is showing me previous
data not the latest one. Okay. Uh this
is the problem due to state. Okay. uh if
you want you can clear the state after
the saving uh your ris you can say after
the saving the things okay uh you can
clear the state from the front end okay
so it&#39;s a state problem and not a big
deal you can if you want you can do I&#39;m
not going to do that so it&#39;s a power and
now let&#39;s this one and I&#39;ll set this
Instagram okay
and now it&#39;s working and it&#39;s fine okay
so now we have created our ad full admin
panel We have users management section
which we have already present in uh our
template. Okay. So we have done this
part. We have done the services part and
it&#39;s uh for you. It&#39;s uh it&#39;s a puzzle
for you. You can say it&#39;s a puzzle or
you can say it&#39;s a task for you uh to uh
read the front end code and understand
the front end code and maybe build your
own something. Okay. If you want this by
the way this business on Google it&#39;s
really a good thing. Okay. many many
platforms. Okay. There are many new are
coming startup wants social media
marketing tools like SMM panels. Okay.